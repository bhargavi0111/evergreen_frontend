{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\SettingsPanel\\\\SettingsPanel.jsx\",\n  _s = $RefreshSig$();\n// // components/SettingsIcon.js\n// import React, { useState } from 'react';\n// import './SettingsPanel.css'; // Add your styles here\n// import { FaCog } from 'react-icons/fa'; // Using react-icons for settings icon\n\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\n//   const [showSettings, setShowSettings] = useState(false);\n\n//   const toggleSettingsPanel = () => {\n//     setShowSettings(!showSettings);\n//   };\n\n//   return (\n//     <div className=\"settings-container\">\n//       <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\n//         <FaCog />\n//       </div>\n//       {showSettings && (\n//         <div className=\"settings-panel\">\n//           <h3>Settings</h3>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               onChange={onToggleHeaderStyle}\n//             />\n//             Static Header\n//           </label>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SettingsPanel;\n\n// SettingsPanel.js\n// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import setTheme  from '../../redux/actions/themeActions';\n\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\n//   const dispatch = useDispatch();\n//   const currentTheme = useSelector((state) => state.theme.theme);\n\n//   const changeTheme = (newTheme) => {\n//     dispatch(setTheme(newTheme));\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\n//   };\n\n//   return (\n//     <div className=\"settings-panel\">\n//       <h3>Choose Theme</h3>\n//       <div className=\"theme-options\">\n//         <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\n//           Light\n//         </button>\n//         <button onClick={() => changeTheme('dark')} className={currentTheme === 'dark' ? 'active' : ''}>\n//           Dark\n//         </button>\n//         <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\n//           Nature\n//         </button>\n//       </div>\n//       <button onClick={onToggleHeaderStyle}>\n//         Toggle Sticky Header\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default SettingsPanel;\n\nimport React, { useState } from 'react';\nimport { FaCog } from 'react-icons/fa'; // FontAwesome cog icon\nimport { useDispatch, useSelector } from 'react-redux';\nimport setTheme from '../../redux/actions/themeActions';\nimport './SettingsPanel.css'; // Import the CSS styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPanel = ({\n  onToggleHeaderStyle\n}) => {\n  _s();\n  const [showSettings, setShowSettings] = useState(false); // State to toggle panel visibility\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(state => state.theme.theme);\n  const toggleSettingsPanel = () => {\n    setShowSettings(!showSettings);\n  };\n  const changeTheme = newTheme => {\n    dispatch(setTheme(newTheme));\n    document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-icon\",\n      onClick: toggleSettingsPanel,\n      children: /*#__PURE__*/_jsxDEV(FaCog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeTheme('light'),\n          className: currentTheme === 'light' ? 'active' : '',\n          children: \"Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeTheme('dark'),\n          className: currentTheme === 'dark' ? 'active' : '',\n          children: \"Dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeTheme('nature'),\n          className: currentTheme === 'nature' ? 'active' : '',\n          children: \"Nature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: onToggleHeaderStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), \"Static Header\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPanel, \"0vKe7liU9oXNQHbTEvPEJtTcff4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SettingsPanel;\nexport default SettingsPanel;\nvar _c;\n$RefreshReg$(_c, \"SettingsPanel\");","map":{"version":3,"names":["React","useState","FaCog","useDispatch","useSelector","setTheme","jsxDEV","_jsxDEV","SettingsPanel","onToggleHeaderStyle","_s","showSettings","setShowSettings","dispatch","currentTheme","state","theme","toggleSettingsPanel","changeTheme","newTheme","document","documentElement","setAttribute","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/SettingsPanel/SettingsPanel.jsx"],"sourcesContent":["// // components/SettingsIcon.js\r\n// import React, { useState } from 'react';\r\n// import './SettingsPanel.css'; // Add your styles here\r\n// import { FaCog } from 'react-icons/fa'; // Using react-icons for settings icon\r\n\r\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\r\n//   const [showSettings, setShowSettings] = useState(false);\r\n\r\n//   const toggleSettingsPanel = () => {\r\n//     setShowSettings(!showSettings);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"settings-container\">\r\n//       <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\r\n//         <FaCog />\r\n//       </div>\r\n//       {showSettings && (\r\n//         <div className=\"settings-panel\">\r\n//           <h3>Settings</h3>\r\n//           <label>\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               onChange={onToggleHeaderStyle}\r\n//             />\r\n//             Static Header\r\n//           </label>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SettingsPanel;\r\n\r\n// SettingsPanel.js\r\n// import React from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import setTheme  from '../../redux/actions/themeActions';\r\n\r\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\r\n//   const dispatch = useDispatch();\r\n//   const currentTheme = useSelector((state) => state.theme.theme);\r\n\r\n//   const changeTheme = (newTheme) => {\r\n//     dispatch(setTheme(newTheme));\r\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"settings-panel\">\r\n//       <h3>Choose Theme</h3>\r\n//       <div className=\"theme-options\">\r\n//         <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\r\n//           Light\r\n//         </button>\r\n//         <button onClick={() => changeTheme('dark')} className={currentTheme === 'dark' ? 'active' : ''}>\r\n//           Dark\r\n//         </button>\r\n//         <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\r\n//           Nature\r\n//         </button>\r\n//       </div>\r\n//       <button onClick={onToggleHeaderStyle}>\r\n//         Toggle Sticky Header\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SettingsPanel;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { FaCog } from 'react-icons/fa'; // FontAwesome cog icon\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport setTheme from '../../redux/actions/themeActions';\r\nimport './SettingsPanel.css'; // Import the CSS styling\r\n\r\nconst SettingsPanel = ({ onToggleHeaderStyle }) => {\r\n  const [showSettings, setShowSettings] = useState(false); // State to toggle panel visibility\r\n  const dispatch = useDispatch();\r\n  const currentTheme = useSelector((state) => state.theme.theme);\r\n\r\n  const toggleSettingsPanel = () => {\r\n    setShowSettings(!showSettings);\r\n  };\r\n\r\n  const changeTheme = (newTheme) => {\r\n    dispatch(setTheme(newTheme));\r\n    document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      {/* Settings Icon */}\r\n      <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\r\n        <FaCog />\r\n      </div>\r\n\r\n      {/* Conditionally Render Settings Panel */}\r\n      {showSettings && (\r\n        <div className=\"settings-panel\">\r\n          <h3>Settings</h3>\r\n          <div className=\"theme-options\">\r\n            <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\r\n              Light\r\n            </button>\r\n            <button onClick={() => changeTheme('dark')} className={currentTheme === 'dark' ? 'active' : ''}>\r\n              Dark\r\n            </button>\r\n            <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\r\n              Nature\r\n            </button>\r\n          </div>\r\n          <label>\r\n            <input type=\"checkbox\" onChange={onToggleHeaderStyle} />\r\n            Static Header\r\n          </label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPanel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}