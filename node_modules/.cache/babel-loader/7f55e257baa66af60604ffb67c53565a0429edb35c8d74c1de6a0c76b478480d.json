{"ast":null,"code":"\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchAllProducts } from '../redux/actions/shopActions'; // Adjust import path as needed\n// import { useParams } from 'react-router-dom';\n// import Breadcrum from '../Components/Breadcrums/Breadcrum';\n// import ProductDisplay from '../Components/ProductDisplay/ProductDisplay';\n// import DescriptionBox from '../Components/DescriptionBox/DescriptionBox';\n// import RelatedProducts from '../Components/RelatedProducts/RelatedProducts';\n\n// const Product = () => {\n//   const { productId } = useParams();\n//   const dispatch = useDispatch();\n\n//   const { products, loading, error } = useSelector((state) => state.shop || { products: [], loading: false, error: null });\n\n//   useEffect(() => {\n//     dispatch(fetchAllProducts());\n//   }, [dispatch]);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>Error: {error}</div>;\n\n//   const product = products.find((p) => p._id === productId);\n\n//   if (!product) return <div>Product not found</div>;\n\n//   return (\n//     <div>\n//       <Breadcrum product={product} />\n//       <ProductDisplay product={product} />\n//       {/* <DescriptionBox product={product} /> */}\n//       {/* <RelatedProducts productId={productId} /> */}\n//     </div>\n//   );\n// };\n\n// export default Product;","map":{"version":3,"names":[],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Pages/Product.jsx"],"sourcesContent":["\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { fetchAllProducts } from '../redux/actions/shopActions'; // Adjust import path as needed\r\n// import { useParams } from 'react-router-dom';\r\n// import Breadcrum from '../Components/Breadcrums/Breadcrum';\r\n// import ProductDisplay from '../Components/ProductDisplay/ProductDisplay';\r\n// import DescriptionBox from '../Components/DescriptionBox/DescriptionBox';\r\n// import RelatedProducts from '../Components/RelatedProducts/RelatedProducts';\r\n\r\n// const Product = () => {\r\n//   const { productId } = useParams();\r\n//   const dispatch = useDispatch();\r\n\r\n//   const { products, loading, error } = useSelector((state) => state.shop || { products: [], loading: false, error: null });\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchAllProducts());\r\n//   }, [dispatch]);\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div>Error: {error}</div>;\r\n\r\n//   const product = products.find((p) => p._id === productId);\r\n\r\n//   if (!product) return <div>Product not found</div>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <Breadcrum product={product} />\r\n//       <ProductDisplay product={product} />\r\n//       {/* <DescriptionBox product={product} /> */}\r\n//       {/* <RelatedProducts productId={productId} /> */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Product;"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}