{"ast":null,"code":"import axios from 'axios';\nconst initialState = {\n  products: [] // Ensure products is initialized as an empty array\n};\n\n// export const fetchAllProducts = () => async (dispatch) => {\n//   try {\n//     const response = await axios.get('http://localhost:4000/allproducts');\n//     dispatch({ type: 'FETCH_PRODUCTS_SUCCESS', payload: response.data });\n//   } catch (error) {\n//     dispatch({ type: 'FETCH_PRODUCTS_FAILURE', payload: error.message });\n//   }\n// };\n\n// export const fetchProductsByCategory = (category) => async (dispatch) => {\n//   try {\n//     const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\n//     dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_SUCCESS', payload: response.data });\n//   } catch (error) {\n//     dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_FAILURE', payload: error.message });\n//   }\n// };\nexport const fetchAllProducts = () => async dispatch => {\n  dispatch({\n    type: 'FETCH_PRODUCTS_REQUEST'\n  });\n  try {\n    const response = await axios.get('http://localhost:4000/allproducts');\n    console.log(\"fetchAllProducts success\", response.dat);\n    dispatch({\n      type: 'FETCH_PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'FETCH_PRODUCTS_FAILURE',\n      payload: error.message\n    });\n  }\n};\n\n//   export const fetchProductsByCategory = (category) => async (dispatch) => {\n//     dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_REQUEST' });\n//     try {\n//       const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\n//       dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_SUCCESS', payload: response.data });\n//       console.log('API Response:', response.data);\n//     } catch (error) {\n//       dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_FAILURE', payload: error.message });\n//     }\n//   };\n// Example fetchProductsByCategory action\nexport const fetchProductsByCategory = category => async dispatch => {\n  try {\n    dispatch({\n      type: 'FETCH_PRODUCTS_REQUEST'\n    });\n    const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\n    console.log(response.data);\n    dispatch({\n      type: 'FETCH_PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'FETCH_PRODUCTS_FAILURE',\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","initialState","products","fetchAllProducts","dispatch","type","response","get","console","log","dat","payload","data","error","message","fetchProductsByCategory","category"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/shopActions.jsx"],"sourcesContent":["import axios from 'axios';\r\nconst initialState = {\r\n  products: [], // Ensure products is initialized as an empty array\r\n};\r\n\r\n// export const fetchAllProducts = () => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.get('http://localhost:4000/allproducts');\r\n//     dispatch({ type: 'FETCH_PRODUCTS_SUCCESS', payload: response.data });\r\n//   } catch (error) {\r\n//     dispatch({ type: 'FETCH_PRODUCTS_FAILURE', payload: error.message });\r\n//   }\r\n// };\r\n\r\n// export const fetchProductsByCategory = (category) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\r\n//     dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_SUCCESS', payload: response.data });\r\n//   } catch (error) {\r\n//     dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_FAILURE', payload: error.message });\r\n//   }\r\n// };\r\nexport const fetchAllProducts = () => async (dispatch) => {\r\n    dispatch({ type: 'FETCH_PRODUCTS_REQUEST' });\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/allproducts');\r\n      console.log(\"fetchAllProducts success\",response.dat)\r\n      dispatch({ type: 'FETCH_PRODUCTS_SUCCESS', payload: response.data });\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_PRODUCTS_FAILURE', payload: error.message });\r\n    }\r\n  };\r\n  \r\n//   export const fetchProductsByCategory = (category) => async (dispatch) => {\r\n//     dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_REQUEST' });\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\r\n//       dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_SUCCESS', payload: response.data });\r\n//       console.log('API Response:', response.data);\r\n//     } catch (error) {\r\n//       dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_FAILURE', payload: error.message });\r\n//     }\r\n//   };\r\n  // Example fetchProductsByCategory action\r\nexport const fetchProductsByCategory = (category) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'FETCH_PRODUCTS_REQUEST' });\r\n      const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\r\n      console.log(response.data)\r\n      dispatch({\r\n        type: 'FETCH_PRODUCTS_SUCCESS',\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'FETCH_PRODUCTS_FAILURE',\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE,CAAE;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACtDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAyB,CAAC,CAAC;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,mCAAmC,CAAC;IACrEC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAACH,QAAQ,CAACI,GAAG,CAAC;IACpDN,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEM,OAAO,EAAEL,QAAQ,CAACM;IAAK,CAAC,CAAC;EACtE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEM,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACtE;AACF,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF,OAAO,MAAMC,uBAAuB,GAAIC,QAAQ,IAAK,MAAOZ,QAAQ,IAAK;EACrE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAyB,CAAC,CAAC;IAC5C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,qCAAoCS,QAAS,EAAC,CAAC;IACjFR,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACM,IAAI,CAAC;IAC1BR,QAAQ,CAAC;MACPC,IAAI,EAAE,wBAAwB;MAC9BM,OAAO,EAAEL,QAAQ,CAACM;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPC,IAAI,EAAE,wBAAwB;MAC9BM,OAAO,EAAEE,KAAK,CAACC;IACjB,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}