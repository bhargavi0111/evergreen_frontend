{"ast":null,"code":"// import {  ADD_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY, FETCH_CART_ITEMS} from '../actions/cartActions';\n\n// const initialState = {\n//   cartItems: [],\n// };\n\n// const cartReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case FETCH_CART_ITEMS:\n//       return {\n//         ...state,\n//         cartItems: action.payload,\n//       };\n//     case ADD_TO_CART:\n//       const existingItem = state.cartItems.find(item => item._id === action.payload._id);\n//       if (existingItem) {\n//         return {\n//           ...state,\n//           cartItems: state.cartItems.map(item =>\n//             item._id === action.payload._id\n//               ? { ...item, quantity: item.quantity + 1 }\n//               : item\n//           ),\n//         };\n//       } else {\n//         return {\n//           ...state,\n//           cartItems: [...state.cartItems, action.payload],\n//         };\n//       }\n//     case REMOVE_FROM_CART:\n//       return {\n//         ...state,\n//         cartItems: state.cartItems.filter(item => item._id !== action.payload.productId),\n//       };\n//     case UPDATE_CART_QUANTITY:\n//       return {\n//         ...state,\n//         cartItems: state.cartItems.map(item =>\n//           item._id === action.payload.productId\n//             ? { ...item, quantity: action.payload.quantity }\n//             : item\n//         ),\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default cartReducer;\n\n// src/redux/cartReducer.js\nimport { ADD_TO_CART, REMOVE_FROM_CART, GET_CART, CART_ERROR } from './';\nconst initialState = {\n  items: [],\n  error: null\n};\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CART:\n      return {\n        ...state,\n        items: action.payload,\n        error: null\n      };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        items: action.payload,\n        error: null\n      };\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload),\n        error: null\n      };\n    case CART_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["ADD_TO_CART","REMOVE_FROM_CART","GET_CART","CART_ERROR","initialState","items","error","cartReducer","state","action","type","payload","filter","item","_id"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/reducers/cartReducer.jsx"],"sourcesContent":["// import {  ADD_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY, FETCH_CART_ITEMS} from '../actions/cartActions';\r\n\r\n// const initialState = {\r\n//   cartItems: [],\r\n// };\r\n\r\n\r\n\r\n\r\n// const cartReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case FETCH_CART_ITEMS:\r\n//       return {\r\n//         ...state,\r\n//         cartItems: action.payload,\r\n//       };\r\n//     case ADD_TO_CART:\r\n//       const existingItem = state.cartItems.find(item => item._id === action.payload._id);\r\n//       if (existingItem) {\r\n//         return {\r\n//           ...state,\r\n//           cartItems: state.cartItems.map(item =>\r\n//             item._id === action.payload._id\r\n//               ? { ...item, quantity: item.quantity + 1 }\r\n//               : item\r\n//           ),\r\n//         };\r\n//       } else {\r\n//         return {\r\n//           ...state,\r\n//           cartItems: [...state.cartItems, action.payload],\r\n//         };\r\n//       }\r\n//     case REMOVE_FROM_CART:\r\n//       return {\r\n//         ...state,\r\n//         cartItems: state.cartItems.filter(item => item._id !== action.payload.productId),\r\n//       };\r\n//     case UPDATE_CART_QUANTITY:\r\n//       return {\r\n//         ...state,\r\n//         cartItems: state.cartItems.map(item =>\r\n//           item._id === action.payload.productId\r\n//             ? { ...item, quantity: action.payload.quantity }\r\n//             : item\r\n//         ),\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default cartReducer;\r\n\r\n// src/redux/cartReducer.js\r\nimport { ADD_TO_CART, REMOVE_FROM_CART, GET_CART, CART_ERROR } from './';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  error: null\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CART:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        error: null\r\n      };\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        error: null\r\n      };\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== action.payload),\r\n        error: null\r\n      };\r\n    case CART_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,IAAI;AAExE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,QAAQ;MACX,OAAO;QACL,GAAGM,KAAK;QACRH,KAAK,EAAEI,MAAM,CAACE,OAAO;QACrBL,KAAK,EAAE;MACT,CAAC;IACH,KAAKN,WAAW;MACd,OAAO;QACL,GAAGQ,KAAK;QACRH,KAAK,EAAEI,MAAM,CAACE,OAAO;QACrBL,KAAK,EAAE;MACT,CAAC;IACH,KAAKL,gBAAgB;MACnB,OAAO;QACL,GAAGO,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAAC;QAC9DL,KAAK,EAAE;MACT,CAAC;IACH,KAAKH,UAAU;MACb,OAAO;QACL,GAAGK,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}