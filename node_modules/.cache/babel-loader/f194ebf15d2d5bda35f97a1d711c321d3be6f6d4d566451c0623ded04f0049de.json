{"ast":null,"code":"// import axios from 'axios';\n\n// // Action Types\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// // API URL\n// const API_URL = 'http://localhost:4000/auth';\n\n// // Action Creators\n// export const login = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/login`, userData);\n//     const { token } = response.data;\n\n//     // Save token to localStorage or cookies as needed\n//     localStorage.setItem('token', token);\n\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: token,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: LOGIN_FAIL,\n//       payload: error.response.data.errors,\n//     });\n//   }\n// };\n\n// export const signup = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/signup`, userData);\n//     const { token } = response.data;\n\n//     // Save token to localStorage or cookies as needed\n//     localStorage.setItem('token', token);\n\n//     dispatch({\n//       type: SIGNUP_SUCCESS,\n//       payload: token,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: SIGNUP_FAIL,\n//       payload: error.response.data.errors,\n//     });\n//   }\n// };\n\n// // Logout Action\n// export const logout = () => (dispatch) => {\n//   // Remove token from localStorage or cookies\n//   localStorage.removeItem('token');\n\n//   dispatch({\n//     type: LOGOUT,\n//   });\n// };\nimport { LOGIN_SUCCESS, LOGIN_FAIL, SIGNUP_SUCCESS, SIGNUP_FAIL, LOGOUT } from '../actions/authActions';\nconst initialState = {\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  user: null,\n  error: null\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        token: action.payload,\n        error: null\n      };\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n        token: null,\n        error: action.payload\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        token: null,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","initialState","token","localStorage","getItem","isAuthenticated","user","error","authReducer","state","action","type","payload"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.jsx"],"sourcesContent":["// import axios from 'axios';\r\n\r\n// // Action Types\r\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\r\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n// export const LOGOUT = 'LOGOUT';\r\n\r\n// // API URL\r\n// const API_URL = 'http://localhost:4000/auth';\r\n\r\n// // Action Creators\r\n// export const login = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/login`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Save token to localStorage or cookies as needed\r\n//     localStorage.setItem('token', token);\r\n\r\n//     dispatch({\r\n//       type: LOGIN_SUCCESS,\r\n//       payload: token,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: LOGIN_FAIL,\r\n//       payload: error.response.data.errors,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const signup = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/signup`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Save token to localStorage or cookies as needed\r\n//     localStorage.setItem('token', token);\r\n\r\n//     dispatch({\r\n//       type: SIGNUP_SUCCESS,\r\n//       payload: token,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: SIGNUP_FAIL,\r\n//       payload: error.response.data.errors,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Logout Action\r\n// export const logout = () => (dispatch) => {\r\n//   // Remove token from localStorage or cookies\r\n//   localStorage.removeItem('token');\r\n\r\n//   dispatch({\r\n//     type: LOGOUT,\r\n//   });\r\n// };\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  LOGOUT,\r\n} from '../actions/authActions';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token') || null,\r\n  isAuthenticated: !!localStorage.getItem('token'),\r\n  user: null,\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        token: action.payload,\r\n        error: null,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n    case SIGNUP_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        token: null,\r\n        error: action.payload,\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        token: null,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SACEA,aAAa,EACbC,UAAU,EACVC,cAAc,EACdC,WAAW,EACXC,MAAM,QACD,wBAAwB;AAE/B,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;EAC5CC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChDE,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKf,aAAa;IAClB,KAAKE,cAAc;MACjB,OAAO;QACL,GAAGW,KAAK;QACRJ,eAAe,EAAE,IAAI;QACrBH,KAAK,EAAEQ,MAAM,CAACE,OAAO;QACrBL,KAAK,EAAE;MACT,CAAC;IAEH,KAAKV,UAAU;IACf,KAAKE,WAAW;MACd,OAAO;QACL,GAAGU,KAAK;QACRJ,eAAe,EAAE,KAAK;QACtBH,KAAK,EAAE,IAAI;QACXK,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKZ,MAAM;MACT,OAAO;QACL,GAAGS,KAAK;QACRJ,eAAe,EAAE,KAAK;QACtBH,KAAK,EAAE,IAAI;QACXI,IAAI,EAAE;MACR,CAAC;IAEH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}