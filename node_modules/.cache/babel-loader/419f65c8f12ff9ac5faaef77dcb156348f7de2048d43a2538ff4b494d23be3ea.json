{"ast":null,"code":"// // authActions.js\n\n// import axios from 'axios';\n\n// // Action creator for login\n// export const login = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, userData);\n//     const { token } = response.data;\n\n//     // Store the token in local storage or Redux store\n//     localStorage.setItem('token', token);\n//     dispatch({ type: 'LOGIN_SUCCESS', payload: token });\n//   } catch (error) {\n//     console.error('Login error:', error.response ? error.response.data : error.message);\n//     dispatch({ type: 'LOGIN_FAIL', payload: error.response ? error.response.data : error.message });\n//   }\n// };\n\n// export const signup = (userData) => async (dispatch) => {\n//     try {\n//       const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/signup`, userData);\n//       const { token } = response.data;\n\n//       // Store the token in local storage or Redux store\n//       localStorage.setItem('token', token);\n//       dispatch({ type: 'SIGNUP_SUCCESS', payload: token });\n//     } catch (error) {\n//       console.error('Signup error:', error.response ? error.response.data : error.message);\n//       dispatch({ type: 'SIGNUP_FAIL', payload: error.response ? error.response.data : error.message });\n//     }\n//   };\n\n//   // Action creator for forgot password\n//   export const forgotPassword = (userData) => async (dispatch) => {\n//     try {\n//       await axios.post(`${process.env.REACT_APP_API_URL}/auth/forgot-password`, userData);\n//       dispatch({ type: 'FORGOT_PASSWORD_SUCCESS' });\n//     } catch (error) {\n//       console.error('Forgot password error:', error.response ? error.response.data : error.message);\n//       dispatch({ type: 'FORGOT_PASSWORD_FAIL', payload: error.response ? error.response.data : error.message });\n//     }\n//   };\nimport axios from 'axios';\n\n// Action Types\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\n// API URL\nconst API_URL = 'http://localhost:4000/auth';\n\n// Action Creators\nexport const login = userData => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, userData);\n    const {\n      token\n    } = response.data;\n\n    // Save token to localStorage or cookies as needed\n    localStorage.setItem('token', token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: token\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.errors\n    });\n  }\n};\nexport const signup = userData => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL}/signup`, userData);\n    const {\n      token\n    } = response.data;\n\n    // Save token to localStorage or cookies as needed\n    localStorage.setItem('token', token);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: token\n    });\n  } catch (error) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: error.response.data.errors\n    });\n  }\n};\n\n// Logout Action\nexport const logout = () => dispatch => {\n  // Remove token from localStorage or cookies\n  localStorage.removeItem('token');\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","API_URL","login","userData","dispatch","response","post","token","data","localStorage","setItem","type","payload","error","errors","signup","logout","removeItem"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.jsx"],"sourcesContent":["// // authActions.js\r\n\r\n// import axios from 'axios';\r\n\r\n// // Action creator for login\r\n// export const login = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Store the token in local storage or Redux store\r\n//     localStorage.setItem('token', token);\r\n//     dispatch({ type: 'LOGIN_SUCCESS', payload: token });\r\n//   } catch (error) {\r\n//     console.error('Login error:', error.response ? error.response.data : error.message);\r\n//     dispatch({ type: 'LOGIN_FAIL', payload: error.response ? error.response.data : error.message });\r\n//   }\r\n// };\r\n\r\n// export const signup = (userData) => async (dispatch) => {\r\n//     try {\r\n//       const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/signup`, userData);\r\n//       const { token } = response.data;\r\n  \r\n//       // Store the token in local storage or Redux store\r\n//       localStorage.setItem('token', token);\r\n//       dispatch({ type: 'SIGNUP_SUCCESS', payload: token });\r\n//     } catch (error) {\r\n//       console.error('Signup error:', error.response ? error.response.data : error.message);\r\n//       dispatch({ type: 'SIGNUP_FAIL', payload: error.response ? error.response.data : error.message });\r\n//     }\r\n//   };\r\n  \r\n//   // Action creator for forgot password\r\n//   export const forgotPassword = (userData) => async (dispatch) => {\r\n//     try {\r\n//       await axios.post(`${process.env.REACT_APP_API_URL}/auth/forgot-password`, userData);\r\n//       dispatch({ type: 'FORGOT_PASSWORD_SUCCESS' });\r\n//     } catch (error) {\r\n//       console.error('Forgot password error:', error.response ? error.response.data : error.message);\r\n//       dispatch({ type: 'FORGOT_PASSWORD_FAIL', payload: error.response ? error.response.data : error.message });\r\n//     }\r\n//   };\r\nimport axios from 'axios';\r\n\r\n// Action Types\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n// API URL\r\nconst API_URL = 'http://localhost:4000/auth';\r\n\r\n// Action Creators\r\nexport const login = (userData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, userData);\r\n    const { token } = response.data;\r\n\r\n    // Save token to localStorage or cookies as needed\r\n    localStorage.setItem('token', token);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: token,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response.data.errors,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signup = (userData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/signup`, userData);\r\n    const { token } = response.data;\r\n\r\n    // Save token to localStorage or cookies as needed\r\n    localStorage.setItem('token', token);\r\n\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: token,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n      payload: error.response.data.errors,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout Action\r\nexport const logout = () => (dispatch) => {\r\n  // Remove token from localStorage or cookies\r\n  localStorage.removeItem('token');\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,MAAMC,OAAO,GAAG,4BAA4B;;AAE5C;AACA,OAAO,MAAMC,KAAK,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAE,GAAEL,OAAQ,QAAO,EAAEE,QAAQ,CAAC;IAC/D,MAAM;MAAEI;IAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;;IAE/B;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IAEpCH,QAAQ,CAAC;MACPO,IAAI,EAAEf,aAAa;MACnBgB,OAAO,EAAEL;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPO,IAAI,EAAEd,UAAU;MAChBe,OAAO,EAAEC,KAAK,CAACR,QAAQ,CAACG,IAAI,CAACM;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAIZ,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAE,GAAEL,OAAQ,SAAQ,EAAEE,QAAQ,CAAC;IAChE,MAAM;MAAEI;IAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;;IAE/B;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IAEpCH,QAAQ,CAAC;MACPO,IAAI,EAAEb,cAAc;MACpBc,OAAO,EAAEL;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPO,IAAI,EAAEZ,WAAW;MACjBa,OAAO,EAAEC,KAAK,CAACR,QAAQ,CAACG,IAAI,CAACM;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAOZ,QAAQ,IAAK;EACxC;EACAK,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;EAEhCb,QAAQ,CAAC;IACPO,IAAI,EAAEX;EACR,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}