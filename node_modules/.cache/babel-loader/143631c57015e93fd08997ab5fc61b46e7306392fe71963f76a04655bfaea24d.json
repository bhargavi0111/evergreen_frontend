{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\CartItems\\\\CartItems.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import \"./CartItems.css\";\n// import cross_icon from \"../Assets/cart_cross_icon.png\";\n// import { useSelector, useDispatch } from \"react-redux\";\n\n// import { getCart, updateCartQuantity, removeFromCart } from '../../redux/actions/cartActions';\n\n// const CartItems = () => {\n//   const dispatch = useDispatch();\n//   const cartItems = useSelector(state => state.cart.items);\n//   const error = useSelector(state => state.cart.error);\n//   const loading = useSelector(state => state.cart.loading);\n\n//   useEffect(() => {\n//     dispatch(getCart());\n//   }, [dispatch]);\n\n//   const handleIncrease = (itemId) => {\n//     const item = cartItems.find(item => item._id === itemId);\n//     if (item) {\n//       dispatch(updateCartQuantity(itemId, item.quantity + 1));\n//     }\n//   };\n\n//   const handleDecrease = (itemId) => {\n//     const item = cartItems.find(item => item._id === itemId);\n//     if (item && item.quantity > 1) {\n//       dispatch(updateCartQuantity(itemId, item.quantity - 1));\n//     }\n//   };\n\n//   const handleRemove = (itemId) => {\n//     dispatch(removeFromCart(itemId));\n//   };\n//   if (loading) {\n//     return <div>Loading cart items...</div>;\n//   }\n\n//   if (error) {\n//     return (\n//       <div>\n//         <p>Error loading cart: {error}</p>\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"cart-container\">\n//       <h1>Your Cart</h1>\n//       {cartItems.length === 0 ? (\n//         <p>Your cart is empty</p>\n//       ) : (\n//         <ul className=\"cart-list\">\n//           {cartItems.map(item => (\n//             <li key={item._id} className=\"cart-item\">\n//               <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\n//               <div className=\"cart-item-details\">\n//                 <h2>{item.name}</h2>\n//                 <p>Price: ₹{item.new_price}</p>\n//                 <p>Quantity: {item.quantity}</p>\n//                 <button onClick={() => handleDecrease(item._id)} className=\"quantity-button\">-</button>\n//                 <button onClick={() => handleIncrease(item._id)} className=\"quantity-button\">+</button>\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\n//                   Remove\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//       {cartItems.length > 0 && (\n//         <div className=\"cart-total\">\n//           <h2>Total: ₹{cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\n//         </div>\n//       )}\n//     </div>\n\n// );\n// };\n\n// export default CartItems;\n\nimport React, { useEffect } from \"react\";\nimport \"./CartItems.css\";\nimport cross_icon from \"../Assets/cart_cross_icon.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCart, updateCartQuantity, removeFromCart, addToCart } from '../../redux/actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItems = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items: cartItems,\n    loading,\n    error,\n    updating\n  } = useSelector(state => state.cart);\n  // const error = useSelector(state => state.cart.error);\n  // const loading = useSelector(state => state.cart.loading);\n\n  useEffect(() => {\n    dispatch(getCart());\n  }, [dispatch]);\n  useEffect(() => {}, [cartItems]);\n  console.log(\"Cart items in UI:\", cartItems);\n  const handleRemove = itemId => {\n    dispatch(removeFromCart(itemId)).then(() => {\n      dispatch(getCart()); // Refresh cart data after removing\n    });\n  };\n\n  const handleIncrease = itemId => {\n    const item = cartItems.find(item => item._id === itemId);\n    if (item) {\n      dispatch(updateCartQuantity(itemId, item.quantity + 1));\n    }\n    dispatch(getCart());\n  };\n  const handleDecrease = itemId => {\n    const item = cartItems.find(item => item._id === itemId);\n    if (item && item.quantity > 1) {\n      dispatch(updateCartQuantity(itemId, item.quantity - 1));\n    }\n    dispatch(getCart());\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"Loading cart items...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error loading cart: \", error.message || error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(getCart()),\n        className: \"retry-button\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cart-list\",\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:4000${item.image}`,\n          alt: item.name,\n          className: \"cart-item-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \\u20B9\", item.new_price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDecrease(item._id),\n              className: \"quantity-button\",\n              disabled: updating[item._id],\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleIncrease(item._id),\n              className: \"quantity-button\",\n              disabled: updating[item._id],\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemove(item._id),\n              className: \"remove-button\",\n              disabled: updating[item._id],\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-total\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total: \\u20B9\", cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(CartItems, \"Xh7q7gCIO54xXxvD4QN5XjFMeXk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CartItems;\nexport default CartItems;\n\n// import React, { useEffect } from \"react\";\n// import \"./CartItems.css\";\n// import cross_icon from \"../Assets/cart_cross_icon.png\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { getCart, updateCartQuantity, removeFromCart } from '../../redux/actions/cartActions';\n\n// const CartItems = () => {\n//   const dispatch = useDispatch();\n//   const cartItems = useSelector(state => state.cart.items || []); // Default to empty array\n//   const error = useSelector(state => state.cart.error);\n//   const loading = useSelector(state => state.cart.loading);\n\n//   useEffect(() => {\n//     dispatch(getCart());\n//   }, [dispatch]);\n\n//   if (loading) {\n//     return <div className=\"loading-indicator\">Loading cart items...</div>;\n//   }\n\n//   if (error) {\n//     return (\n//       <div className=\"error-container\">\n//         <p>Error loading cart: {error.message || error}</p>\n//         <button onClick={() => dispatch(getCart())} className=\"retry-button\">Try Again</button>\n//       </div>\n//     );\n//   }\n\n//   const handleRemove = (itemId) => {\n//     dispatch(removeFromCart(itemId)).then(() => {\n//       dispatch(getCart()); // Refresh cart data after removing\n//     });\n//   };\n\n//   const handleIncrease = (itemId) => {\n//     const item = cartItems.find(item => item._id === itemId);\n//     if (item) {\n//       dispatch(updateCartQuantity(itemId, item.quantity + 1));\n//     }\n//   dispatch(getCart());\n\n//   };\n\n//   const handleDecrease = (itemId) => {\n//     const item = cartItems.find(item => item._id === itemId);\n//     if (item && item.quantity > 1) {\n//       dispatch(updateCartQuantity(itemId, item.quantity - 1));\n//     }\n//     dispatch(getCart());\n\n//   };\n\n//   return (\n//     <div className=\"cart-container\">\n//       <h1>Your Cart</h1>\n//       {cartItems.length === 0 ? (\n//         <p>Your cart is empty</p>\n//       ) : (\n//         <ul className=\"cart-list\">\n//           {cartItems.map(item => (\n//             <li key={item._id} className=\"cart-item\">\n//               <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\n//               <div className=\"cart-item-details\">\n//                 <h2>{item.name}</h2>\n//                 <p>Price: ₹{item.new_price}</p>\n//                 <p>Quantity: {item.quantity}</p>\n//                 <div className=\"cart-item-actions\">\n//                   <button onClick={() => handleDecrease(item._id)} className=\"quantity-button\">-</button>\n//                   <button onClick={() => handleIncrease(item._id)} className=\"quantity-button\">+</button>\n//                   <button onClick={() => handleRemove(item._id)} className=\"remove-button\">Remove</button>\n//                 </div>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//       {cartItems.length > 0 && (\n//         <div className=\"cart-total\">\n//           <h2>Total: ₹{cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CartItems;\nvar _c;\n$RefreshReg$(_c, \"CartItems\");","map":{"version":3,"names":["React","useEffect","cross_icon","useSelector","useDispatch","getCart","updateCartQuantity","removeFromCart","addToCart","jsxDEV","_jsxDEV","CartItems","_s","dispatch","items","cartItems","loading","error","updating","state","cart","console","log","handleRemove","itemId","then","handleIncrease","item","find","_id","quantity","handleDecrease","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onClick","length","map","src","image","alt","name","new_price","disabled","reduce","total","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/CartItems/CartItems.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import \"./CartItems.css\";\r\n// import cross_icon from \"../Assets/cart_cross_icon.png\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n\r\n\r\n// import { getCart, updateCartQuantity, removeFromCart } from '../../redux/actions/cartActions';\r\n\r\n// const CartItems = () => {\r\n//   const dispatch = useDispatch();\r\n//   const cartItems = useSelector(state => state.cart.items);\r\n//   const error = useSelector(state => state.cart.error);\r\n//   const loading = useSelector(state => state.cart.loading);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getCart());\r\n//   }, [dispatch]);\r\n\r\n//   const handleIncrease = (itemId) => {\r\n//     const item = cartItems.find(item => item._id === itemId);\r\n//     if (item) {\r\n//       dispatch(updateCartQuantity(itemId, item.quantity + 1));\r\n//     }\r\n//   };\r\n\r\n//   const handleDecrease = (itemId) => {\r\n//     const item = cartItems.find(item => item._id === itemId);\r\n//     if (item && item.quantity > 1) {\r\n//       dispatch(updateCartQuantity(itemId, item.quantity - 1));\r\n//     }\r\n//   };\r\n\r\n//   const handleRemove = (itemId) => {\r\n//     dispatch(removeFromCart(itemId));\r\n//   };\r\n//   if (loading) {\r\n//     return <div>Loading cart items...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div>\r\n//         <p>Error loading cart: {error}</p>\r\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"cart-container\">\r\n//       <h1>Your Cart</h1>\r\n//       {cartItems.length === 0 ? (\r\n//         <p>Your cart is empty</p>\r\n//       ) : (\r\n//         <ul className=\"cart-list\">\r\n//           {cartItems.map(item => (\r\n//             <li key={item._id} className=\"cart-item\">\r\n//               <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\r\n//               <div className=\"cart-item-details\">\r\n//                 <h2>{item.name}</h2>\r\n//                 <p>Price: ₹{item.new_price}</p>\r\n//                 <p>Quantity: {item.quantity}</p>\r\n//                 <button onClick={() => handleDecrease(item._id)} className=\"quantity-button\">-</button>\r\n//                 <button onClick={() => handleIncrease(item._id)} className=\"quantity-button\">+</button>\r\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\r\n//                   Remove\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//       {cartItems.length > 0 && (\r\n//         <div className=\"cart-total\">\r\n//           <h2>Total: ₹{cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n   \r\n// );\r\n// };\r\n  \r\n\r\n\r\n// export default CartItems;\r\n\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport \"./CartItems.css\";\r\nimport cross_icon from \"../Assets/cart_cross_icon.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCart, updateCartQuantity, removeFromCart ,addToCart} from '../../redux/actions/cartActions';\r\n\r\nconst CartItems = () => {\r\n  const dispatch = useDispatch();\r\n  const { items: cartItems, loading, error, updating } = useSelector(state => state.cart);\r\n  // const error = useSelector(state => state.cart.error);\r\n  // const loading = useSelector(state => state.cart.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n  }, [cartItems]);\r\n\r\n  console.log(\"Cart items in UI:\", cartItems);\r\n\r\n  \r\n  const handleRemove = (itemId) => {\r\n    dispatch(removeFromCart(itemId)).then(() => {\r\n      dispatch(getCart()); // Refresh cart data after removing\r\n    });\r\n  };\r\n  \r\n \r\n  \r\n  const handleIncrease = (itemId) => {\r\n    const item = cartItems.find(item => item._id === itemId);\r\n    if (item) {\r\n      dispatch(updateCartQuantity(itemId, item.quantity + 1));\r\n    }\r\n  dispatch(getCart());\r\n\r\n  };\r\n\r\n  const handleDecrease = (itemId) => {\r\n    const item = cartItems.find(item => item._id === itemId);\r\n    if (item && item.quantity > 1) {\r\n      dispatch(updateCartQuantity(itemId, item.quantity - 1));\r\n    }\r\n    dispatch(getCart());\r\n\r\n  };\r\n\r\n\r\n\r\n  if (loading) {\r\n    return <div className=\"loading-indicator\">Loading cart items...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <p>Error loading cart: {error.message || error}</p>\r\n        <button onClick={() => dispatch(getCart())} className=\"retry-button\">Try Again</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1>Your Cart</h1>\r\n      {cartItems.length === 0 ? (\r\n        <p>Your cart is empty</p>\r\n      ) : (\r\n        <ul className=\"cart-list\">\r\n          {cartItems.map(item => (\r\n            <li key={item._id} className=\"cart-item\">\r\n              <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\r\n              <div className=\"cart-item-details\">\r\n                <h2>{item.name}</h2>\r\n                <p>Price: ₹{item.new_price}</p>\r\n                <p>Quantity: {item.quantity}</p>\r\n                <div className=\"cart-item-actions\">\r\n                <button \r\n                  onClick={() => handleDecrease(item._id)} \r\n                  className=\"quantity-button\"\r\n                  disabled={updating[item._id]}\r\n                >\r\n                  -\r\n                </button>\r\n                <button \r\n                  onClick={() => handleIncrease(item._id)} \r\n                  className=\"quantity-button\"\r\n                  disabled={updating[item._id]}\r\n                >\r\n                  +\r\n                </button>\r\n                <button \r\n                  onClick={() => handleRemove(item._id)} \r\n                  className=\"remove-button\"\r\n                  disabled={updating[item._id]}\r\n                >\r\n                  Remove\r\n                </button>\r\n                {/* <button onClick={() => handleDecrease(item._id)} className=\"quantity-button\">-</button>\r\n                  <button onClick={() => handleIncrease(item._id)} className=\"quantity-button\">+</button>\r\n                  <button onClick={() => handleRemove(item._id)} className=\"remove-button\">Remove</button> */}\r\n                  \r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {cartItems.length > 0 && (\r\n        <div className=\"cart-total\">\r\n          <h2>Total: ₹{cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItems;\r\n\r\n// import React, { useEffect } from \"react\";\r\n// import \"./CartItems.css\";\r\n// import cross_icon from \"../Assets/cart_cross_icon.png\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { getCart, updateCartQuantity, removeFromCart } from '../../redux/actions/cartActions';\r\n\r\n// const CartItems = () => {\r\n//   const dispatch = useDispatch();\r\n//   const cartItems = useSelector(state => state.cart.items || []); // Default to empty array\r\n//   const error = useSelector(state => state.cart.error);\r\n//   const loading = useSelector(state => state.cart.loading);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getCart());\r\n//   }, [dispatch]);\r\n\r\n//   if (loading) {\r\n//     return <div className=\"loading-indicator\">Loading cart items...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div className=\"error-container\">\r\n//         <p>Error loading cart: {error.message || error}</p>\r\n//         <button onClick={() => dispatch(getCart())} className=\"retry-button\">Try Again</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n    \r\n//   const handleRemove = (itemId) => {\r\n//     dispatch(removeFromCart(itemId)).then(() => {\r\n//       dispatch(getCart()); // Refresh cart data after removing\r\n//     });\r\n//   };\r\n  \r\n \r\n  \r\n//   const handleIncrease = (itemId) => {\r\n//     const item = cartItems.find(item => item._id === itemId);\r\n//     if (item) {\r\n//       dispatch(updateCartQuantity(itemId, item.quantity + 1));\r\n//     }\r\n//   dispatch(getCart());\r\n\r\n//   };\r\n\r\n//   const handleDecrease = (itemId) => {\r\n//     const item = cartItems.find(item => item._id === itemId);\r\n//     if (item && item.quantity > 1) {\r\n//       dispatch(updateCartQuantity(itemId, item.quantity - 1));\r\n//     }\r\n//     dispatch(getCart());\r\n\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"cart-container\">\r\n//       <h1>Your Cart</h1>\r\n//       {cartItems.length === 0 ? (\r\n//         <p>Your cart is empty</p>\r\n//       ) : (\r\n//         <ul className=\"cart-list\">\r\n//           {cartItems.map(item => (\r\n//             <li key={item._id} className=\"cart-item\">\r\n//               <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\r\n//               <div className=\"cart-item-details\">\r\n//                 <h2>{item.name}</h2>\r\n//                 <p>Price: ₹{item.new_price}</p>\r\n//                 <p>Quantity: {item.quantity}</p>\r\n//                 <div className=\"cart-item-actions\">\r\n//                   <button onClick={() => handleDecrease(item._id)} className=\"quantity-button\">-</button>\r\n//                   <button onClick={() => handleIncrease(item._id)} className=\"quantity-button\">+</button>\r\n//                   <button onClick={() => handleRemove(item._id)} className=\"remove-button\">Remove</button>\r\n//                 </div>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//       {cartItems.length > 0 && (\r\n//         <div className=\"cart-total\">\r\n//           <h2>Total: ₹{cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n// export default CartItems;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}