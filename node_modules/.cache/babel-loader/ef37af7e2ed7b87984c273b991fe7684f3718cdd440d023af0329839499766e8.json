{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeParams = exports.parseParams = exports.devIp = exports.UAParser = exports.easyExtender = exports.serveStatic = exports.connect = exports.portscanner = exports.defaultCallback = exports.arrayify = exports.eachSeries = exports.verifyConfig = exports.getConfigErrors = exports.isMap = exports.isList = exports.willCauseReload = exports.xip = exports.fail = exports.opnWrapper = exports.openBrowser = exports.getUaString = exports.getPort = exports.getPorts = exports._makeUrl = exports.getUrls = exports.getUrl = exports.getUrlOptions = exports.getHostIp = void 0;\nconst devIp = require(\"dev-ip\");\nexports.devIp = devIp;\nconst portScanner = require(\"portscanner\");\nconst path = require(\"path\");\nconst UAParser = require(\"ua-parser-js\");\nexports.UAParser = UAParser;\nconst Immutable = require(\"immutable\");\nconst immutable_1 = require(\"immutable\");\nconst _ = require(\"./lodash.custom\");\nconst parser = new UAParser();\n/**\n * @param {Object} options\n * @returns {String|boolean} - the IP address\n * @param devIp\n */\nfunction getHostIp(options, devIp) {\n  if (options) {\n    var host = options.get(\"host\");\n    if (host && host !== \"localhost\") {\n      return host;\n    }\n    if (options.get(\"detect\") === false || !devIp.length) {\n      return false;\n    }\n  }\n  return devIp.length ? devIp[0] : false;\n}\nexports.getHostIp = getHostIp;\n/**\n * Set URL Options\n */\nfunction getUrlOptions(options) {\n  const scheme = options.get(\"scheme\");\n  const port = options.get(\"port\");\n  const urls = {};\n  const listen = options.get(\"listen\");\n  if (options.get(\"online\") === false || listen) {\n    const host = listen || \"localhost\";\n    urls.local = getUrl(`${scheme}://${host}:${port}`, options);\n    return Immutable.fromJS(urls);\n  }\n  const fn = exports.getHostIp;\n  const external = xip(fn(options, devIp()), options);\n  let localhost = \"localhost\";\n  if (options.get(\"xip\")) {\n    localhost = \"127.0.0.1\";\n  }\n  localhost = xip(localhost, options);\n  return Immutable.fromJS(getUrls(external, localhost, scheme, options));\n}\nexports.getUrlOptions = getUrlOptions;\n/**\n * Append a start path if given in options\n * @param {String} url\n * @param {Object} options\n * @returns {String}\n */\nfunction getUrl(url, options) {\n  var prefix = \"/\";\n  var startPath = options.get(\"startPath\");\n  if (startPath) {\n    if (startPath.charAt(0) === \"/\") {\n      prefix = \"\";\n    }\n    url = url + prefix + startPath;\n  }\n  return url;\n}\nexports.getUrl = getUrl;\n/**\n * @param {String} external\n * @param {String} local\n * @param {String} scheme\n * @param {Object} options\n * @returns {{local: string, external: string}}\n */\nfunction getUrls(external, local, scheme, options) {\n  var urls = {\n    local: getUrl(_makeUrl(scheme, local, options.get(\"port\")), options)\n  };\n  if (external !== local) {\n    urls.external = getUrl(_makeUrl(scheme, external, options.get(\"port\")), options);\n  }\n  return urls;\n}\nexports.getUrls = getUrls;\n/**\n * @param {String} scheme\n * @param {String} host\n * @param {Number} port\n * @returns {String}\n * @private\n */\nfunction _makeUrl(scheme, host, port) {\n  return scheme + \"://\" + host + \":\" + port;\n}\nexports._makeUrl = _makeUrl;\n/**\n * Get ports\n * @param {Object} options\n * @param {Function} cb\n */\nfunction getPorts(options, cb) {\n  var port = options.get(\"port\");\n  var ports = options.get(\"ports\"); // backwards compatibility\n  var host = options.get(\"listen\", \"localhost\"); // backwards compatibility\n  var max;\n  if (ports) {\n    port = ports.get(\"min\");\n    max = ports.get(\"max\") || null;\n  }\n  var fn = exports.getPort;\n  fn(host, port, max, cb);\n}\nexports.getPorts = getPorts;\nfunction getPort(host, port, max, cb) {\n  portScanner.findAPortNotInUse(port, max, {\n    host: host,\n    timeout: 1000\n  }, cb);\n}\nexports.getPort = getPort;\n/**\n * @param {String} ua\n * @returns {Object}\n */\nfunction getUaString(ua) {\n  return parser.setUA(ua).getBrowser();\n}\nexports.getUaString = getUaString;\n/**\n * Open the page in browser\n * @param {String} url\n * @param {Object} options\n * @param {BrowserSync} bs\n */\nfunction openBrowser(url, options, bs) {\n  const open = options.get(\"open\");\n  const browser = options.get(\"browser\");\n  if (_.isString(open)) {\n    if (options.getIn([\"urls\", open])) {\n      url = options.getIn([\"urls\", open]);\n    }\n  }\n  const fn = exports.opnWrapper;\n  if (open) {\n    if (browser !== \"default\") {\n      if ((0, exports.isList)(browser)) {\n        browser.forEach(function (browser) {\n          fn(url, browser, bs);\n        });\n      } else {\n        fn(url, browser, bs); // single\n      }\n    } else {\n      fn(url, null, bs);\n    }\n  }\n}\nexports.openBrowser = openBrowser;\n/**\n * Wrapper for opn module\n * @param url\n * @param name\n * @param bs\n */\nfunction opnWrapper(url, name, bs) {\n  var options = function () {\n    if (_.isString(name)) {\n      return {\n        app: name\n      };\n    }\n    if (Immutable.Map.isMap(name)) {\n      return name.toJS();\n    }\n    return {};\n  }();\n  var opn = require(\"opn\");\n  opn(url, options).catch(function () {\n    bs.events.emit(\"browser:error\");\n  });\n}\nexports.opnWrapper = opnWrapper;\n/**\n * @param {Boolean} kill\n * @param {String|Error} [errMessage]\n * @param {Function} [cb]\n */\nfunction fail(kill, errMessage, cb) {\n  if (kill) {\n    if (_.isFunction(cb)) {\n      if (errMessage.message) {\n        // Is this an error object?\n        cb(errMessage);\n      } else {\n        cb(new Error(errMessage));\n      }\n    }\n    process.exit(1);\n  }\n}\nexports.fail = fail;\n/**\n * Add support for xip.io urls\n * @param {String} host\n * @param {Object} options\n * @returns {String}\n */\nfunction xip(host, options) {\n  var suffix = options.get(\"hostnameSuffix\");\n  if (options.get(\"xip\")) {\n    return host + \".xip.io\";\n  }\n  if (suffix) {\n    return host + suffix;\n  }\n  return host;\n}\nexports.xip = xip;\n/**\n * Determine if an array of file paths will cause a full page reload.\n * @param {Array} needles - filepath such as [\"core.css\", \"index.html\"]\n * @param {Array} haystack\n * @returns {Boolean}\n */\nfunction willCauseReload(needles, haystack) {\n  return needles.some(function (needle) {\n    return !_.includes(haystack, path.extname(needle).replace(\".\", \"\"));\n  });\n}\nexports.willCauseReload = willCauseReload;\nexports.isList = Immutable.List.isList;\nexports.isMap = Immutable.Map.isMap;\n/**\n * @param {Map} options\n * @returns {Array}\n */\nfunction getConfigErrors(options) {\n  var messages = require(\"./config\").errors;\n  var errors = [];\n  if (options.get(\"server\") && options.get(\"proxy\")) {\n    errors.push(messages[\"server+proxy\"]);\n  }\n  return errors;\n}\nexports.getConfigErrors = getConfigErrors;\n/**\n * @param {Map} options\n * @param {Function} [cb]\n */\nfunction verifyConfig(options, cb) {\n  var errors = getConfigErrors(options);\n  if (errors.length) {\n    fail(true, errors.join(\"\\n\"), cb);\n    return false;\n  }\n  return true;\n}\nexports.verifyConfig = verifyConfig;\nfunction eachSeries(arr, iterator, callback) {\n  callback = callback || function () {};\n  var completed = 0;\n  var iterate = function () {\n    iterator(arr[completed], function (err) {\n      if (err) {\n        callback(err);\n        callback = function () {};\n      } else {\n        ++completed;\n        if (completed >= arr.length) {\n          callback();\n        } else {\n          iterate();\n        }\n      }\n    });\n  };\n  iterate();\n}\nexports.eachSeries = eachSeries;\n/**\n * @param {Immutable.List|Array|String} incoming\n * @returns {Array}\n */\nfunction arrayify(incoming) {\n  if (immutable_1.List.isList(incoming)) {\n    return incoming.toArray();\n  }\n  return [].concat(incoming).filter(Boolean);\n}\nexports.arrayify = arrayify;\nfunction defaultCallback(err) {\n  if (err && err.message) {\n    console.error(err.message);\n  }\n}\nexports.defaultCallback = defaultCallback;\nexports.portscanner = portScanner;\nexports.connect = require(\"connect\");\nexports.serveStatic = require(\"./server/serve-static-wrapper\").default();\nexports.easyExtender = require(\"easy-extender\");\n/**\n * Just for backwards compat around old argument styles\n */\nfunction parseParams(search) {\n  const params = new URLSearchParams(search);\n  const parsed = Object.create(null);\n  for (let [key, value] of params) {\n    let nextKey = key;\n    let arrayType = false;\n    if (nextKey.slice(-2) === \"[]\") {\n      nextKey = key.slice(0, -2);\n      arrayType = true;\n    }\n    const curr = parsed[nextKey];\n    if (curr && Array.isArray(curr)) {\n      curr.push(value);\n    } else if (curr) {\n      // if it already exists, but is not already an array, upgrade to array\n      parsed[nextKey] = [curr, value];\n    } else {\n      // otherwise create the original value\n      if (arrayType) {\n        parsed[nextKey] = [value];\n      } else {\n        parsed[nextKey] = value;\n      }\n    }\n  }\n  return parsed;\n}\nexports.parseParams = parseParams;\n/**\n * Also for backwards compat around old argument styles\n */\nfunction serializeParams(args = {}) {\n  const output = new URLSearchParams();\n  for (let [key, value] of Object.entries(args)) {\n    if (Array.isArray(value)) {\n      for (let valueElement of value) {\n        output.append(key, valueElement);\n      }\n    } else {\n      output.append(key, String(value));\n    }\n  }\n  return output;\n}\nexports.serializeParams = serializeParams;","map":{"version":3,"names":["devIp","require","exports","portScanner","path","UAParser","Immutable","immutable_1","_","parser","getHostIp","options","host","get","length","getUrlOptions","scheme","port","urls","listen","local","getUrl","fromJS","fn","external","xip","localhost","getUrls","url","prefix","startPath","charAt","_makeUrl","getPorts","cb","ports","max","getPort","findAPortNotInUse","timeout","getUaString","ua","setUA","getBrowser","openBrowser","bs","open","browser","isString","getIn","opnWrapper","isList","forEach","name","app","Map","isMap","toJS","opn","catch","events","emit","fail","kill","errMessage","isFunction","message","Error","process","exit","suffix","willCauseReload","needles","haystack","some","needle","includes","extname","replace","List","getConfigErrors","messages","errors","push","verifyConfig","join","eachSeries","arr","iterator","callback","completed","iterate","err","arrayify","incoming","toArray","concat","filter","Boolean","defaultCallback","console","error","portscanner","connect","serveStatic","default","easyExtender","parseParams","search","params","URLSearchParams","parsed","Object","create","key","value","nextKey","arrayType","slice","curr","Array","isArray","serializeParams","args","output","entries","valueElement","append","String"],"sources":["../lib/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}