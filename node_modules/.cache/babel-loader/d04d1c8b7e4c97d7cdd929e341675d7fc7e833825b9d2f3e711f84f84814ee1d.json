{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n// import ReCAPTCHA from 'react-google-recaptcha';\n// import { login, signup } from '../redux/actions/authActions';\n// import './CSS/LoginSignup.css';\n\n// const LoginSignup = () => {\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: ''\n//   });\n//   const [captchaToken, setCaptchaToken] = useState('');\n//   const [error, setError] = useState('');\n//   const [state, setState] = useState('Login');\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n\n//   const { isAuthenticated, error: reduxError } = useSelector(state => state.auth);\n\n//   useEffect(() => {\n//     if (isAuthenticated) {\n//       navigate('/');\n//     }\n//   }, [isAuthenticated, navigate]);\n\n//   useEffect(() => {\n//     if (reduxError) {\n//       setError(reduxError);\n//     }\n//   }, [reduxError]);\n\n//   const changeHandler = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleCaptcha = (value) => {\n//     setCaptchaToken(value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     if (!formData.email || (state !== 'Forgot Password' && !formData.password)) {\n//       setError('Please fill all fields');\n//       return;\n//     }\n\n//     if (!captchaToken) {\n//       setError('Please complete the CAPTCHA');\n//       return;\n//     }\n\n//     const userData = {\n//       ...formData,\n//       captchaToken\n//     };\n\n//     try {\n//       switch (state) {\n//         case 'Login':\n//           await dispatch(login(userData));\n//           break;\n//         case 'Sign Up':\n//           await dispatch(signup(userData));\n//           break;\n//         default:\n//           setError('Invalid state');\n//           return;\n//       }\n//     } catch (err) {\n//       console.error('Error in handleSubmit:', err);\n//       setError('An unexpected error occurred. Please check the console for more details.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"loginsignup\">\n//       <div className=\"loginsignup-container\">\n//         <h1>{state}</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"loginsignup-fields\">\n//             {state === 'Sign Up' && (\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Your Name\"\n//                 name=\"username\"\n//                 value={formData.username}\n//                 onChange={changeHandler}\n//               />\n//             )}\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email Address\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={changeHandler}\n//             />\n//             {state !== 'Forgot Password' && (\n//               <input\n//                 type=\"password\"\n//                 placeholder=\"Password\"\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={changeHandler}\n//               />\n//             )}\n//           </div>\n\n//           <ReCAPTCHA\n//             sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY} // Use environment variable for site key\n//             onChange={handleCaptcha}\n//           />\n\n//           <div className=\"loginsignup-agree\">\n//             <input type=\"checkbox\" name=\"agree\" id=\"agree\" />\n//             <p>By continuing, I agree to the terms of use & privacy policy.</p>\n//           </div>\n//           <button type=\"submit\">Continue</button>\n\n//           {state === 'Login' ? (\n//             <>\n//               <p className=\"loginsignup-login\">\n//                 Don't have an account? <span onClick={() => setState('Sign Up')}>Sign up here</span>\n//               </p>\n//               <p className=\"loginsignup-login\">\n//                 Forgot your password? <span onClick={() => setState('Forgot Password')}>Click here</span>\n//               </p>\n//             </>\n//           ) : state === 'Sign Up' ? (\n//             <p className=\"loginsignup-login\">\n//               Already have an account? <span onClick={() => setState('Login')}>Login here</span>\n//             </p>\n//           ) : (\n//             <p className=\"loginsignup-login\">\n//               Remembered your password? <span onClick={() => setState('Login')}>Login here</span>\n//             </p>\n//           )}\n\n//           {error && <p className=\"loginsignup-error\">{error}</p>}\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginSignup;\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n// import ReCAPTCHA from 'react-google-recaptcha';\n// import { login, signup } from '../redux/actions/authActions';\n// import './CSS/LoginSignup.css';\n\n// const LoginSignup = () => {\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: ''\n//   });\n//   const [captchaToken, setCaptchaToken] = useState('');\n//   const [error, setError] = useState('');\n//   const [state, setState] = useState('Login');\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n\n//   const { isAuthenticated, error: reduxError } = useSelector(state => state.auth);\n\n//   useEffect(() => {\n//     if (isAuthenticated) {\n//       navigate('/');\n//     }\n//   }, [isAuthenticated, navigate]);\n\n//   useEffect(() => {\n//     if (reduxError) {\n//       setError(reduxError);\n//     }\n//   }, [reduxError]);\n\n//   const changeHandler = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleCaptcha = (value) => {\n//     setCaptchaToken(value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     if (!formData.email || (state !== 'Forgot Password' && !formData.password)) {\n//       setError('Please fill all fields');\n//       return;\n//     }\n\n//     if (!captchaToken) {\n//       setError('Please complete the CAPTCHA');\n//       return;\n//     }\n\n//     const userData = {\n//       ...formData,\n//       captchaToken\n//     };\n\n//     console.log(userData)\n\n//     try {\n//       if (state === 'Login') {\n//         await dispatch(login(userData));\n//       } else if (state === 'Sign Up') {\n//         await dispatch(signup(userData));\n//       }\n//     } catch (err) {\n//       setError('An unexpected error occurred. Please check the console for more details.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"loginsignup\">\n//       <div className=\"loginsignup-container\">\n//         <h1>{state}</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"loginsignup-fields\">\n//             {state === 'Sign Up' && (\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Your Name\"\n//                 name=\"name\"\n//                 value={formData.name}\n//                 onChange={changeHandler}\n//               />\n//             )}\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email Address\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={changeHandler}\n//             />\n//             {state !== 'Forgot Password' && (\n//               <input\n//                 type=\"password\"\n//                 placeholder=\"Password\"\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={changeHandler}\n//               />\n//             )}\n//           </div>\n\n//           <ReCAPTCHA\n//             sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n//             onChange={handleCaptcha}\n//           />\n\n//           <div className=\"loginsignup-agree\">\n//             <input type=\"checkbox\" name=\"agree\" id=\"agree\" />\n//             <p>By continuing, I agree to the terms of use & privacy policy.</p>\n//           </div>\n//           <button type=\"submit\">Continue</button>\n\n//           {state === 'Login' ? (\n//             <>\n//               <p className=\"loginsignup-login\">\n//                 Don't have an account? <span onClick={() => setState('Sign Up')}>Sign up here</span>\n//               </p>\n//               <p className=\"loginsignup-login\">\n//                 Forgot your password? <span onClick={() => setState('Forgot Password')}>Click here</span>\n//               </p>\n//             </>\n//           ) : state === 'Sign Up' ? (\n//             <p className=\"loginsignup-login\">\n//               Already have an account? <span onClick={() => setState('Login')}>Login here</span>\n//             </p>\n//           ) : (\n//             <p className=\"loginsignup-login\">\n//               Remembered your password? <span onClick={() => setState('Login')}>Login here</span>\n//             </p>\n//           )}\n\n//           {error && <p className=\"loginsignup-error\">{error}</p>}\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginSignup;\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n// import ReCAPTCHA from 'react-google-recaptcha';\n// import { login, signup } from '../redux/actions/authActions';\n// import './CSS/LoginSignup.css';\n\n// const LoginSignup = () => {\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: ''\n//   });\n//   const [captchaToken, setCaptchaToken] = useState('');\n//   const [error, setError] = useState('');\n//   const [state, setState] = useState('Login');\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n\n//   const { isAuthenticated, error: reduxError } = useSelector(state => state.auth);\n\n//   useEffect(() => {\n//     if (isAuthenticated) {\n//       navigate('/');\n//     }\n//   }, [isAuthenticated, navigate]);\n\n//   useEffect(() => {\n//     if (reduxError) {\n//       setError(reduxError);\n//     }\n//   }, [reduxError]);\n\n//   const changeHandler = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleCaptcha = (value) => {\n//     console.log()\n//     setCaptchaToken(value);\n\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     if (!formData.email || (state !== 'Forgot Password' && !formData.password)) {\n//       setError('Please fill all fields');\n//       return;\n//     }\n\n//     if (!captchaToken) {\n//       setError('Please complete the CAPTCHA');\n//       return;\n//     }\n\n//     const userData = {\n//       ...formData,\n//       captchaToken\n//     };\n\n//     try {\n//       if (state === 'Login') {\n//         await dispatch(login(userData));\n//       } else if (state === 'Sign Up') {\n//         await dispatch(signup(userData));\n//       }\n//     } catch (err) {\n//       setError('An unexpected error occurred. Please check the console for more details.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"loginsignup\">\n//       <div className=\"loginsignup-container\">\n//         <h1>{state}</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"loginsignup-fields\">\n//             {state === 'Sign Up' && (\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Your Name\"\n//                 name=\"username\"  // Ensure the field matches with formData\n//                 value={formData.username}\n//                 onChange={changeHandler}\n//               />\n//             )}\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email Address\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={changeHandler}\n//             />\n//             {state !== 'Forgot Password' && (\n//               <input\n//                 type=\"password\"\n//                 placeholder=\"Password\"\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={changeHandler}\n//               />\n//             )}\n//           </div>\n\n//           <ReCAPTCHA\n//             sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n//             onChange={handleCaptcha}\n//           />\n\n//           <div className=\"loginsignup-agree\">\n//             <input type=\"checkbox\" name=\"agree\" id=\"agree\" />\n//             <p>By continuing, I agree to the terms of use & privacy policy.</p>\n//           </div>\n//           <button type=\"submit\">Continue</button>\n\n//           {state === 'Login' ? (\n//             <>\n//               <p className=\"loginsignup-login\">\n//                 Don't have an account? <span onClick={() => setState('Sign Up')}>Sign up here</span>\n//               </p>\n//               <p className=\"loginsignup-login\">\n//                 Forgot your password? <span onClick={() => setState('Forgot Password')}>Click here</span>\n//               </p>\n//             </>\n//           ) : state === 'Sign Up' ? (\n//             <p className=\"loginsignup-login\">\n//               Already have an account? <span onClick={() => setState('Login')}>Login here</span>\n//             </p>\n//           ) : (\n//             <p className=\"loginsignup-login\">\n//               Remembered your password? <span onClick={() => setState('Login')}>Login here</span>\n//             </p>\n//           )}\n\n//           {error && <p className=\"loginsignup-error\">{error}</p>}\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginSignup;","map":{"version":3,"names":[],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Pages/LoginSignup.jsx"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\n// import { login, signup } from '../redux/actions/authActions';\r\n// import './CSS/LoginSignup.css';\r\n\r\n// const LoginSignup = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     username: '',\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n//   const [captchaToken, setCaptchaToken] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [state, setState] = useState('Login');\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n\r\n//   const { isAuthenticated, error: reduxError } = useSelector(state => state.auth);\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated) {\r\n//       navigate('/');\r\n//     }\r\n//   }, [isAuthenticated, navigate]);\r\n\r\n//   useEffect(() => {\r\n//     if (reduxError) {\r\n//       setError(reduxError);\r\n//     }\r\n//   }, [reduxError]);\r\n\r\n//   const changeHandler = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleCaptcha = (value) => {\r\n//     setCaptchaToken(value);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     if (!formData.email || (state !== 'Forgot Password' && !formData.password)) {\r\n//       setError('Please fill all fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!captchaToken) {\r\n//       setError('Please complete the CAPTCHA');\r\n//       return;\r\n//     }\r\n\r\n//     const userData = {\r\n//       ...formData,\r\n//       captchaToken\r\n//     };\r\n\r\n//     try {\r\n//       switch (state) {\r\n//         case 'Login':\r\n//           await dispatch(login(userData));\r\n//           break;\r\n//         case 'Sign Up':\r\n//           await dispatch(signup(userData));\r\n//           break;\r\n//         default:\r\n//           setError('Invalid state');\r\n//           return;\r\n//       }\r\n//     } catch (err) {\r\n//       console.error('Error in handleSubmit:', err);\r\n//       setError('An unexpected error occurred. Please check the console for more details.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"loginsignup\">\r\n//       <div className=\"loginsignup-container\">\r\n//         <h1>{state}</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"loginsignup-fields\">\r\n//             {state === 'Sign Up' && (\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Your Name\"\r\n//                 name=\"username\"\r\n//                 value={formData.username}\r\n//                 onChange={changeHandler}\r\n//               />\r\n//             )}\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email Address\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={changeHandler}\r\n//             />\r\n//             {state !== 'Forgot Password' && (\r\n//               <input\r\n//                 type=\"password\"\r\n//                 placeholder=\"Password\"\r\n//                 name=\"password\"\r\n//                 value={formData.password}\r\n//                 onChange={changeHandler}\r\n//               />\r\n//             )}\r\n//           </div>\r\n\r\n//           <ReCAPTCHA\r\n//             sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY} // Use environment variable for site key\r\n//             onChange={handleCaptcha}\r\n//           />\r\n\r\n//           <div className=\"loginsignup-agree\">\r\n//             <input type=\"checkbox\" name=\"agree\" id=\"agree\" />\r\n//             <p>By continuing, I agree to the terms of use & privacy policy.</p>\r\n//           </div>\r\n//           <button type=\"submit\">Continue</button>\r\n\r\n//           {state === 'Login' ? (\r\n//             <>\r\n//               <p className=\"loginsignup-login\">\r\n//                 Don't have an account? <span onClick={() => setState('Sign Up')}>Sign up here</span>\r\n//               </p>\r\n//               <p className=\"loginsignup-login\">\r\n//                 Forgot your password? <span onClick={() => setState('Forgot Password')}>Click here</span>\r\n//               </p>\r\n//             </>\r\n//           ) : state === 'Sign Up' ? (\r\n//             <p className=\"loginsignup-login\">\r\n//               Already have an account? <span onClick={() => setState('Login')}>Login here</span>\r\n//             </p>\r\n//           ) : (\r\n//             <p className=\"loginsignup-login\">\r\n//               Remembered your password? <span onClick={() => setState('Login')}>Login here</span>\r\n//             </p>\r\n//           )}\r\n\r\n//           {error && <p className=\"loginsignup-error\">{error}</p>}\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginSignup;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\n// import { login, signup } from '../redux/actions/authActions';\r\n// import './CSS/LoginSignup.css';\r\n\r\n// const LoginSignup = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     username: '',\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n//   const [captchaToken, setCaptchaToken] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [state, setState] = useState('Login');\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n  \r\n//   const { isAuthenticated, error: reduxError } = useSelector(state => state.auth);\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated) {\r\n//       navigate('/');\r\n//     }\r\n//   }, [isAuthenticated, navigate]);\r\n\r\n//   useEffect(() => {\r\n//     if (reduxError) {\r\n//       setError(reduxError);\r\n//     }\r\n//   }, [reduxError]);\r\n\r\n//   const changeHandler = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleCaptcha = (value) => {\r\n//     setCaptchaToken(value);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     if (!formData.email || (state !== 'Forgot Password' && !formData.password)) {\r\n//       setError('Please fill all fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!captchaToken) {\r\n//       setError('Please complete the CAPTCHA');\r\n//       return;\r\n//     }\r\n\r\n//     const userData = {\r\n//       ...formData,\r\n//       captchaToken\r\n//     };\r\n\r\n//     console.log(userData)\r\n\r\n//     try {\r\n//       if (state === 'Login') {\r\n//         await dispatch(login(userData));\r\n//       } else if (state === 'Sign Up') {\r\n//         await dispatch(signup(userData));\r\n//       }\r\n//     } catch (err) {\r\n//       setError('An unexpected error occurred. Please check the console for more details.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"loginsignup\">\r\n//       <div className=\"loginsignup-container\">\r\n//         <h1>{state}</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"loginsignup-fields\">\r\n//             {state === 'Sign Up' && (\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Your Name\"\r\n//                 name=\"name\"\r\n//                 value={formData.name}\r\n//                 onChange={changeHandler}\r\n//               />\r\n//             )}\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email Address\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={changeHandler}\r\n//             />\r\n//             {state !== 'Forgot Password' && (\r\n//               <input\r\n//                 type=\"password\"\r\n//                 placeholder=\"Password\"\r\n//                 name=\"password\"\r\n//                 value={formData.password}\r\n//                 onChange={changeHandler}\r\n//               />\r\n//             )}\r\n//           </div>\r\n\r\n//           <ReCAPTCHA\r\n//             sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\r\n//             onChange={handleCaptcha}\r\n//           />\r\n\r\n//           <div className=\"loginsignup-agree\">\r\n//             <input type=\"checkbox\" name=\"agree\" id=\"agree\" />\r\n//             <p>By continuing, I agree to the terms of use & privacy policy.</p>\r\n//           </div>\r\n//           <button type=\"submit\">Continue</button>\r\n\r\n//           {state === 'Login' ? (\r\n//             <>\r\n//               <p className=\"loginsignup-login\">\r\n//                 Don't have an account? <span onClick={() => setState('Sign Up')}>Sign up here</span>\r\n//               </p>\r\n//               <p className=\"loginsignup-login\">\r\n//                 Forgot your password? <span onClick={() => setState('Forgot Password')}>Click here</span>\r\n//               </p>\r\n//             </>\r\n//           ) : state === 'Sign Up' ? (\r\n//             <p className=\"loginsignup-login\">\r\n//               Already have an account? <span onClick={() => setState('Login')}>Login here</span>\r\n//             </p>\r\n//           ) : (\r\n//             <p className=\"loginsignup-login\">\r\n//               Remembered your password? <span onClick={() => setState('Login')}>Login here</span>\r\n//             </p>\r\n//           )}\r\n\r\n//           {error && <p className=\"loginsignup-error\">{error}</p>}\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginSignup;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\n// import { login, signup } from '../redux/actions/authActions';\r\n// import './CSS/LoginSignup.css';\r\n\r\n// const LoginSignup = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     username: '',\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n//   const [captchaToken, setCaptchaToken] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [state, setState] = useState('Login');\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n  \r\n//   const { isAuthenticated, error: reduxError } = useSelector(state => state.auth);\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated) {\r\n//       navigate('/');\r\n//     }\r\n//   }, [isAuthenticated, navigate]);\r\n\r\n//   useEffect(() => {\r\n//     if (reduxError) {\r\n//       setError(reduxError);\r\n//     }\r\n//   }, [reduxError]);\r\n\r\n//   const changeHandler = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleCaptcha = (value) => {\r\n//     console.log()\r\n//     setCaptchaToken(value);\r\n    \r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n\r\n//     if (!formData.email || (state !== 'Forgot Password' && !formData.password)) {\r\n//       setError('Please fill all fields');\r\n//       return;\r\n//     }\r\n\r\n//     if (!captchaToken) {\r\n//       setError('Please complete the CAPTCHA');\r\n//       return;\r\n//     }\r\n\r\n//     const userData = {\r\n//       ...formData,\r\n//       captchaToken\r\n//     };\r\n\r\n//     try {\r\n//       if (state === 'Login') {\r\n//         await dispatch(login(userData));\r\n//       } else if (state === 'Sign Up') {\r\n//         await dispatch(signup(userData));\r\n//       }\r\n//     } catch (err) {\r\n//       setError('An unexpected error occurred. Please check the console for more details.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"loginsignup\">\r\n//       <div className=\"loginsignup-container\">\r\n//         <h1>{state}</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"loginsignup-fields\">\r\n//             {state === 'Sign Up' && (\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Your Name\"\r\n//                 name=\"username\"  // Ensure the field matches with formData\r\n//                 value={formData.username}\r\n//                 onChange={changeHandler}\r\n//               />\r\n//             )}\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email Address\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={changeHandler}\r\n//             />\r\n//             {state !== 'Forgot Password' && (\r\n//               <input\r\n//                 type=\"password\"\r\n//                 placeholder=\"Password\"\r\n//                 name=\"password\"\r\n//                 value={formData.password}\r\n//                 onChange={changeHandler}\r\n//               />\r\n//             )}\r\n//           </div>\r\n\r\n//           <ReCAPTCHA\r\n//             sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\r\n//             onChange={handleCaptcha}\r\n//           />\r\n          \r\n\r\n//           <div className=\"loginsignup-agree\">\r\n//             <input type=\"checkbox\" name=\"agree\" id=\"agree\" />\r\n//             <p>By continuing, I agree to the terms of use & privacy policy.</p>\r\n//           </div>\r\n//           <button type=\"submit\">Continue</button>\r\n\r\n//           {state === 'Login' ? (\r\n//             <>\r\n//               <p className=\"loginsignup-login\">\r\n//                 Don't have an account? <span onClick={() => setState('Sign Up')}>Sign up here</span>\r\n//               </p>\r\n//               <p className=\"loginsignup-login\">\r\n//                 Forgot your password? <span onClick={() => setState('Forgot Password')}>Click here</span>\r\n//               </p>\r\n//             </>\r\n//           ) : state === 'Sign Up' ? (\r\n//             <p className=\"loginsignup-login\">\r\n//               Already have an account? <span onClick={() => setState('Login')}>Login here</span>\r\n//             </p>\r\n//           ) : (\r\n//             <p className=\"loginsignup-login\">\r\n//               Remembered your password? <span onClick={() => setState('Login')}>Login here</span>\r\n//             </p>\r\n//           )}\r\n\r\n//           {error && <p className=\"loginsignup-error\">{error}</p>}\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginSignup;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}