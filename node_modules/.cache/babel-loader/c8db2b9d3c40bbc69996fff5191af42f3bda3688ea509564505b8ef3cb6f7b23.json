{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const PrivateRoute = ({ element }) => {\n//   const token = localStorage.getItem('token');\n\n//   // Clear the token when the component mounts\n//   useEffect(() => {\n//     localStorage.removeItem('token');\n//   }, []);\n\n//   // Redirect to login if there's no token\n//   return !token ? <Navigate to=\"/login\" /> : element;\n// };\n\n// export default PrivateRoute;\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const PrivateRoute = ({ element }) => {\n//   const token = localStorage.getItem('token'); // Check for JWT token in localStorage\n\n//   // Redirect to login if not authenticated\n//   return token ? element : <Navigate to=\"/login\" />;\n// };\n\n// export default PrivateRoute;","map":{"version":3,"names":[],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/PrivateRoute.jsx"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n// const PrivateRoute = ({ element }) => {\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   // Clear the token when the component mounts\r\n//   useEffect(() => {\r\n//     localStorage.removeItem('token');\r\n//   }, []);\r\n\r\n//   // Redirect to login if there's no token\r\n//   return !token ? <Navigate to=\"/login\" /> : element;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n// import React from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n// const PrivateRoute = ({ element }) => {\r\n//   const token = localStorage.getItem('token'); // Check for JWT token in localStorage\r\n\r\n//   // Redirect to login if not authenticated\r\n//   return token ? element : <Navigate to=\"/login\" />;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}