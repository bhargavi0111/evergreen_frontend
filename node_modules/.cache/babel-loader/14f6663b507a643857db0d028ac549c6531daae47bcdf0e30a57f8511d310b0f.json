{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\CartItems\\\\CartItems.jsx\",\n  _s = $RefreshSig$();\n// src/components/CartItems.js\nimport React, { useEffect } from \"react\";\nimport \"./CartItems.css\";\nimport cross_icon from \"../Assets/cart_cross_icon.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import { fetchCartItems, removeFromCart, updateCartQuantity } from \"../../redux/actions/cartActions\";\nimport { backend_url, currency } from \"../../App\";\n\n// const CartItems = () => {\n//   const dispatch = useDispatch();\n//   const { cartItems } = useSelector(state => state.cart);\n//   const userId = \"exampleUserId\";  // Replace with actual user ID\n\n//   useEffect(() => {\n//     dispatch(fetchCartItems(userId));\n//   }, [dispatch, userId]);\n\n//   const getTotalCartAmount = () => {\n//     return cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0);\n//   };\n\n//   const handleRemove = (productId) => {\n//     dispatch(removeFromCart(userId, productId));\n//   };\n\n//   const handleQuantityChange = (productId, newQuantity) => {\n//     dispatch(updateCartQuantity(userId, productId, newQuantity));\n//   };\n\n//   return (\n//     <div className=\"cartitems\">\n//       <div className=\"cartitems-format-main\">\n//         <p>Products</p>\n//         <p>Title</p>\n//         <p>Price</p>\n//         <p>Quantity</p>\n//         <p>Total</p>\n//         <p>Remove</p>\n//       </div>\n//       <hr />\n//       {cartItems.map((e) => (\n//         <div key={e.productId}>\n//           <div className=\"cartitems-format-main cartitems-format\">\n//             <img className=\"cartitems-product-icon\" src={backend_url + e.image} alt={e.name} />\n//             <p className=\"cartitems-product-title\">{e.name}</p>\n//             <p>{currency}{e.new_price}</p>\n//             <input \n//               className=\"cartitems-quantity\" \n//               type=\"number\" \n//               value={e.quantity} \n//               onChange={(e) => handleQuantityChange(e.productId, Number(e.target.value))}\n//             />\n//             <p>{currency}{e.new_price * e.quantity}</p>\n//             <img \n//               onClick={() => handleRemove(e.productId)} \n//               className=\"cartitems-remove-icon\" \n//               src={cross_icon} \n//               alt=\"Remove\" \n//             />\n//           </div>\n//           <hr />\n//         </div>\n//       ))}\n\n//       <div className=\"cartitems-down\">\n//         <div className=\"cartitems-total\">\n//           <h1>Cart Totals</h1>\n//           <div>\n//             <div className=\"cartitems-total-item\">\n//               <p>Subtotal</p>\n//               <p>{currency}{getTotalCartAmount()}</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <p>Shipping Fee</p>\n//               <p>Free</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <h3>Total</h3>\n//               <h3>{currency}{getTotalCartAmount()}</h3>\n//             </div>\n//           </div>\n//           <button>PROCEED TO CHECKOUT</button>\n//         </div>\n//         <div className=\"cartitems-promocode\">\n//           <p>If you have a promo code, Enter it here</p>\n//           <div className=\"cartitems-promobox\">\n//             <input type=\"text\" placeholder=\"promo code\" />\n//             <button>Submit</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// src/components/CartItems.js\n\n// import { getCart, removeFromCart } from '../../redux/actions/cartActions';\n\n// const CartItems = () => {\n//   const dispatch = useDispatch();\n//   const cartItems = useSelector(state => state.cart.items);\n//   const error = useSelector(state => state.cart.error);\n//   const loading = useSelector(state => state.cart.loading);\n\n//   useEffect(() => {\n//     dispatch(getCart());\n//   }, [dispatch]);\n\n//   const handleRemove = (itemId) => {\n//     dispatch(removeFromCart(itemId));\n//   };\n\n//   if (loading) {\n//     return <div>Loading cart items...</div>;\n//   }\n\n//   if (error) {\n//     return (\n//       <div>\n//         <p>Error loading cart: {error}</p>\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"cart-container\">\n//       <h1>Your Cart</h1>\n//       {cartItems.length === 0 ? (\n//         <p>Your cart is empty</p>\n//       ) : (\n//         <ul className=\"cart-list\">\n//           {cartItems.map(item => (\n//             <li key={item._id} className=\"cart-item\">\n//               <img src={item.image} alt={item.name} className=\"cart-item-image\" />\n//               <div className=\"cart-item-details\">\n//                 <h2>{item.name}</h2>\n//                 <p>Price: ${item.new_price}</p>\n//                 <p>Quantity: {item.quantity}</p>\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\n//                   Remove\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//       {cartItems.length > 0 && (\n//         <div className=\"cart-total\">\n//           <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CartItems;\n\n// import { getCart, removeFromCart } from '../../redux/actions/cartActions';\n\n// const CartItems = () => {\n//   const dispatch = useDispatch();\n//   const cartItems = useSelector(state => state.cart.items || []);\n//   const error = useSelector(state => state.cart.error);\n//   const loading = useSelector(state => state.cart.loading);\n\n//   useEffect(() => {\n//     console.log('Dispatching getCart action');\n//     dispatch(getCart());\n//   }, [dispatch]);\n\n//   const handleRemove = (itemId) => {\n//     dispatch(removeFromCart(itemId));\n//   };\n\n//   if (loading) {\n//     return <div>Loading cart items...</div>;\n//   }\n\n//   if (error) {\n//     return (\n//       <div>\n//         <p>Error loading cart: {error}</p>\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\n//       </div>\n//     );\n//   }\n\n//   // Log cart items to check if the data is as expected\n//   console.log('Cart items:', cartItems);\n\n//   return (\n//     <div className=\"cart-container\">\n//       <h1>Your Cart</h1>\n//       {cartItems.length === 0 ? (\n//         <p>Your cart is empty</p>\n//       ) : (\n//         <ul className=\"cart-list\">\n//           {cartItems.map(item => (\n//             <li key={item._id} className=\"cart-item\">\n//               <img src={item.image} alt={item.name} className=\"cart-item-image\" />\n//               <div className=\"cart-item-details\">\n//                 <h2>{item.name}</h2>\n//                 <p>Price: ${item.new_price.toFixed(2)}</p>\n//                 <p>Quantity: {item.quantity}</p>\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\n//                   Remove\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//       {cartItems.length > 0 && (\n//         <div className=\"cart-total\">\n//           <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CartItems;\n\n// import { getCart, removeFromCart } from '../../redux/actions/cartActions';\n\n// const CartItems = () => {\n//   const dispatch = useDispatch();\n//   const cartItems = useSelector(state => state.cart.items);\n//   const error = useSelector(state => state.cart.error);\n//   const loading = useSelector(state => state.cart.loading);\n\n//   useEffect(() => {\n//     console.log('Dispatching getCart action');\n//     dispatch(getCart());\n//   }, [dispatch]);\n\n//   const handleRemove = (itemId) => {\n//     dispatch(removeFromCart(itemId));\n//   };\n\n//   if (loading) {\n//     return <div>Loading cart items...</div>;\n//   }\n\n//   if (error) {\n//     return (\n//       <div>\n//         <p>Error loading cart: {error}</p>\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\n//       </div>\n//     );\n//   }\n\n//   console.log('Cart items in component:', cartItems); // Log cart items\n\n//   // return (\n//   //   <div className=\"cart-container\">\n//   //     <h1>Your Cart</h1>\n//   //     {cartItems.length === 0 ? (\n//   //       <p>Your cart is empty</p>\n//   //     ) : (\n//   //       <ul className=\"cart-list\">\n//   //         {cartItems.map(item => (\n//   //           <li key={item._id} className=\"cart-item\">\n//   //             <img src={item.image} alt={item.name} className=\"cart-item-image\" />\n//   //             <div className=\"cart-item-details\">\n//   //               <h2>{item.name}</h2>\n//   //               <p>Price: ${item.new_price.toFixed(2)}</p>\n//   //               <p>Quantity: {item.quantity}</p>\n//   //               <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\n//   //                 Remove\n//   //               </button>\n//   //             </div>\n//   //           </li>\n//   //         ))}\n//   //       </ul>\n//   //     )}\n//   //     {cartItems.length > 0 && (\n//   //       <div className=\"cart-total\">\n//   //         <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\n//   //       </div>\n//   //     )}\n//   //   </div>\n//   // );\n\n//   return (\n//     <div className=\"cart-container\">\n//       <h1>Your Cart</h1>\n//       {cartItems.length === 0 ? (\n//         <p>Your cart is empty</p>\n//       ) : (\n//         <ul className=\"cart-list\">\n//           {cartItems.map(item => (\n//             <li key={item._id} className=\"cart-item\">\n//               <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\n//               <div className=\"cart-item-details\">\n//                 <h2>{item.name}</h2>\n//                 <p>Price: ${item.new_price}</p>\n//                 <p>Quantity: {item.quantity}</p>\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\n//                   Remove\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//       {cartItems.length > 0 && (\n//         <div className=\"cart-total\">\n//           <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\nimport { getCart, updateQuantity, removeFromCart } from '../../redux/actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItems = () => {\n  _s();\n  const dispatch = useDispatch();\n  const cartItems = useSelector(state => state.cart.items);\n  const error = useSelector(state => state.cart.error);\n  const loading = useSelector(state => state.cart.loading);\n  useEffect(() => {\n    dispatch(getCart());\n  }, [dispatch]);\n  const handleIncrease = itemId => {\n    const item = cartItems.find(item => item._id === itemId);\n    if (item) {\n      dispatch(updateQuantity(itemId, item.quantity + 1));\n    }\n  };\n  const handleDecrease = itemId => {\n    const item = cartItems.find(item => item._id === itemId);\n    if (item && item.quantity > 1) {\n      dispatch(updateCQuantity(itemId, item.quantity - 1));\n    }\n  };\n  const handleRemove = itemId => {\n    dispatch(removeFromCart(itemId));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading cart items...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error loading cart: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(getCart()),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cart-list\",\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:4000${item.image}`,\n          alt: item.name,\n          className: \"cart-item-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", item.new_price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDecrease(item._id),\n            className: \"quantity-button\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleIncrease(item._id),\n            className: \"quantity-button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(item._id),\n            className: \"remove-button\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-total\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total: $\", cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n_s(CartItems, \"376YaUfPTYCkW02lW9Ppz5vI19U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = CartItems;\nexport default CartItems;\nvar _c;\n$RefreshReg$(_c, \"CartItems\");","map":{"version":3,"names":["React","useEffect","cross_icon","useSelector","useDispatch","backend_url","currency","getCart","updateQuantity","removeFromCart","jsxDEV","_jsxDEV","CartItems","_s","dispatch","cartItems","state","cart","items","error","loading","handleIncrease","itemId","item","find","_id","quantity","handleDecrease","updateCQuantity","handleRemove","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","length","map","src","image","alt","name","new_price","reduce","total","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/CartItems/CartItems.jsx"],"sourcesContent":["// src/components/CartItems.js\r\nimport React, { useEffect } from \"react\";\r\nimport \"./CartItems.css\";\r\nimport cross_icon from \"../Assets/cart_cross_icon.png\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { fetchCartItems, removeFromCart, updateCartQuantity } from \"../../redux/actions/cartActions\";\r\nimport { backend_url, currency } from \"../../App\";\r\n\r\n// const CartItems = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { cartItems } = useSelector(state => state.cart);\r\n//   const userId = \"exampleUserId\";  // Replace with actual user ID\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchCartItems(userId));\r\n//   }, [dispatch, userId]);\r\n\r\n//   const getTotalCartAmount = () => {\r\n//     return cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0);\r\n//   };\r\n\r\n//   const handleRemove = (productId) => {\r\n//     dispatch(removeFromCart(userId, productId));\r\n//   };\r\n\r\n//   const handleQuantityChange = (productId, newQuantity) => {\r\n//     dispatch(updateCartQuantity(userId, productId, newQuantity));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"cartitems\">\r\n//       <div className=\"cartitems-format-main\">\r\n//         <p>Products</p>\r\n//         <p>Title</p>\r\n//         <p>Price</p>\r\n//         <p>Quantity</p>\r\n//         <p>Total</p>\r\n//         <p>Remove</p>\r\n//       </div>\r\n//       <hr />\r\n//       {cartItems.map((e) => (\r\n//         <div key={e.productId}>\r\n//           <div className=\"cartitems-format-main cartitems-format\">\r\n//             <img className=\"cartitems-product-icon\" src={backend_url + e.image} alt={e.name} />\r\n//             <p className=\"cartitems-product-title\">{e.name}</p>\r\n//             <p>{currency}{e.new_price}</p>\r\n//             <input \r\n//               className=\"cartitems-quantity\" \r\n//               type=\"number\" \r\n//               value={e.quantity} \r\n//               onChange={(e) => handleQuantityChange(e.productId, Number(e.target.value))}\r\n//             />\r\n//             <p>{currency}{e.new_price * e.quantity}</p>\r\n//             <img \r\n//               onClick={() => handleRemove(e.productId)} \r\n//               className=\"cartitems-remove-icon\" \r\n//               src={cross_icon} \r\n//               alt=\"Remove\" \r\n//             />\r\n//           </div>\r\n//           <hr />\r\n//         </div>\r\n//       ))}\r\n      \r\n//       <div className=\"cartitems-down\">\r\n//         <div className=\"cartitems-total\">\r\n//           <h1>Cart Totals</h1>\r\n//           <div>\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Subtotal</p>\r\n//               <p>{currency}{getTotalCartAmount()}</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Shipping Fee</p>\r\n//               <p>Free</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <h3>Total</h3>\r\n//               <h3>{currency}{getTotalCartAmount()}</h3>\r\n//             </div>\r\n//           </div>\r\n//           <button>PROCEED TO CHECKOUT</button>\r\n//         </div>\r\n//         <div className=\"cartitems-promocode\">\r\n//           <p>If you have a promo code, Enter it here</p>\r\n//           <div className=\"cartitems-promobox\">\r\n//             <input type=\"text\" placeholder=\"promo code\" />\r\n//             <button>Submit</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// src/components/CartItems.js\r\n\r\n// import { getCart, removeFromCart } from '../../redux/actions/cartActions';\r\n\r\n// const CartItems = () => {\r\n//   const dispatch = useDispatch();\r\n//   const cartItems = useSelector(state => state.cart.items);\r\n//   const error = useSelector(state => state.cart.error);\r\n//   const loading = useSelector(state => state.cart.loading);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getCart());\r\n//   }, [dispatch]);\r\n\r\n//   const handleRemove = (itemId) => {\r\n//     dispatch(removeFromCart(itemId));\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading cart items...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div>\r\n//         <p>Error loading cart: {error}</p>\r\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"cart-container\">\r\n//       <h1>Your Cart</h1>\r\n//       {cartItems.length === 0 ? (\r\n//         <p>Your cart is empty</p>\r\n//       ) : (\r\n//         <ul className=\"cart-list\">\r\n//           {cartItems.map(item => (\r\n//             <li key={item._id} className=\"cart-item\">\r\n//               <img src={item.image} alt={item.name} className=\"cart-item-image\" />\r\n//               <div className=\"cart-item-details\">\r\n//                 <h2>{item.name}</h2>\r\n//                 <p>Price: ${item.new_price}</p>\r\n//                 <p>Quantity: {item.quantity}</p>\r\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\r\n//                   Remove\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//       {cartItems.length > 0 && (\r\n//         <div className=\"cart-total\">\r\n//           <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CartItems;\r\n\r\n\r\n// import { getCart, removeFromCart } from '../../redux/actions/cartActions';\r\n\r\n// const CartItems = () => {\r\n//   const dispatch = useDispatch();\r\n//   const cartItems = useSelector(state => state.cart.items || []);\r\n//   const error = useSelector(state => state.cart.error);\r\n//   const loading = useSelector(state => state.cart.loading);\r\n\r\n//   useEffect(() => {\r\n//     console.log('Dispatching getCart action');\r\n//     dispatch(getCart());\r\n//   }, [dispatch]);\r\n  \r\n\r\n//   const handleRemove = (itemId) => {\r\n//     dispatch(removeFromCart(itemId));\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading cart items...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div>\r\n//         <p>Error loading cart: {error}</p>\r\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Log cart items to check if the data is as expected\r\n//   console.log('Cart items:', cartItems);\r\n\r\n//   return (\r\n//     <div className=\"cart-container\">\r\n//       <h1>Your Cart</h1>\r\n//       {cartItems.length === 0 ? (\r\n//         <p>Your cart is empty</p>\r\n//       ) : (\r\n//         <ul className=\"cart-list\">\r\n//           {cartItems.map(item => (\r\n//             <li key={item._id} className=\"cart-item\">\r\n//               <img src={item.image} alt={item.name} className=\"cart-item-image\" />\r\n//               <div className=\"cart-item-details\">\r\n//                 <h2>{item.name}</h2>\r\n//                 <p>Price: ${item.new_price.toFixed(2)}</p>\r\n//                 <p>Quantity: {item.quantity}</p>\r\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\r\n//                   Remove\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//       {cartItems.length > 0 && (\r\n//         <div className=\"cart-total\">\r\n//           <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CartItems;\r\n\r\n// import { getCart, removeFromCart } from '../../redux/actions/cartActions';\r\n\r\n// const CartItems = () => {\r\n//   const dispatch = useDispatch();\r\n//   const cartItems = useSelector(state => state.cart.items);\r\n//   const error = useSelector(state => state.cart.error);\r\n//   const loading = useSelector(state => state.cart.loading);\r\n\r\n//   useEffect(() => {\r\n//     console.log('Dispatching getCart action');\r\n//     dispatch(getCart());\r\n//   }, [dispatch]);\r\n\r\n//   const handleRemove = (itemId) => {\r\n//     dispatch(removeFromCart(itemId));\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading cart items...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div>\r\n//         <p>Error loading cart: {error}</p>\r\n//         <button onClick={() => dispatch(getCart())}>Try Again</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   console.log('Cart items in component:', cartItems); // Log cart items\r\n\r\n//   // return (\r\n//   //   <div className=\"cart-container\">\r\n//   //     <h1>Your Cart</h1>\r\n//   //     {cartItems.length === 0 ? (\r\n//   //       <p>Your cart is empty</p>\r\n//   //     ) : (\r\n//   //       <ul className=\"cart-list\">\r\n//   //         {cartItems.map(item => (\r\n//   //           <li key={item._id} className=\"cart-item\">\r\n//   //             <img src={item.image} alt={item.name} className=\"cart-item-image\" />\r\n//   //             <div className=\"cart-item-details\">\r\n//   //               <h2>{item.name}</h2>\r\n//   //               <p>Price: ${item.new_price.toFixed(2)}</p>\r\n//   //               <p>Quantity: {item.quantity}</p>\r\n//   //               <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\r\n//   //                 Remove\r\n//   //               </button>\r\n//   //             </div>\r\n//   //           </li>\r\n//   //         ))}\r\n//   //       </ul>\r\n//   //     )}\r\n//   //     {cartItems.length > 0 && (\r\n//   //       <div className=\"cart-total\">\r\n//   //         <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n//   //       </div>\r\n//   //     )}\r\n//   //   </div>\r\n//   // );\r\n\r\n//   return (\r\n//     <div className=\"cart-container\">\r\n//       <h1>Your Cart</h1>\r\n//       {cartItems.length === 0 ? (\r\n//         <p>Your cart is empty</p>\r\n//       ) : (\r\n//         <ul className=\"cart-list\">\r\n//           {cartItems.map(item => (\r\n//             <li key={item._id} className=\"cart-item\">\r\n//               <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\r\n//               <div className=\"cart-item-details\">\r\n//                 <h2>{item.name}</h2>\r\n//                 <p>Price: ${item.new_price}</p>\r\n//                 <p>Quantity: {item.quantity}</p>\r\n//                 <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\r\n//                   Remove\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//       {cartItems.length > 0 && (\r\n//         <div className=\"cart-total\">\r\n//           <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\nimport { getCart, updateQuantity, removeFromCart } from '../../redux/actions/cartActions';\r\n\r\nconst CartItems = () => {\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector(state => state.cart.items);\r\n  const error = useSelector(state => state.cart.error);\r\n  const loading = useSelector(state => state.cart.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n  }, [dispatch]);\r\n\r\n  const handleIncrease = (itemId) => {\r\n    const item = cartItems.find(item => item._id === itemId);\r\n    if (item) {\r\n      dispatch(updateQuantity(itemId, item.quantity + 1));\r\n    }\r\n  };\r\n\r\n  const handleDecrease = (itemId) => {\r\n    const item = cartItems.find(item => item._id === itemId);\r\n    if (item && item.quantity > 1) {\r\n      dispatch(updateCQuantity(itemId, item.quantity - 1));\r\n    }\r\n  };\r\n\r\n  const handleRemove = (itemId) => {\r\n    dispatch(removeFromCart(itemId));\r\n  };\r\n  if (loading) {\r\n    return <div>Loading cart items...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <p>Error loading cart: {error}</p>\r\n        <button onClick={() => dispatch(getCart())}>Try Again</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1>Your Cart</h1>\r\n      {cartItems.length === 0 ? (\r\n        <p>Your cart is empty</p>\r\n      ) : (\r\n        <ul className=\"cart-list\">\r\n          {cartItems.map(item => (\r\n            <li key={item._id} className=\"cart-item\">\r\n              <img src={`http://localhost:4000${item.image}`} alt={item.name} className=\"cart-item-image\" />\r\n              <div className=\"cart-item-details\">\r\n                <h2>{item.name}</h2>\r\n                <p>Price: ${item.new_price}</p>\r\n                <p>Quantity: {item.quantity}</p>\r\n                <button onClick={() => handleDecrease(item._id)} className=\"quantity-button\">-</button>\r\n                <button onClick={() => handleIncrease(item._id)} className=\"quantity-button\">+</button>\r\n                <button onClick={() => handleRemove(item._id)} className=\"remove-button\">\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {cartItems.length > 0 && (\r\n        <div className=\"cart-total\">\r\n          <h2>Total: ${cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0).toFixed(2)}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItems;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}