{"ast":null,"code":"// import axios from 'axios';\n\n// // Action Types\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// // API URL\n// const API_URL = 'http://localhost:4000/auth';\n\n// // Action Creators\n// export const login = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/login`, userData);\n//     const { token } = response.data;\n\n//     // Save token to localStorage or cookies as needed\n//     localStorage.setItem('token', token);\n\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: token,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: LOGIN_FAIL,\n//       payload: error.response.data.errors,\n//     });\n//   }\n// };\n\n// export const signup = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/signup`, userData);\n//     const { token } = response.data;\n\n//     // Save token to localStorage or cookies as needed\n//     localStorage.setItem('token', token);\n\n//     dispatch({\n//       type: SIGNUP_SUCCESS,\n//       payload: token,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: SIGNUP_FAIL,\n//       payload: error.response.data.errors,\n//     });\n//   }\n// };\n\n// // Logout Action\n// export const logout = () => (dispatch) => {\n//   // Remove token from localStorage or cookies\n//   localStorage.removeItem('token');\n\n//   dispatch({\n//     type: LOGOUT,\n//   });\n// };\n// authActions.js\n\nimport axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, SIGNUP_SUCCESS, SIGNUP_FAIL } from '../reducers/authReducer';\nexport const signup = userData => async dispatch => {\n  try {\n    const res = await axios.post(`${ba}/auth/signup`, userData);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data.token\n    });\n\n    // Optionally, you can also dispatch login action here if needed\n    // or navigate to a different page\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: err.response.data.errors\n    });\n  }\n};\n\n// Existing login action\nexport const login = userData => async dispatch => {\n  try {\n    const res = await axios.post(`${backend_url}/auth/login`, userData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.token\n    });\n\n    // Navigate to home or other action\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.errors\n    });\n  }\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","signup","userData","dispatch","res","post","ba","type","payload","data","token","err","response","errors","login","backend_url"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.jsx"],"sourcesContent":["// import axios from 'axios';\r\n\r\n// // Action Types\r\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\r\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n// export const LOGOUT = 'LOGOUT';\r\n\r\n// // API URL\r\n// const API_URL = 'http://localhost:4000/auth';\r\n\r\n// // Action Creators\r\n// export const login = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/login`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Save token to localStorage or cookies as needed\r\n//     localStorage.setItem('token', token);\r\n\r\n//     dispatch({\r\n//       type: LOGIN_SUCCESS,\r\n//       payload: token,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: LOGIN_FAIL,\r\n//       payload: error.response.data.errors,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const signup = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/signup`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Save token to localStorage or cookies as needed\r\n//     localStorage.setItem('token', token);\r\n\r\n//     dispatch({\r\n//       type: SIGNUP_SUCCESS,\r\n//       payload: token,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: SIGNUP_FAIL,\r\n//       payload: error.response.data.errors,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Logout Action\r\n// export const logout = () => (dispatch) => {\r\n//   // Remove token from localStorage or cookies\r\n//   localStorage.removeItem('token');\r\n\r\n//   dispatch({\r\n//     type: LOGOUT,\r\n//   });\r\n// };\r\n// authActions.js\r\n\r\nimport axios from 'axios';\r\nimport { LOGIN_SUCCESS, LOGIN_FAIL, SIGNUP_SUCCESS, SIGNUP_FAIL } from '../reducers/authReducer';\r\n\r\nexport const signup = (userData) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`${ba}/auth/signup`, userData);\r\n\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data.token\r\n    });\r\n\r\n    // Optionally, you can also dispatch login action here if needed\r\n    // or navigate to a different page\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n      payload: err.response.data.errors\r\n    });\r\n  }\r\n};\r\n\r\n// Existing login action\r\nexport const login = (userData) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`${backend_url}/auth/login`, userData);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data.token\r\n    });\r\n\r\n    // Navigate to home or other action\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: err.response.data.errors\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,UAAU,EAAEC,cAAc,EAAEC,WAAW,QAAQ,yBAAyB;AAEhG,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAK,MAAMC,QAAQ,IAAI;EACpD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAE,GAAEC,EAAG,cAAa,EAAEJ,QAAQ,CAAC;IAE3DC,QAAQ,CAAC;MACPI,IAAI,EAAER,cAAc;MACpBS,OAAO,EAAEJ,GAAG,CAACK,IAAI,CAACC;IACpB,CAAC,CAAC;;IAEF;IACA;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZR,QAAQ,CAAC;MACPI,IAAI,EAAEP,WAAW;MACjBQ,OAAO,EAAEG,GAAG,CAACC,QAAQ,CAACH,IAAI,CAACI;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAIZ,QAAQ,IAAK,MAAMC,QAAQ,IAAI;EACnD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAE,GAAEU,WAAY,aAAY,EAAEb,QAAQ,CAAC;IAEnEC,QAAQ,CAAC;MACPI,IAAI,EAAEV,aAAa;MACnBW,OAAO,EAAEJ,GAAG,CAACK,IAAI,CAACC;IACpB,CAAC,CAAC;;IAEF;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZR,QAAQ,CAAC;MACPI,IAAI,EAAET,UAAU;MAChBU,OAAO,EAAEG,GAAG,CAACC,QAAQ,CAACH,IAAI,CAACI;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}