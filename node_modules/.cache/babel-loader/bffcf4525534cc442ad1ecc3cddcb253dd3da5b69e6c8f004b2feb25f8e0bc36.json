{"ast":null,"code":"// // authActions.js\n\n// import axios from 'axios';\n\n// // Action creator for login\n// export const login = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, userData);\n//     const { token } = response.data;\n\n//     // Store the token in local storage or Redux store\n//     localStorage.setItem('token', token);\n//     dispatch({ type: 'LOGIN_SUCCESS', payload: token });\n//   } catch (error) {\n//     console.error('Login error:', error.response ? error.response.data : error.message);\n//     dispatch({ type: 'LOGIN_FAIL', payload: error.response ? error.response.data : error.message });\n//   }\n// };\n\n// export const signup = (userData) => async (dispatch) => {\n//     try {\n//       const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/signup`, userData);\n//       const { token } = response.data;\n\n//       // Store the token in local storage or Redux store\n//       localStorage.setItem('token', token);\n//       dispatch({ type: 'SIGNUP_SUCCESS', payload: token });\n//     } catch (error) {\n//       console.error('Signup error:', error.response ? error.response.data : error.message);\n//       dispatch({ type: 'SIGNUP_FAIL', payload: error.response ? error.response.data : error.message });\n//     }\n//   };\n\n//   // Action creator for forgot password\n//   export const forgotPassword = (userData) => async (dispatch) => {\n//     try {\n//       await axios.post(`${process.env.REACT_APP_API_URL}/auth/forgot-password`, userData);\n//       dispatch({ type: 'FORGOT_PASSWORD_SUCCESS' });\n//     } catch (error) {\n//       console.error('Forgot password error:', error.response ? error.response.data : error.message);\n//       dispatch({ type: 'FORGOT_PASSWORD_FAIL', payload: error.response ? error.response.data : error.message });\n//     }\n//   };","map":{"version":3,"names":[],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.jsx"],"sourcesContent":["// // authActions.js\r\n\r\n// import axios from 'axios';\r\n\r\n// // Action creator for login\r\n// export const login = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Store the token in local storage or Redux store\r\n//     localStorage.setItem('token', token);\r\n//     dispatch({ type: 'LOGIN_SUCCESS', payload: token });\r\n//   } catch (error) {\r\n//     console.error('Login error:', error.response ? error.response.data : error.message);\r\n//     dispatch({ type: 'LOGIN_FAIL', payload: error.response ? error.response.data : error.message });\r\n//   }\r\n// };\r\n\r\n// export const signup = (userData) => async (dispatch) => {\r\n//     try {\r\n//       const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/signup`, userData);\r\n//       const { token } = response.data;\r\n  \r\n//       // Store the token in local storage or Redux store\r\n//       localStorage.setItem('token', token);\r\n//       dispatch({ type: 'SIGNUP_SUCCESS', payload: token });\r\n//     } catch (error) {\r\n//       console.error('Signup error:', error.response ? error.response.data : error.message);\r\n//       dispatch({ type: 'SIGNUP_FAIL', payload: error.response ? error.response.data : error.message });\r\n//     }\r\n//   };\r\n  \r\n//   // Action creator for forgot password\r\n//   export const forgotPassword = (userData) => async (dispatch) => {\r\n//     try {\r\n//       await axios.post(`${process.env.REACT_APP_API_URL}/auth/forgot-password`, userData);\r\n//       dispatch({ type: 'FORGOT_PASSWORD_SUCCESS' });\r\n//     } catch (error) {\r\n//       console.error('Forgot password error:', error.response ? error.response.data : error.message);\r\n//       dispatch({ type: 'FORGOT_PASSWORD_FAIL', payload: error.response ? error.response.data : error.message });\r\n//     }\r\n//   };\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}