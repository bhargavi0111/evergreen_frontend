{"ast":null,"code":"// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\n// export const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\n\n// // Action creators\n// export const loginSuccess = (token) => ({\n//   type: LOGIN_SUCCESS,\n//   payload: token,\n// });\n\n// export const loginFail = (error) => ({\n//   type: LOGIN_FAIL,\n//   payload: error,\n// });\n\n// export const signupSuccess = (token) => ({\n//   type: SIGNUP_SUCCESS,\n//   payload: token,\n// });\n\n// export const signupFail = (error) => ({\n//   type: SIGNUP_FAIL,\n//   payload: error,\n// });\n\n// export const forgotPasswordSuccess = (message) => ({\n//   type: FORGOT_PASSWORD_SUCCESS,\n//   payload: message,\n// });\n\n// export const forgotPasswordFail = (error) => ({\n//   type: FORGOT_PASSWORD_FAIL,\n//   payload: error,\n// });\nimport axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, SIGNUP_SUCCESS, SIGNUP_FAIL, SET_ERROR } from './types';\n\n// Signup Action\nexport const signup = userData => async dispatch => {\n  try {\n    const res = await axios.post('/auth/signup', userData);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: err.response.data.errors\n    });\n  }\n};\n\n// Login Action\nexport const login = userData => async dispatch => {\n  try {\n    const res = await axios.post('/auth/login', userData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.errors\n    });\n  }\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","SET_ERROR","signup","userData","dispatch","res","post","type","payload","data","err","response","errors","login"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.js"],"sourcesContent":["// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\r\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n// export const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\n// export const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\n// // Action creators\r\n// export const loginSuccess = (token) => ({\r\n//   type: LOGIN_SUCCESS,\r\n//   payload: token,\r\n// });\r\n\r\n// export const loginFail = (error) => ({\r\n//   type: LOGIN_FAIL,\r\n//   payload: error,\r\n// });\r\n\r\n// export const signupSuccess = (token) => ({\r\n//   type: SIGNUP_SUCCESS,\r\n//   payload: token,\r\n// });\r\n\r\n// export const signupFail = (error) => ({\r\n//   type: SIGNUP_FAIL,\r\n//   payload: error,\r\n// });\r\n\r\n// export const forgotPasswordSuccess = (message) => ({\r\n//   type: FORGOT_PASSWORD_SUCCESS,\r\n//   payload: message,\r\n// });\r\n\r\n// export const forgotPasswordFail = (error) => ({\r\n//   type: FORGOT_PASSWORD_FAIL,\r\n//   payload: error,\r\n// });\r\nimport axios from 'axios';\r\nimport { LOGIN_SUCCESS, LOGIN_FAIL, SIGNUP_SUCCESS, SIGNUP_FAIL, SET_ERROR } from './types';\r\n\r\n// Signup Action\r\nexport const signup = (userData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/auth/signup', userData);\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n      payload: err.response.data.errors\r\n    });\r\n  }\r\n};\r\n\r\n// Login Action\r\nexport const login = (userData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/auth/login', userData);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: err.response.data.errors\r\n    });\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,UAAU,EAAEC,cAAc,EAAEC,WAAW,EAAEC,SAAS,QAAQ,SAAS;;AAE3F;AACA,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,cAAc,EAAEH,QAAQ,CAAC;IACtDC,QAAQ,CAAC;MACPG,IAAI,EAAER,cAAc;MACpBS,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZN,QAAQ,CAAC;MACPG,IAAI,EAAEP,WAAW;MACjBQ,OAAO,EAAEE,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAIV,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,aAAa,EAAEH,QAAQ,CAAC;IACrDC,QAAQ,CAAC;MACPG,IAAI,EAAEV,aAAa;MACnBW,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZN,QAAQ,CAAC;MACPG,IAAI,EAAET,UAAU;MAChBU,OAAO,EAAEE,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}