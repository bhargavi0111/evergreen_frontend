{"ast":null,"code":"import axios from 'axios';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART_SUCCESS = 'REMOVE_FROM_CART_SUCCESS';\nexport const CART_ERROR = 'CART_ERROR';\nexport const UPDATE_QUANTITY_SUCCESS = 'UPDATE_QUANTITY_SUCCESS';\nexport const addToCart = itemId => async dispatch => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('User not authenticated');\n    }\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log('Sending itemId:', itemId); // Log the itemId being sent\n\n    if (!itemId || typeof itemId !== 'string') {\n      throw new Error('Invalid itemId');\n    }\n    const response = await axios.post('http://localhost:4000/cart/addtocart', {\n      itemId\n    },\n    // Only sending itemId as a string\n    config);\n    dispatch({\n      type: 'ADD_TO_CART_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_TO_CART_FAIL',\n      payload: error.response ? error.response.data : error.message\n    });\n    console.error('Error adding to cart:', error.response ? error.response.data : error.message);\n  }\n};\nexport const GET_CART_SUCCESS = 'GET_CART_SUCCESS';\nexport const GET_CART_FAIL = 'GET_CART_FAIL';\nexport const GET_CART_REQUEST = 'GET_CART_REQUEST';\nexport const getCart = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_CART_REQUEST\n    });\n    const token = localStorage.getItem('token');\n    const response = await axios.get('http://localhost:4000/cart/getcart', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: GET_CART_SUCCESS,\n      payload: response.data.cart\n    });\n  } catch (error) {\n    console.error('Error fetching cart:', error); // Log error\n    dispatch({\n      type: GET_CART_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const removeFromCart = itemId => async dispatch => {\n  const token = localStorage.getItem('token');\n  console.log(`Removing item with ID: ${itemId}`);\n  try {\n    const response = await axios.delete(`http://localhost:4000/cart/removefromcart`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        itemId\n      }\n    });\n    console.log(\"Response from server:\", response);\n    dispatch({\n      type: 'REMOVE_FROM_CART_SUCCESS',\n      payload: response.data.cart.products\n    });\n  } catch (error) {\n    console.error(\"Error fetching cart:\", error);\n    dispatch({\n      type: 'CART_ERROR',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updateCartQuantity = (itemId, newQuantity) => async (dispatch, getState) => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.patch('http://localhost:4000/cart/updatequantity', {\n      itemId,\n      newQuantity\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: 'UPDATE_CART_SUCCESS',\n      payload: response.data.cart.products\n    });\n  } catch (error) {\n    console.error(\"Error updating cart:\", error);\n    dispatch({\n      type: 'CART_ERROR',\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ADD_TO_CART","REMOVE_FROM_CART_SUCCESS","CART_ERROR","UPDATE_QUANTITY_SUCCESS","addToCart","itemId","dispatch","token","localStorage","getItem","Error","config","headers","console","log","response","post","type","payload","data","error","message","GET_CART_SUCCESS","GET_CART_FAIL","GET_CART_REQUEST","getCart","get","Authorization","cart","removeFromCart","delete","products","updateCartQuantity","newQuantity","getState","patch"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/cartActions.jsx"],"sourcesContent":["\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART_SUCCESS = 'REMOVE_FROM_CART_SUCCESS';\r\nexport const CART_ERROR = 'CART_ERROR';\r\nexport const UPDATE_QUANTITY_SUCCESS='UPDATE_QUANTITY_SUCCESS'\r\n\r\n\r\n\r\n\r\n\r\nexport const addToCart = (itemId) => async (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    console.log('Sending itemId:', itemId); // Log the itemId being sent\r\n\r\n    if (!itemId || typeof itemId !== 'string') {\r\n      throw new Error('Invalid itemId');\r\n    }\r\n\r\n    const response = await axios.post(\r\n      'http://localhost:4000/cart/addtocart',\r\n      { itemId }, // Only sending itemId as a string\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: 'ADD_TO_CART_SUCCESS',\r\n      payload: response.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'ADD_TO_CART_FAIL',\r\n      payload: error.response ? error.response.data : error.message\r\n    });\r\n    console.error('Error adding to cart:', error.response ? error.response.data : error.message);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const  GET_CART_SUCCESS='GET_CART_SUCCESS'\r\nexport const GET_CART_FAIL='GET_CART_FAIL'\r\nexport const GET_CART_REQUEST ='GET_CART_REQUEST'\r\nexport const getCart = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GET_CART_REQUEST });\r\n    const token = localStorage.getItem('token');\r\n    \r\n    const response = await axios.get('http://localhost:4000/cart/getcart', {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    dispatch({ type: GET_CART_SUCCESS, payload: response.data.cart });\r\n  } catch (error) {\r\n    console.error('Error fetching cart:', error); // Log error\r\n    dispatch({ type: GET_CART_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const removeFromCart = (itemId) => async dispatch => {\r\n\r\n  const token = localStorage.getItem('token');\r\n  console.log(`Removing item with ID: ${itemId}`);\r\n  try {\r\n    const response = await axios.delete(`http://localhost:4000/cart/removefromcart`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n\r\n      data: { itemId },\r\n    });\r\n    console.log(\"Response from server:\", response);\r\n    dispatch({ type: 'REMOVE_FROM_CART_SUCCESS', payload: response.data.cart.products });\r\n  } catch (error) {\r\n    console.error(\"Error fetching cart:\", error);\r\n    dispatch({ type: 'CART_ERROR', payload: error.response.data.message });\r\n  }\r\n};\r\n\r\n\r\nexport const updateCartQuantity = (itemId, newQuantity) => async (dispatch, getState) => {\r\n  const token = localStorage.getItem('token');\r\n  try {\r\n    const response = await axios.patch('http://localhost:4000/cart/updatequantity', \r\n      { itemId, newQuantity },\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      }\r\n    );\r\n    dispatch({ type: 'UPDATE_CART_SUCCESS', payload: response.data.cart.products });\r\n  } catch (error) {\r\n    console.error(\"Error updating cart:\", error);\r\n    dispatch({ type: 'CART_ERROR', payload: error.response.data.message });\r\n  }\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}