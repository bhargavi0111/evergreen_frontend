{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Pages\\\\ShopCategory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './CSS/ShopCategory.css';\nimport dropdown_icon from '../Components/Assets/dropdown_icon.png';\nimport Item from '../Components/Item/Item';\nimport { fetchProductsByCategory } from '../redux/actions/shopActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopCategory = props => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    products,\n    loading,\n    error\n  } = useSelector(state => state.shop);\n  useEffect(() => {\n    dispatch(fetchProductsByCategory(props.category));\n  }, [dispatch, props.category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-category\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"shopcategory-banner\",\n      src: props.banner,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shopcategory-indexSort\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          //           type=\"text\"\n          //           placeholder=\"Search products by name...\"\n          //           value={searchQuery}\n          onChange: handleSearch,\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shopcategory-products\",\n      children: products.length > 0 ? products.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        id: item._id,\n        name: item.name,\n        image: `http://localhost:4000${item.image}` // Adjust URL\n        ,\n        new_price: item.new_price,\n        old_price: item.old_price\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopCategory, \"PKhOwtxObuB+te22yg4N2foPzSo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ShopCategory;\nexport default ShopCategory;\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import './CSS/ShopCategory.css';\n// import dropdown_icon from '../Components/Assets/dropdown_icon.png';\n// import Item from '../Components/Item/Item';\n// import { fetchProductsByCategory } from '../redux/actions/shopActions';\n\n// const ShopCategory = (props) => {\n//   const dispatch = useDispatch();\n\n//   // Accessing the shop reducer state (ensure `state.shop` is correct)\n//   const { products, loading, error } = useSelector((state) => state.shop);\n\n//   // Fetch products by category on component mount or category change\n//   useEffect(() => {\n//     if (props.category) {\n//       dispatch(fetchProductsByCategory(props.category));\n//     }\n//   }, [dispatch, props.category]);\n\n//   return (\n//     <div className='shop-category'>\n//       {loading && <p>Loading...</p>} {/* Display loading state */}\n//       {error && <p>Error: {error}</p>} {/* Display error state */}\n\n//       <img className='shopcategory-banner' src={props.banner} alt=\"Category Banner\" />\n\n//       <div className=\"shopcategory-indexSort\">\n//         <p>\n//           <span>Showing 1-12</span> out of {products.length} products\n//         </p>\n//         <div className=\"shopcategory-sort\">\n//           Sort by <img src={dropdown_icon} alt=\"Sort Icon\" />\n//         </div>\n//       </div>\n\n//       <div className=\"shopcategory-products\">\n//         {products.length > 0 ? (\n//           products.map((item) => (\n//             <Item\n//               key={item._id}\n//               id={item._id}\n//               name={item.name}\n//               image={`http://localhost:4000${item.image}`} // Ensure image URL is correct\n//               new_price={item.new_price}\n//               old_price={item.old_price}\n//             />\n//           ))\n//         ) : (\n//           !loading && <p>No products available</p> // Only show this if not loading\n//         )}\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default ShopCategory;\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import './CSS/ShopCategory.css';\n// import dropdown_icon from '../Components/Assets/dropdown_icon.png';\n// import Item from '../Components/Item/Item';\n// import { fetchProductsByCategory } from '../redux/actions/shopActions';\n\n// const ShopCategory = (props) => {\n//   const dispatch = useDispatch();\n//   const [searchQuery, setSearchQuery] = useState('');\n\n//   // Accessing the shop reducer state (ensure `state.shop` is correct)\n//   const { products, loading, error } = useSelector((state) => state.shop);\n\n//   // Fetch products by category on component mount or category change\n//   useEffect(() => {\n//     if (props.category) {\n//       dispatch(fetchProductsByCategory(props.category));\n//     }\n//   }, [dispatch, props.category]);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value);\n//   };\n\n//   // Filter products based on the search query\n//   const filteredProducts = products.filter(product =>\n//     product.name.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   return (\n//     <div className='shop-category'>\n//       {loading && <p>Loading...</p>} {/* Display loading state */}\n//       {error && <p>Error: {error}</p>} {/* Display error state */}\n\n//       <img className='shopcategory-banner' src={props.banner} alt=\"Category Banner\" />\n\n//       {/* <div className=\"shopcategory-indexSort\">\n//         <p>\n//           <span>Showing {filteredProducts.length}</span> out of {products.length} products\n//         </p>\n//         <div className=\"shopcategory-sort\">\n//           Sort by <img src={dropdown_icon} alt=\"Sort Icon\" />\n//         </div>\n//       </div> */}\n\n//       <div className=\"search-container\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search products by name...\"\n//           value={searchQuery}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         />\n//       </div>\n\n//       <div className=\"shopcategory-products\">\n//         {filteredProducts.length > 0 ? (\n//           filteredProducts.map((item) => (\n//             <Item\n//               key={item._id}\n//               id={item._id}\n//               name={item.name}\n//               image={`http://localhost:4000${item.image}`} // Ensure image URL is correct\n//               new_price={item.new_price}\n//               old_price={item.old_price}\n//             />\n//           ))\n//         ) : (\n//           !loading && <p>No products available</p> // Only show this if not loading\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ShopCategory;\nvar _c;\n$RefreshReg$(_c, \"ShopCategory\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","dropdown_icon","Item","fetchProductsByCategory","jsxDEV","_jsxDEV","ShopCategory","props","_s","dispatch","products","loading","error","state","shop","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","banner","alt","onChange","handleSearch","length","map","item","id","_id","name","image","new_price","old_price","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Pages/ShopCategory.jsx"],"sourcesContent":["\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './CSS/ShopCategory.css';\r\nimport dropdown_icon from '../Components/Assets/dropdown_icon.png';\r\nimport Item from '../Components/Item/Item';\r\nimport { fetchProductsByCategory } from '../redux/actions/shopActions';\r\n\r\nconst ShopCategory = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { products, loading, error } = useSelector((state) => state.shop);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductsByCategory(props.category));\r\n  }, [dispatch, props.category]);\r\n\r\n  return (\r\n    <div className='shop-category'>\r\n      {/* Check if loading and error are handled */}\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>Error: {error}</p>}\r\n      <img className='shopcategory-banner' src={props.banner} alt=\"\" />\r\n      <div className=\"shopcategory-indexSort\">\r\n      \r\n     <div className=\"search-container\">\r\n       <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search products by name...\"\r\n//           value={searchQuery}\r\n          onChange={handleSearch}\r\n          className=\"search-bar\"\r\n        />\r\n      </div>\r\n      </div>\r\n      <div className=\"shopcategory-products\">\r\n        {products.length > 0 ? (\r\n          products.map((item) => (\r\n            <Item\r\n              key={item._id}\r\n              id={item._id}\r\n              name={item.name}\r\n              image={`http://localhost:4000${item.image}`} // Adjust URL\r\n              new_price={item.new_price}\r\n              old_price={item.old_price}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No products available</p>\r\n        )}\r\n      </div>\r\n      {/* <div className=\"shopcategory-loadmore\">\r\n        Explore More\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n export default ShopCategory;\r\n\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import './CSS/ShopCategory.css';\r\n// import dropdown_icon from '../Components/Assets/dropdown_icon.png';\r\n// import Item from '../Components/Item/Item';\r\n// import { fetchProductsByCategory } from '../redux/actions/shopActions';\r\n\r\n// const ShopCategory = (props) => {\r\n//   const dispatch = useDispatch();\r\n  \r\n//   // Accessing the shop reducer state (ensure `state.shop` is correct)\r\n//   const { products, loading, error } = useSelector((state) => state.shop);\r\n\r\n//   // Fetch products by category on component mount or category change\r\n//   useEffect(() => {\r\n//     if (props.category) {\r\n//       dispatch(fetchProductsByCategory(props.category));\r\n//     }\r\n//   }, [dispatch, props.category]);\r\n\r\n//   return (\r\n//     <div className='shop-category'>\r\n//       {loading && <p>Loading...</p>} {/* Display loading state */}\r\n//       {error && <p>Error: {error}</p>} {/* Display error state */}\r\n      \r\n//       <img className='shopcategory-banner' src={props.banner} alt=\"Category Banner\" />\r\n      \r\n//       <div className=\"shopcategory-indexSort\">\r\n//         <p>\r\n//           <span>Showing 1-12</span> out of {products.length} products\r\n//         </p>\r\n//         <div className=\"shopcategory-sort\">\r\n//           Sort by <img src={dropdown_icon} alt=\"Sort Icon\" />\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"shopcategory-products\">\r\n//         {products.length > 0 ? (\r\n//           products.map((item) => (\r\n//             <Item\r\n//               key={item._id}\r\n//               id={item._id}\r\n//               name={item.name}\r\n//               image={`http://localhost:4000${item.image}`} // Ensure image URL is correct\r\n//               new_price={item.new_price}\r\n//               old_price={item.old_price}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           !loading && <p>No products available</p> // Only show this if not loading\r\n//         )}\r\n//       </div>\r\n\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShopCategory;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import './CSS/ShopCategory.css';\r\n// import dropdown_icon from '../Components/Assets/dropdown_icon.png';\r\n// import Item from '../Components/Item/Item';\r\n// import { fetchProductsByCategory } from '../redux/actions/shopActions';\r\n\r\n// const ShopCategory = (props) => {\r\n//   const dispatch = useDispatch();\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n\r\n//   // Accessing the shop reducer state (ensure `state.shop` is correct)\r\n//   const { products, loading, error } = useSelector((state) => state.shop);\r\n\r\n//   // Fetch products by category on component mount or category change\r\n//   useEffect(() => {\r\n//     if (props.category) {\r\n//       dispatch(fetchProductsByCategory(props.category));\r\n//     }\r\n//   }, [dispatch, props.category]);\r\n\r\n//   const handleSearch = (event) => {\r\n//     setSearchQuery(event.target.value);\r\n//   };\r\n\r\n//   // Filter products based on the search query\r\n//   const filteredProducts = products.filter(product =>\r\n//     product.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <div className='shop-category'>\r\n//       {loading && <p>Loading...</p>} {/* Display loading state */}\r\n//       {error && <p>Error: {error}</p>} {/* Display error state */}\r\n\r\n//       <img className='shopcategory-banner' src={props.banner} alt=\"Category Banner\" />\r\n\r\n//       {/* <div className=\"shopcategory-indexSort\">\r\n//         <p>\r\n//           <span>Showing {filteredProducts.length}</span> out of {products.length} products\r\n//         </p>\r\n//         <div className=\"shopcategory-sort\">\r\n//           Sort by <img src={dropdown_icon} alt=\"Sort Icon\" />\r\n//         </div>\r\n//       </div> */}\r\n\r\n//       <div className=\"search-container\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search products by name...\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearch}\r\n//           className=\"search-bar\"\r\n//         />\r\n//       </div>\r\n\r\n//       <div className=\"shopcategory-products\">\r\n//         {filteredProducts.length > 0 ? (\r\n//           filteredProducts.map((item) => (\r\n//             <Item\r\n//               key={item._id}\r\n//               id={item._id}\r\n//               name={item.name}\r\n//               image={`http://localhost:4000${item.image}`} // Ensure image URL is correct\r\n//               new_price={item.new_price}\r\n//               old_price={item.old_price}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           !loading && <p>No products available</p> // Only show this if not loading\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShopCategory;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}