{"ast":null,"code":"// src/redux/types/cartTypes.js\n\n// src/redux/actions/cartActions.js\nimport axios from 'axios';\nexport const FETCH_CART_ITEMS = 'FETCH_CART_ITEMS';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const fetchCartItems = userId => async dispatch => {\n  try {\n    const response = await axios.get(`/ca/${userId}`);\n    dispatch({\n      type: FETCH_CART_ITEMS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('Error fetching cart items:', error);\n  }\n};\nexport const addToCart = product => async (dispatch, getState) => {\n  try {\n    const {\n      user\n    } = getState().auth; // Assuming you have an auth reducer with user info\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n    const response = await axios.post('/api/addtocart', {\n      userId: user._id,\n      productId: product._id,\n      quantity: 1 // You can modify this if you want to allow adding multiple quantities\n    });\n\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        ...product,\n        quantity: 1\n      }\n    });\n\n    // Optionally, you can fetch the updated cart after adding an item\n    dispatch(fetchCartItems(user._id));\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    // Handle error (e.g., show an error message to the user)\n  }\n};","map":{"version":3,"names":["axios","FETCH_CART_ITEMS","ADD_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","fetchCartItems","userId","dispatch","response","get","type","payload","data","error","console","addToCart","product","getState","user","auth","Error","post","_id","productId","quantity"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/cartActions.jsx"],"sourcesContent":["// src/redux/types/cartTypes.js\r\n\r\n// src/redux/actions/cartActions.js\r\nimport axios from 'axios';\r\nexport const FETCH_CART_ITEMS = 'FETCH_CART_ITEMS';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\r\n\r\n\r\n\r\nexport const fetchCartItems = (userId) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`/ca/${userId}`);\r\n    dispatch({\r\n      type: FETCH_CART_ITEMS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching cart items:', error);\r\n  }\r\n};\r\n\r\nexport const addToCart = (product) => async (dispatch, getState) => {\r\n  try {\r\n    const { user } = getState().auth; // Assuming you have an auth reducer with user info\r\n    if (!user) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n\r\n    const response = await axios.post('/api/addtocart', {\r\n      userId: user._id,\r\n      productId: product._id,\r\n      quantity: 1, // You can modify this if you want to allow adding multiple quantities\r\n    });\r\n\r\n    dispatch({\r\n      type: ADD_TO_CART,\r\n      payload: {\r\n        ...product,\r\n        quantity: 1,\r\n      },\r\n    });\r\n\r\n    // Optionally, you can fetch the updated cart after adding an item\r\n    dispatch(fetchCartItems(user._id));\r\n  } catch (error) {\r\n    console.error('Error adding to cart:', error);\r\n    // Handle error (e.g., show an error message to the user)\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAI1D,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,OAAMH,MAAO,EAAC,CAAC;IACjDC,QAAQ,CAAC;MACPG,IAAI,EAAET,gBAAgB;MACtBU,OAAO,EAAEH,QAAQ,CAACI;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD;AACF,CAAC;AAED,OAAO,MAAME,SAAS,GAAIC,OAAO,IAAK,OAAOT,QAAQ,EAAEU,QAAQ,KAAK;EAClE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;IAClC,IAAI,CAACD,IAAI,EAAE;MACT,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMZ,QAAQ,GAAG,MAAMR,KAAK,CAACqB,IAAI,CAAC,gBAAgB,EAAE;MAClDf,MAAM,EAAEY,IAAI,CAACI,GAAG;MAChBC,SAAS,EAAEP,OAAO,CAACM,GAAG;MACtBE,QAAQ,EAAE,CAAC,CAAE;IACf,CAAC,CAAC;;IAEFjB,QAAQ,CAAC;MACPG,IAAI,EAAER,WAAW;MACjBS,OAAO,EAAE;QACP,GAAGK,OAAO;QACVQ,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;;IAEF;IACAjB,QAAQ,CAACF,cAAc,CAACa,IAAI,CAACI,GAAG,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}