{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useEffect } from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const PrivateRoute = ({ element }) => {\n//   const token = localStorage.getItem('token');\n\n//   // Clear the token when the component mounts\n//   useEffect(() => {\n//     localStorage.removeItem('token');\n//   }, []);\n\n//   // Redirect to login if there's no token\n//   return token ? <Navigate to=\"/login\" /> : element;\n// };\n\n// export default PrivateRoute;\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n  imp;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateRoute, \"Tis/laFBs1mUsdamrhCn/+4kssg=\", true);\n_c = PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["PrivateRoute","component","Component","rest","_s","isAuthenticated","useSelector","state","user","imp","_jsxDEV","Route","render","props","fileName","_jsxFileName","lineNumber","columnNumber","Redirect","to","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/PrivateRoute.jsx"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n// const PrivateRoute = ({ element }) => {\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   // Clear the token when the component mounts\r\n//   useEffect(() => {\r\n//     localStorage.removeItem('token');\r\n//   }, []);\r\n\r\n//   // Redirect to login if there's no token\r\n//   return token ? <Navigate to=\"/login\" /> : element;\r\n// };\r\n\r\n// export default PrivateRoute;\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isAuthenticated = useSelector((state) => state.user.isAuthenticated);\r\n  imp\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAMA,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,eAAe,GAAGC,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACH,eAAe,CAAC;EAC1EI,GAAG;EAEH,oBACEC,OAAA,CAACC,KAAK;IAAA,GACAR,IAAI;IACRS,MAAM,EAAGC,KAAK,IACZR,eAAe,gBAAGK,OAAA,CAACR,SAAS;MAAA,GAAKW;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGP,OAAA,CAACQ,QAAQ;MAACC,EAAE,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACb,EAAA,CAZIJ,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}