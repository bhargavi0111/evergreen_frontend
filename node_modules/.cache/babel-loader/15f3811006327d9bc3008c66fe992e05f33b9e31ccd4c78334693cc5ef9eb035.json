{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Pages\\\\Product.jsx\",\n  _s = $RefreshSig$();\n// import React, { useContext } from 'react';\n// import { ShopContext } from '../Context/ShopContext';\n// import { useParams } from 'react-router-dom';\n// import Breadcrum from '../Components/Breadcrums/Breadcrum';\n// import ProductDisplay from '../Components/ProductDisplay/ProductDisplay';\n// import DescriptionBox from '../Components/DescriptionBox/DescriptionBox';\n// import RelatedProducts from '../Components/RelatedProducts/RelatedProducts';\n\n// const Product = () => {\n//   const { products } = useContext(ShopContext); // Make sure this matches your context property\n//   const { productId } = useParams();\n\n//   // Find the product based on ID from the URL parameters\n//   const product = products.find((e) => e._id === productId);\n\n//   if (!product) {\n//     return <div>Product not found</div>;\n//   }\n\n//   return (\n//     <div>\n//       <Breadcrum product={product} />\n//       <ProductDisplay product={product} />\n//       <DescriptionBox product={product} /> {/* Pass product if needed */}\n//       <RelatedProducts productId={productId} /> {/* Pass productId if needed */}\n//     </div>\n//   );\n// };\n\n// export default Product;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Breadcrum from '../Components/Breadcrums/Breadcrum';\nimport ProductDisplay from '../Components/ProductDisplay/ProductDisplay';\nimport DescriptionBox from '../Components/DescriptionBox/DescriptionBox';\nimport RelatedProducts from '../Components/RelatedProducts/RelatedProducts';\nimport { fetchalProducts } from '../redux/actions/productActions'; // Adjust the import path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = () => {\n  _s();\n  const {\n    productId\n  } = useParams();\n  const dispatch = useDispatch();\n\n  // Get products from Redux store\n  const products = useSelector(state => state.product.products);\n  useEffect(() => {\n    // Fetch products if they are not already loaded\n    if (!products.length) {\n      dispatch(fetchProducts());\n    }\n  }, [dispatch, products]);\n\n  // Find the product based on ID from the URL parameters\n  const product = products.find(e => e._id === productId);\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrum, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductDisplay, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DescriptionBox, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RelatedProducts, {\n      productId: productId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"VuE6Y75jbj+sDpD5aAcSDGum+bM=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","useParams","Breadcrum","ProductDisplay","DescriptionBox","RelatedProducts","fetchalProducts","jsxDEV","_jsxDEV","Product","_s","productId","dispatch","products","state","product","length","fetchProducts","find","e","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Pages/Product.jsx"],"sourcesContent":["// import React, { useContext } from 'react';\r\n// import { ShopContext } from '../Context/ShopContext';\r\n// import { useParams } from 'react-router-dom';\r\n// import Breadcrum from '../Components/Breadcrums/Breadcrum';\r\n// import ProductDisplay from '../Components/ProductDisplay/ProductDisplay';\r\n// import DescriptionBox from '../Components/DescriptionBox/DescriptionBox';\r\n// import RelatedProducts from '../Components/RelatedProducts/RelatedProducts';\r\n\r\n// const Product = () => {\r\n//   const { products } = useContext(ShopContext); // Make sure this matches your context property\r\n//   const { productId } = useParams();\r\n\r\n//   // Find the product based on ID from the URL parameters\r\n//   const product = products.find((e) => e._id === productId);\r\n\r\n//   if (!product) {\r\n//     return <div>Product not found</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <Breadcrum product={product} />\r\n//       <ProductDisplay product={product} />\r\n//       <DescriptionBox product={product} /> {/* Pass product if needed */}\r\n//       <RelatedProducts productId={productId} /> {/* Pass productId if needed */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Product;\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport Breadcrum from '../Components/Breadcrums/Breadcrum';\r\nimport ProductDisplay from '../Components/ProductDisplay/ProductDisplay';\r\nimport DescriptionBox from '../Components/DescriptionBox/DescriptionBox';\r\nimport RelatedProducts from '../Components/RelatedProducts/RelatedProducts';\r\nimport { fetchalProducts } from '../redux/actions/productActions'; // Adjust the import path if needed\r\n\r\nconst Product = () => {\r\n  const { productId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  // Get products from Redux store\r\n  const products = useSelector((state) => state.product.products);\r\n\r\n  useEffect(() => {\r\n    // Fetch products if they are not already loaded\r\n    if (!products.length) {\r\n      dispatch(fetchProducts());\r\n    }\r\n  }, [dispatch, products]);\r\n\r\n  // Find the product based on ID from the URL parameters\r\n  const product = products.find((e) => e._id === productId);\r\n\r\n  if (!product) {\r\n    return <div>Product not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrum product={product} />\r\n      <ProductDisplay product={product} />\r\n      <DescriptionBox product={product} />\r\n      <RelatedProducts productId={productId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,oCAAoC;AAC1D,OAAOC,cAAc,MAAM,6CAA6C;AACxE,OAAOC,cAAc,MAAM,6CAA6C;AACxE,OAAOC,eAAe,MAAM,+CAA+C;AAC3E,SAASC,eAAe,QAAQ,iCAAiC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAU,CAAC,GAAGV,SAAS,CAAC,CAAC;EACjC,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMa,QAAQ,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC;EAE/Df,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACe,QAAQ,CAACG,MAAM,EAAE;MACpBJ,QAAQ,CAACK,aAAa,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACL,QAAQ,EAAEC,QAAQ,CAAC,CAAC;;EAExB;EACA,MAAME,OAAO,GAAGF,QAAQ,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKT,SAAS,CAAC;EAEzD,IAAI,CAACI,OAAO,EAAE;IACZ,oBAAOP,OAAA;MAAAa,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACN,SAAS;MAACa,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BjB,OAAA,CAACL,cAAc;MAACY,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCjB,OAAA,CAACJ,cAAc;MAACW,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCjB,OAAA,CAACH,eAAe;MAACM,SAAS,EAAEA;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BID,OAAO;EAAA,QACWR,SAAS,EACdD,WAAW,EAGXD,WAAW;AAAA;AAAA2B,EAAA,GALxBjB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}