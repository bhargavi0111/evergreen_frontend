{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import Home from './Pages/Home';\n// import ShopCategory from './Pages/ShopCategory';\n// import Product from './Pages/Product';\n// import Cart from './Pages/Cart';\n// import LoginSignup from './Pages/LoginSignup';\n// import Footer from './Components/Footer/Footer';\n// import Navbar from './Components/Navbar/Navbar';\n// import plant_banner from './Components/Assets/banner_plants.png';\n// import pots_banner from './Components/Assets/banner_pots.png';\n// import tools_banner from './Components/Assets/banner_tools.png';\n// import gift_banner from './Components/Assets/banner_gifts.png';\n\n// export const backend_url = 'http://localhost:4000';\n// export const currency = '₹';\n\n// function App() {\n//   const auth = useSelector((state) => state.auth); // Ensure auth is not undefined\n//   const isAuthenticated = auth?.isAuthenticated; \n\n//   useEffect(() => {\n\n//     const token = localStorage.getItem('token');\n//     if (token && !isAuthenticated) {\n//       console.log('Token:', token); \n\n//     }\n//   }, [isAuthenticated]);\n\n//     console.log('isAuthenticated:', isAuthenticated); // Debugging line\n//   return (\n//     <BrowserRouter>\n//       {isAuthenticated && <Navbar />} \n\n//       <Routes>\n//         <Route \n//           path=\"/login\" \n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <LoginSignup />} \n//         />\n\n//         <Route \n//           path=\"/\" \n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <Navigate to=\"/login\" />} \n//         />\n\n//         <Route \n//           path=\"/home\" \n//           element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/plants\" \n//           element={isAuthenticated ? <ShopCategory banner={plant_banner} category=\"plants\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/pots\" \n//           element={isAuthenticated ? <ShopCategory banner={pots_banner} category=\"pots\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/tools\" \n//           element={isAuthenticated ? <ShopCategory banner={tools_banner} category=\"tools\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/gifts\" \n//           element={isAuthenticated ? <ShopCategory banner={gift_banner} category=\"gifts\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/product/:productId\" \n//           element={isAuthenticated ? <Product /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/cart\" \n//           element={isAuthenticated ? <Cart /> : <Navigate to=\"/login\" />} \n//         />\n//       </Routes>\n\n//       {isAuthenticated && <Footer />}\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n\n// import React, { useEffect } from 'react';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import Home from './Pages/Home';\n// import ShopCategory from './Pages/ShopCategory';\n// import Product from './Pages/Product';\n// import Cart from './Pages/Cart';\n// import LoginSignup from './Pages/LoginSignup';\n// import Footer from './Components/Footer/Footer';\n// import Navbar from './Components/Navbar/Navbar';\n// import plant_banner from './Components/Assets/banner_plants.png';\n// import pots_banner from './Components/Assets/banner_pots.png';\n// import tools_banner from './Components/Assets/banner_tools.png';\n// import gift_banner from './Components/Assets/banner_gifts.png';\n// import { logout } from './redux/actions/authActions'; // Assume this action exists\n\n// export const backend_url = 'http://localhost:4000';\n// export const currency = '₹';\n\n// function App() {\n//   const dispatch = useDispatch();\n//   const auth = useSelector((state) => state.auth);\n//   const isAuthenticated = auth?.isAuthenticated;\n\n//   useEffect(() => {\n//     // Clear authentication on app start\n//     dispatch(logout());\n//   }, [dispatch]);\n\n//   console.log('isAuthenticated:', isAuthenticated); // Debugging line\n\n//   return (\n//     <BrowserRouter>\n//       {isAuthenticated && <Navbar />}\n\n//       <Routes>\n//         <Route\n//           path=\"/login\"\n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <LoginSignup />}\n//         />\n\n//         <Route\n//           path=\"/\"\n//           element={<Navigate to=\"/login\" />}\n//         />\n\n//         <Route\n//           path=\"/home\"\n//           element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />}\n//         />\n\n//         <Route\n//           path=\"/plants\"\n//           element={isAuthenticated ? <ShopCategory banner={plant_banner} category=\"plants\" /> : <Navigate to=\"/login\" />}\n//         />\n\n//         <Route\n//           path=\"/pots\"\n//           element={isAuthenticated ? <ShopCategory banner={pots_banner} category=\"pots\" /> : <Navigate to=\"/login\" />}\n//         />\n\n//         <Route\n//           path=\"/tools\"\n//           element={isAuthenticated ? <ShopCategory banner={tools_banner} category=\"tools\" /> : <Navigate to=\"/login\" />}\n//         />\n\n//         <Route\n//           path=\"/gifts\"\n//           element={isAuthenticated ? <ShopCategory banner={gift_banner} category=\"gifts\" /> : <Navigate to=\"/login\" />}\n//         />\n\n//         <Route\n//           path=\"/product/:productId\"\n//           element={isAuthenticated ? <Product /> : <Navigate to=\"/login\" />}\n//         />\n\n//         <Route\n//           path=\"/cart\"\n//           element={isAuthenticated ? <Cart /> : <Navigate to=\"/login\" />}\n//         />\n//       </Routes>\n\n//       {isAuthenticated && <Footer />}\n//     </BrowserRouter>\n\n//   );\n// }\n\n// export default App;\n\n// import React, { useEffect, useState } from 'react';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import Home from './Pages/Home';\n// import ShopCategory from './Pages/ShopCategory';\n// import Product from './Pages/Product';\n// import Cart from './Pages/Cart';\n// import LoginSignup from './Pages/LoginSignup';\n// import Footer from './Components/Footer/Footer';\n// import Navbar from './Components/Navbar/Navbar';\n// import SettingsIcon from './Components/SettingsPanel/SettingsPanel'; // Import SettingsIcon component\n// import plant_banner from './Components/Assets/banner_plants.png';\n// import pots_banner from './Components/Assets/banner_pots.png';\n// import tools_banner from './Components/Assets/banner_tools.png';\n// import gift_banner from './Components/Assets/banner_gifts.png';\n// import { logout } from './redux/actions/authActions'; // Assume this action exists\n\n// export const backend_url = 'http://localhost:4000';\n// export const currency = '₹';\n\n// function App() {\n//   const dispatch = useDispatch();\n//   const auth = useSelector((state) => state.auth);\n//   const isAuthenticated = auth?.isAuthenticated;\n\n//   const [isSticky, setIsSticky] = useState(true); // State to manage header style\n\n//   useEffect(() => {\n//     dispatch(logout());\n//   }, [dispatch]);\n\n//   const toggleHeaderStyle = () => {\n//     setIsSticky(prevState => !prevState);\n//   };\n\n//   return (\n//     <BrowserRouter>\n//       {isAuthenticated && <Navbar className={isSticky ? 'header-sticky' : 'header-static'} />}\n\n//       <Routes>\n//         <Route\n//           path=\"/login\"\n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <LoginSignup />}\n//         />\n//         <Route\n//           path=\"/\"\n//           element={<Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/home\"\n//           element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/plants\"\n//           element={isAuthenticated ? <ShopCategory banner={plant_banner} category=\"plants\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/pots\"\n//           element={isAuthenticated ? <ShopCategory banner={pots_banner} category=\"pots\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/tools\"\n//           element={isAuthenticated ? <ShopCategory banner={tools_banner} category=\"tools\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/gifts\"\n//           element={isAuthenticated ? <ShopCategory banner={gift_banner} category=\"gifts\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/product/:productId\"\n//           element={isAuthenticated ? <Product /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/cart\"\n//           element={isAuthenticated ? <Cart /> : <Navigate to=\"/login\" />}\n//         />\n//       </Routes>\n\n//       {isAuthenticated && <Footer />}\n//       {isAuthenticated && <SettingsIcon onToggleHeaderStyle={toggleHeaderStyle} />}\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/App.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import Home from './Pages/Home';\n// import ShopCategory from './Pages/ShopCategory';\n// import Product from './Pages/Product';\n// import Cart from './Pages/Cart';\n// import LoginSignup from './Pages/LoginSignup';\n// import Footer from './Components/Footer/Footer';\n// import Navbar from './Components/Navbar/Navbar';\n// import plant_banner from './Components/Assets/banner_plants.png';\n// import pots_banner from './Components/Assets/banner_pots.png';\n// import tools_banner from './Components/Assets/banner_tools.png';\n// import gift_banner from './Components/Assets/banner_gifts.png';\n\n// export const backend_url = 'http://localhost:4000';\n// export const currency = '₹';\n\n// function App() {\n//   const auth = useSelector((state) => state.auth); // Ensure auth is not undefined\n//   const isAuthenticated = auth?.isAuthenticated; \n  \n\n//   useEffect(() => {\n  \n//     const token = localStorage.getItem('token');\n//     if (token && !isAuthenticated) {\n//       console.log('Token:', token); \n\n//     }\n//   }, [isAuthenticated]);\n\n//     console.log('isAuthenticated:', isAuthenticated); // Debugging line\n//   return (\n//     <BrowserRouter>\n//       {isAuthenticated && <Navbar />} \n\n//       <Routes>\n//         <Route \n//           path=\"/login\" \n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <LoginSignup />} \n//         />\n        \n//         <Route \n//           path=\"/\" \n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <Navigate to=\"/login\" />} \n//         />\n\n//         <Route \n//           path=\"/home\" \n//           element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/plants\" \n//           element={isAuthenticated ? <ShopCategory banner={plant_banner} category=\"plants\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/pots\" \n//           element={isAuthenticated ? <ShopCategory banner={pots_banner} category=\"pots\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/tools\" \n//           element={isAuthenticated ? <ShopCategory banner={tools_banner} category=\"tools\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/gifts\" \n//           element={isAuthenticated ? <ShopCategory banner={gift_banner} category=\"gifts\" /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/product/:productId\" \n//           element={isAuthenticated ? <Product /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route \n//           path=\"/cart\" \n//           element={isAuthenticated ? <Cart /> : <Navigate to=\"/login\" />} \n//         />\n//       </Routes>\n\n//       {isAuthenticated && <Footer />}\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n\n\n\n// import React, { useEffect } from 'react';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import Home from './Pages/Home';\n// import ShopCategory from './Pages/ShopCategory';\n// import Product from './Pages/Product';\n// import Cart from './Pages/Cart';\n// import LoginSignup from './Pages/LoginSignup';\n// import Footer from './Components/Footer/Footer';\n// import Navbar from './Components/Navbar/Navbar';\n// import plant_banner from './Components/Assets/banner_plants.png';\n// import pots_banner from './Components/Assets/banner_pots.png';\n// import tools_banner from './Components/Assets/banner_tools.png';\n// import gift_banner from './Components/Assets/banner_gifts.png';\n// import { logout } from './redux/actions/authActions'; // Assume this action exists\n\n// export const backend_url = 'http://localhost:4000';\n// export const currency = '₹';\n\n// function App() {\n//   const dispatch = useDispatch();\n//   const auth = useSelector((state) => state.auth);\n//   const isAuthenticated = auth?.isAuthenticated;\n\n//   useEffect(() => {\n//     // Clear authentication on app start\n//     dispatch(logout());\n//   }, [dispatch]);\n\n//   console.log('isAuthenticated:', isAuthenticated); // Debugging line\n\n//   return (\n//     <BrowserRouter>\n//       {isAuthenticated && <Navbar />}\n      \n//       <Routes>\n//         <Route\n//           path=\"/login\"\n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <LoginSignup />}\n//         />\n        \n//         <Route\n//           path=\"/\"\n//           element={<Navigate to=\"/login\" />}\n//         />\n        \n//         <Route\n//           path=\"/home\"\n//           element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />}\n//         />\n        \n//         <Route\n//           path=\"/plants\"\n//           element={isAuthenticated ? <ShopCategory banner={plant_banner} category=\"plants\" /> : <Navigate to=\"/login\" />}\n//         />\n        \n//         <Route\n//           path=\"/pots\"\n//           element={isAuthenticated ? <ShopCategory banner={pots_banner} category=\"pots\" /> : <Navigate to=\"/login\" />}\n//         />\n        \n//         <Route\n//           path=\"/tools\"\n//           element={isAuthenticated ? <ShopCategory banner={tools_banner} category=\"tools\" /> : <Navigate to=\"/login\" />}\n//         />\n        \n//         <Route\n//           path=\"/gifts\"\n//           element={isAuthenticated ? <ShopCategory banner={gift_banner} category=\"gifts\" /> : <Navigate to=\"/login\" />}\n//         />\n        \n//         <Route\n//           path=\"/product/:productId\"\n//           element={isAuthenticated ? <Product /> : <Navigate to=\"/login\" />}\n//         />\n        \n//         <Route\n//           path=\"/cart\"\n//           element={isAuthenticated ? <Cart /> : <Navigate to=\"/login\" />}\n//         />\n//       </Routes>\n      \n//       {isAuthenticated && <Footer />}\n//     </BrowserRouter>\n  \n//   );\n// }\n\n// export default App;\n\n// import React, { useEffect, useState } from 'react';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import Home from './Pages/Home';\n// import ShopCategory from './Pages/ShopCategory';\n// import Product from './Pages/Product';\n// import Cart from './Pages/Cart';\n// import LoginSignup from './Pages/LoginSignup';\n// import Footer from './Components/Footer/Footer';\n// import Navbar from './Components/Navbar/Navbar';\n// import SettingsIcon from './Components/SettingsPanel/SettingsPanel'; // Import SettingsIcon component\n// import plant_banner from './Components/Assets/banner_plants.png';\n// import pots_banner from './Components/Assets/banner_pots.png';\n// import tools_banner from './Components/Assets/banner_tools.png';\n// import gift_banner from './Components/Assets/banner_gifts.png';\n// import { logout } from './redux/actions/authActions'; // Assume this action exists\n\n// export const backend_url = 'http://localhost:4000';\n// export const currency = '₹';\n\n// function App() {\n//   const dispatch = useDispatch();\n//   const auth = useSelector((state) => state.auth);\n//   const isAuthenticated = auth?.isAuthenticated;\n\n//   const [isSticky, setIsSticky] = useState(true); // State to manage header style\n\n//   useEffect(() => {\n//     dispatch(logout());\n//   }, [dispatch]);\n\n//   const toggleHeaderStyle = () => {\n//     setIsSticky(prevState => !prevState);\n//   };\n\n//   return (\n//     <BrowserRouter>\n//       {isAuthenticated && <Navbar className={isSticky ? 'header-sticky' : 'header-static'} />}\n      \n//       <Routes>\n//         <Route\n//           path=\"/login\"\n//           element={isAuthenticated ? <Navigate to=\"/home\" /> : <LoginSignup />}\n//         />\n//         <Route\n//           path=\"/\"\n//           element={<Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/home\"\n//           element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/plants\"\n//           element={isAuthenticated ? <ShopCategory banner={plant_banner} category=\"plants\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/pots\"\n//           element={isAuthenticated ? <ShopCategory banner={pots_banner} category=\"pots\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/tools\"\n//           element={isAuthenticated ? <ShopCategory banner={tools_banner} category=\"tools\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/gifts\"\n//           element={isAuthenticated ? <ShopCategory banner={gift_banner} category=\"gifts\" /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/product/:productId\"\n//           element={isAuthenticated ? <Product /> : <Navigate to=\"/login\" />}\n//         />\n//         <Route\n//           path=\"/cart\"\n//           element={isAuthenticated ? <Cart /> : <Navigate to=\"/login\" />}\n//         />\n//       </Routes>\n      \n//       {isAuthenticated && <Footer />}\n//       {isAuthenticated && <SettingsIcon onToggleHeaderStyle={toggleHeaderStyle} />}\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}