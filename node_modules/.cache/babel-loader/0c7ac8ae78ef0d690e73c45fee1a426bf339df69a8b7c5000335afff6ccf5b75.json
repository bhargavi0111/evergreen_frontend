{"ast":null,"code":"// import {\n//     FETCH_PRODUCTS_REQUEST,\n//     FETCH_PRODUCTS_SUCCESS,\n//     FETCH_PRODUCTS_FAILURE\n//   } from '../actions/shopActions';\n\n//   const initialState = {\n//     products: [],\n//     loading: false,\n//     error: null\n//   };\n\n//   export const shopReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//       case FETCH_PRODUCTS_REQUEST:\n//         return {\n//           ...state,\n//           loading: true,\n//           error: null\n//         };\n//       case FETCH_PRODUCTS_SUCCESS:\n//         return {\n//           ...state,\n//           loading: false,\n//           products: action.payload\n//         };\n//       case FETCH_PRODUCTS_FAILURE:\n//         return {\n//           ...state,\n//           loading: false,\n//           error: action.payload\n//         };\n//       default:\n//         return state;\n//     }\n//   };\n\nimport { FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_FAILURE } from '../../redux/actions/shopActions';\nconst initialState = {\n  products: [],\n  loading: false,\n  error: null\n};\nexport const shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PRODUCTS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null // Reset error state\n      };\n\n    case FETCH_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        products: action.payload // Update products with fetched data\n      };\n\n    case FETCH_PRODUCTS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload // Set error message\n      };\n    // case 'OPTIMISTIC_UPDATE_PRODUCT':\n    //   return {\n    //     ...state,\n    //     products: state.products.map(product =>\n    //       product._id === action.payload.productId\n    //         ? { ...product, ...action.payload.updatedData } // Merge updated fields\n    //         : product\n    //     )\n    //   };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["FETCH_PRODUCTS_REQUEST","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_FAILURE","initialState","products","loading","error","shopReducer","state","action","type","payload"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/reducers/shopReducer.jsx"],"sourcesContent":["\r\n// import {\r\n//     FETCH_PRODUCTS_REQUEST,\r\n//     FETCH_PRODUCTS_SUCCESS,\r\n//     FETCH_PRODUCTS_FAILURE\r\n//   } from '../actions/shopActions';\r\n  \r\n//   const initialState = {\r\n//     products: [],\r\n//     loading: false,\r\n//     error: null\r\n//   };\r\n  \r\n//   export const shopReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//       case FETCH_PRODUCTS_REQUEST:\r\n//         return {\r\n//           ...state,\r\n//           loading: true,\r\n//           error: null\r\n//         };\r\n//       case FETCH_PRODUCTS_SUCCESS:\r\n//         return {\r\n//           ...state,\r\n//           loading: false,\r\n//           products: action.payload\r\n//         };\r\n//       case FETCH_PRODUCTS_FAILURE:\r\n//         return {\r\n//           ...state,\r\n//           loading: false,\r\n//           error: action.payload\r\n//         };\r\n//       default:\r\n//         return state;\r\n//     }\r\n//   };\r\n  \r\nimport {\r\n  FETCH_PRODUCTS_REQUEST,\r\n  FETCH_PRODUCTS_SUCCESS,\r\n  FETCH_PRODUCTS_FAILURE\r\n} from '../../redux/actions/shopActions';\r\n\r\nconst initialState = {\r\n  products: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport const shopReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null // Reset error state\r\n      };\r\n    case FETCH_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        products: action.payload // Update products with fetched data\r\n      };\r\n    case FETCH_PRODUCTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload // Set error message\r\n      };\r\n      // case 'OPTIMISTIC_UPDATE_PRODUCT':\r\n      //   return {\r\n      //     ...state,\r\n      //     products: state.products.map(product =>\r\n      //       product._id === action.payload.productId\r\n      //         ? { ...product, ...action.payload.updatedData } // Merge updated fields\r\n      //         : product\r\n      //     )\r\n      //   };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACEA,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,QACjB,iCAAiC;AAExC,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAC3D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,sBAAsB;MACzB,OAAO;QACL,GAAGQ,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE,IAAI,CAAC;MACd,CAAC;;IACH,KAAKL,sBAAsB;MACzB,OAAO;QACL,GAAGO,KAAK;QACRH,OAAO,EAAE,KAAK;QACdD,QAAQ,EAAEK,MAAM,CAACE,OAAO,CAAC;MAC3B,CAAC;;IACH,KAAKT,sBAAsB;MACzB,OAAO;QACL,GAAGM,KAAK;QACRH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACE,OAAO,CAAC;MACxB,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACF;MACE,OAAOH,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}