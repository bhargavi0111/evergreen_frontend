{"ast":null,"code":"import axios from 'axios';\n\n// Fetch cart items for a user\nexport const fetchCartItems = userId => async dispatch => {\n  try {\n    const response = await axios.get(`/cart/${userId}`);\n    dispatch({\n      type: 'FETCH_CART_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'FETCH_CART_FAILURE',\n      payload: error.message\n    });\n  }\n};\n\n// Add item to cart\nexport const addToCart = (userId, productId, quantity) => async dispatch => {\n  try {\n    const response = await axios.post(`/cart/add`, {\n      userId,\n      productId,\n      quantity\n    });\n    dispatch({\n      type: 'ADD_TO_CART_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_TO_CART_FAILURE',\n      payload: error.message\n    });\n  }\n};\n\n// Remove item from cart\nexport const removeFromCart = (userId, productId) => async dispatch => {\n  try {\n    const response = await axios.delete(`/cart/remove`, {\n      data: {\n        userId,\n        productId\n      }\n    });\n    dispatch({\n      type: 'REMOVE_FROM_CART_SUCCESS',\n      payload: productId\n    });\n  } catch (error) {\n    dispatch({\n      type: 'REMOVE_FROM_CART_FAILURE',\n      payload: error.message\n    });\n  }\n};\n\n// Update cart quantity\nexport const updateCartQuantity = (userId, productId, quantity) => async dispatch => {\n  try {\n    const response = await axios.put(`/cart/update`, {\n      userId,\n      productId,\n      quantity\n    });\n    dispatch({\n      type: 'UPDATE_CART_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_CART_FAILURE',\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","fetchCartItems","userId","dispatch","response","get","type","payload","data","error","message","addToCart","productId","quantity","post","removeFromCart","delete","updateCartQuantity","put"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/cartActions.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Fetch cart items for a user\r\nexport const fetchCartItems = (userId) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`/cart/${userId}`);\r\n    dispatch({ type: 'FETCH_CART_SUCCESS', payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: 'FETCH_CART_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\n// Add item to cart\r\nexport const addToCart = (userId, productId, quantity) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`/cart/add`, { userId, productId, quantity });\r\n    dispatch({ type: 'ADD_TO_CART_SUCCESS', payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: 'ADD_TO_CART_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\n// Remove item from cart\r\nexport const removeFromCart = (userId, productId) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.delete(`/cart/remove`, { data: { userId, productId } });\r\n    dispatch({ type: 'REMOVE_FROM_CART_SUCCESS', payload: productId });\r\n  } catch (error) {\r\n    dispatch({ type: 'REMOVE_FROM_CART_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\n// Update cart quantity\r\nexport const updateCartQuantity = (userId, productId, quantity) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.put(`/cart/update`, { userId, productId, quantity });\r\n    dispatch({ type: 'UPDATE_CART_SUCCESS', payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: 'UPDATE_CART_FAILURE', payload: error.message });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,SAAQH,MAAO,EAAC,CAAC;IACnDC,QAAQ,CAAC;MAAEG,IAAI,EAAE,oBAAoB;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAE,oBAAoB;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EAClE;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACT,MAAM,EAAEU,SAAS,EAAEC,QAAQ,KAAK,MAAOV,QAAQ,IAAK;EAC5E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACc,IAAI,CAAE,WAAU,EAAE;MAAEZ,MAAM;MAAEU,SAAS;MAAEC;IAAS,CAAC,CAAC;IAC/EV,QAAQ,CAAC;MAAEG,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACnE;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,cAAc,GAAGA,CAACb,MAAM,EAAEU,SAAS,KAAK,MAAOT,QAAQ,IAAK;EACvE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,MAAM,CAAE,cAAa,EAAE;MAAER,IAAI,EAAE;QAAEN,MAAM;QAAEU;MAAU;IAAE,CAAC,CAAC;IACpFT,QAAQ,CAAC;MAAEG,IAAI,EAAE,0BAA0B;MAAEC,OAAO,EAAEK;IAAU,CAAC,CAAC;EACpE,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAE,0BAA0B;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACxE;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,kBAAkB,GAAGA,CAACf,MAAM,EAAEU,SAAS,EAAEC,QAAQ,KAAK,MAAOV,QAAQ,IAAK;EACrF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACkB,GAAG,CAAE,cAAa,EAAE;MAAEhB,MAAM;MAAEU,SAAS;MAAEC;IAAS,CAAC,CAAC;IACjFV,QAAQ,CAAC;MAAEG,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACnE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}