{"ast":null,"code":"const initialState = {\n  cartData: {},\n  products: []\n};\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return {\n        ...state,\n        cartData: action.payload\n      };\n    case 'ADD_TO_CART':\n      return {\n        ...state,\n        cartData: {\n          ...state.cartData,\n          [action.payload]: (state.cartData[action.payload] || 0) + 1\n        }\n      };\n    case 'REMOVE_FROM_CART':\n      const updatedCart = {\n        ...state.cartData\n      };\n      if (updatedCart[action.payload] > 0) {\n        updatedCart[action.payload] -= 1;\n      }\n      return {\n        ...state,\n        cartData: updatedCart\n      };\n    case 'ADD_PRODUCT':\n      return {\n        ...state,\n        products: [...state.products, action.payload]\n      };\n    case 'REMOVE_PRODUCT':\n      return {\n        ...state,\n        products: state.products.filter(p => p.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["initialState","cartData","products","cartReducer","state","action","type","payload","updatedCart","filter","p","id"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/reducers/cartReducer.jsx"],"sourcesContent":["const initialState = {\r\n    cartData: {},\r\n    products: [],\r\n  };\r\n  \r\n  const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'SET_CART':\r\n        return { ...state, cartData: action.payload };\r\n      case 'ADD_TO_CART':\r\n        return {\r\n          ...state,\r\n          cartData: {\r\n            ...state.cartData,\r\n            [action.payload]: (state.cartData[action.payload] || 0) + 1,\r\n          },\r\n        };\r\n      case 'REMOVE_FROM_CART':\r\n        const updatedCart = { ...state.cartData };\r\n        if (updatedCart[action.payload] > 0) {\r\n          updatedCart[action.payload] -= 1;\r\n        }\r\n        return { ...state, cartData: updatedCart };\r\n      case 'ADD_PRODUCT':\r\n        return { ...state, products: [...state.products, action.payload] };\r\n      case 'REMOVE_PRODUCT':\r\n        return { ...state, products: state.products.filter(p => p.id !== action.payload) };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default cartReducer;\r\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,QAAQ,EAAE,CAAC,CAAC;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QAAE,GAAGF,KAAK;QAAEH,QAAQ,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAC/C,KAAK,aAAa;MAChB,OAAO;QACL,GAAGH,KAAK;QACRH,QAAQ,EAAE;UACR,GAAGG,KAAK,CAACH,QAAQ;UACjB,CAACI,MAAM,CAACE,OAAO,GAAG,CAACH,KAAK,CAACH,QAAQ,CAACI,MAAM,CAACE,OAAO,CAAC,IAAI,CAAC,IAAI;QAC5D;MACF,CAAC;IACH,KAAK,kBAAkB;MACrB,MAAMC,WAAW,GAAG;QAAE,GAAGJ,KAAK,CAACH;MAAS,CAAC;MACzC,IAAIO,WAAW,CAACH,MAAM,CAACE,OAAO,CAAC,GAAG,CAAC,EAAE;QACnCC,WAAW,CAACH,MAAM,CAACE,OAAO,CAAC,IAAI,CAAC;MAClC;MACA,OAAO;QAAE,GAAGH,KAAK;QAAEH,QAAQ,EAAEO;MAAY,CAAC;IAC5C,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGJ,KAAK;QAAEF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,EAAEG,MAAM,CAACE,OAAO;MAAE,CAAC;IACpE,KAAK,gBAAgB;MACnB,OAAO;QAAE,GAAGH,KAAK;QAAEF,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO;MAAE,CAAC;IACpF;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}