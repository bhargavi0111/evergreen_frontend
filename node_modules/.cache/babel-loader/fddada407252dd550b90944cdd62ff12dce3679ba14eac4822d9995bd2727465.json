{"ast":null,"code":"import axios from 'axios';\nconst initialState = {\n  products: [] // Ensure products is initialized as an empty array\n};\n\nexport const fetchAllProducts = () => async dispatch => {\n  try {\n    const response = await axios.get('http://localhost:4000/allproducts');\n    dispatch({\n      type: 'FETCH_PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'FETCH_PRODUCTS_FAILURE',\n      payload: error.message\n    });\n  }\n};\nexport const fetchProductsByCategory = category => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\n    dispatch({\n      type: 'FETCH_PRODUCTS_BY_CATEGORY_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'FETCH_PRODUCTS_BY_CATEGORY_FAILURE',\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","initialState","products","fetchAllProducts","dispatch","response","get","type","payload","data","error","message","fetchProductsByCategory","category"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/shopActions.jsx"],"sourcesContent":["import axios from 'axios';\r\nconst initialState = {\r\n    products: [], // Ensure products is initialized as an empty array\r\n  };\r\n\r\nexport const fetchAllProducts = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('http://localhost:4000/allproducts');\r\n    dispatch({ type: 'FETCH_PRODUCTS_SUCCESS', payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: 'FETCH_PRODUCTS_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\nexport const fetchProductsByCategory = (category) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:4000/allproducts/${category}`);\r\n    dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_SUCCESS', payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: 'FETCH_PRODUCTS_BY_CATEGORY_FAILURE', payload: error.message });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE,CAAE;AAChB,CAAC;;AAEH,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,mCAAmC,CAAC;IACrEF,QAAQ,CAAC;MAAEG,IAAI,EAAE,wBAAwB;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EACtE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAE,wBAAwB;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACtE;AACF,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAIC,QAAQ,IAAK,MAAOT,QAAQ,IAAK;EACvE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,qCAAoCO,QAAS,EAAC,CAAC;IACjFT,QAAQ,CAAC;MAAEG,IAAI,EAAE,oCAAoC;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EAClF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAE,oCAAoC;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EAClF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}