{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Component\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useSelector(state => state.auth);\n\n  // Check if the user is authenticated\n  const token = localStorage.getItem('token');\n\n  // If authenticated or token exists, allow access\n  if (isAuthenticated || token) {\n    return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Otherwise, redirect to login\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"TPD1adLOrTdsrr/HMWf3CuTzU0I=\", false, function () {\n  return [useSelector];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useSelector","jsxDEV","_jsxDEV","PrivateRoute","element","Component","_s","isAuthenticated","state","auth","token","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/PrivateRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ element: Component }) => {\r\n  const { isAuthenticated } = useSelector(state => state.auth);\r\n\r\n  // Check if the user is authenticated\r\n  const token = localStorage.getItem('token');\r\n\r\n  // If authenticated or token exists, allow access\r\n  if (isAuthenticated || token) {\r\n    return <Component />;\r\n  }\r\n\r\n  // Otherwise, redirect to login\r\n  return <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM;IAAEC;EAAgB,CAAC,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;;EAE5D;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIL,eAAe,IAAIG,KAAK,EAAE;IAC5B,oBAAOR,OAAA,CAACG,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;;EAEA;EACA,oBAAOd,OAAA,CAACH,QAAQ;IAACkB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACV,EAAA,CAbIH,YAAY;EAAA,QACYH,WAAW;AAAA;AAAAkB,EAAA,GADnCf,YAAY;AAelB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}