{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\ProductDisplay\\\\ProductDisplay.jsx\",\n  _s = $RefreshSig$();\n// // import React from 'react';\n// // import { useDispatch } from 'react-redux';\n// // import { addToCart } from '../../redux/actions/cartActions'; \n// // import './ProductDisplay.css';\n\n// // const ProductDisplay = ({ product }) => {\n// //   const dispatch = useDispatch();\n// //   console.log(product)\n\n// //   const handleAddToCart = () => {\n// //     dispatch(addToCart(product));\n// //   };\n\n// //   if (!product) {\n// //     return <div>Product not found</div>;\n// //   }\n\n// //   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\n\n// //   return (\n// //     <div className='productdisplay'>\n// //       <div className=\"productdisplay-left\">\n// //         <div className=\"productdisplay-img-list\">\n// //           {product.images && product.images.map((img, index) => (\n// //             <img key={index} src={img.startsWith('/') ? `http://localhost:4000${img}` : img} alt={`Product ${index}`} />\n// //           ))}\n// //         </div>\n// //         <div className=\"productdisplay-img\">\n// //           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\n// //         </div>\n// //       </div>\n// //       <div className=\"productdisplay-right\">\n// //         <h1>{product.name}</h1>\n// //         {product.category === 'plants' && (\n// //           <div className=\"productdisplay-right-plant-details\">\n// //             <p>Watering Needs: {product.wateringNeeds}</p>\n// //             <p>Sunlight: {product.sunlight}</p>\n// //           </div>\n// //         )}\n// //         {product.category === 'pots' && (\n// //           <div className=\"productdisplay-right-pot-details\">\n// //             <p>Material: {product.material}</p>\n// //             <p>Dimensions: {product.dimensions}</p>\n// //           </div>\n// //         )}\n// //         {product.category === 'planters' && (\n// //           <div className=\"productdisplay-right-planter-details\">\n// //             <p>Material: {product.material}</p>\n// //             <p>Size: {product.size}</p>\n// //           </div>\n// //         )}\n// //         {product.category === 'tools' && (\n// //           <div className=\"productdisplay-right-tool-details\">\n// //             <p>Type: {product.toolType}</p>\n// //             <p>Material: {product.material}</p>\n// //           </div>\n// //         )}\n// //         <div className=\"productdisplay-right-stars\">\n// //           {Array.from({ length: 5 }, (_, index) => (\n// //             <span key={index} className={index < product.rating ? 'star filled' : 'star'}>★</span>\n// //           ))}\n// //         </div>\n// //         <div className=\"productdisplay-right-prices\">\n// //           <div className=\"productdisplay-right-price-old\">${product.old_price}</div>\n// //           <div className=\"productdisplay-right-price-new\">${product.new_price}</div>\n// //         </div>\n// //         <div className=\"productdisplay-right-description\">\n// //           <p>{product.description}</p>\n// //         </div>\n// //         {product.category !== 'tools' && (\n// //           <div className=\"productdisplay-right-size\">\n// //             <h1>Select Size</h1>\n// //             <div className=\"productdisplay-right-sizes\">\n// //               {/* {['S', 'M', 'L', 'XL', 'XXL'].map(size => (\n// //                 <div key={size}>{size}</div>\n// //               ))} */}\n// //             </div>\n// //           </div>\n// //         )}\n// //         <button onClick={handleAddToCart}>Add to Cart</button>\n// //         <p className='productdisplay-right-category'><span>Category :</span>{product.category}</p>\n// //         <p className='productdisplay-right-tags'><span>Tags :</span>Lesswater, low light</p>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ProductDisplay;\n\n// // import React from 'react';\n// // import { useDispatch } from 'react-redux';\n// // import { addToCart } from '../../redux/actions/cartActions'; \n// // import './ProductDisplay.css';\n\n// // const ProductDisplay = ({ product, }) => {\n// //   const dispatch = useDispatch();\n\n// //   const handleAddToCart = () => {\n// //     if (product && product._id) {\n// //       dispatch(addToCart(product));  // Pass the product to the action\n// //     }\n// //   };\n\n// //   if (!product) {\n// //     return <div>Product not found</div>;\n// //   }\n\n// //   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\n\n// //   return (\n// //     <div className='productdisplay'>\n// //       <div className=\"productdisplay-left\">\n// //         <div className=\"productdisplay-img-list\">\n// //           {product.images && product.images.map((img, index) => (\n// //             <img key={index} src={img.startsWith('/') ? `http://localhost:4000${img}` : img} alt={`Product ${index}`} />\n// //           ))}\n// //         </div>\n// //         <div className=\"productdisplay-img\">\n// //           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\n// //         </div>\n// //       </div>\n// //       <div className=\"productdisplay-right\">\n// //         <h1>{product.name}</h1>\n// //         {/* Category-specific details */}\n// //         {product.category === 'plants' && (\n// //           <div className=\"productdisplay-right-plant-details\">\n// //             <p>Watering Needs: {product.wateringNeeds}</p>\n// //             <p>Sunlight: {product.sunlight}</p>\n// //           </div>\n// //         )}\n// //         {/* ... (other category-specific details) ... */}\n// //         <div className=\"productdisplay-right-stars\">\n// //           {Array.from({ length: 5 }, (_, index) => (\n// //             <span key={index} className={index < product.rating ? 'star filled' : 'star'}>★</span>\n// //           ))}\n// //         </div>\n// //         <div className=\"productdisplay-right-prices\">\n// //           <div className=\"productdisplay-right-price-old\">${product.old_price}</div>\n// //           <div className=\"productdisplay-right-price-new\">${product.new_price}</div>\n// //         </div>\n// //         <div className=\"productdisplay-right-description\">\n// //           <p>{product.description}</p>\n// //         </div>\n// //         {product.category !== 'tools' && (\n// //           <div className=\"productdisplay-right-size\">\n// //             <h1>Select Size</h1>\n// //             <div className=\"productdisplay-right-sizes\">\n// //               {/* Size selection options */}\n// //             </div>\n// //           </div>\n// //         )}\n// //         <button onClick={handleAddToCart}>Add to Cart</button>\n// //         <p className='productdisplay-right-category'><span>Category :</span>{product.category}</p>\n// //         <p className='productdisplay-right-tags'><span>Tags :</span>Lesswater, low light</p>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ProductDisplay;\n\n// import React from 'react';\n// import { useDispatch } from 'react-redux';\n// import { addToCart } from '../../redux/actions/cartActions'; \n// import './ProductDisplay.css';\n\n//   const ProductDisplay = ({ product }) => {\n//     const dispatch = useDispatch();\n\n//     const handleAddToCart = () => {\n//       console.log('Product:', product); // Log the product for verification\n\n//       const itemId = product._id;\n//       console.log('Extracted itemId:', itemId);\n\n//       if (!itemId || typeof itemId !== 'string') {\n//         console.error('Invalid itemId:', itemId);\n//         return;\n//       }\n\n//       dispatch(addToCart(itemId)); // Assuming addToCart is an action creator\n//     };\n\n//   if (!product) {\n//     return <div>Product not found</div>;\n//   }\n\n//   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\n\n//   return (\n//     <div className='productdisplay'>\n//       <div className=\"productdisplay-left\">\n//         <div className=\"productdisplay-img-list\">\n//           {product.images && product.images.map((img, index) => (\n//             <img key={index} src={img.startsWith('/') ? `http://localhost:4000${img}` : img} alt={`Product ${index}`} />\n//           ))}\n//         </div>\n//         <div className=\"productdisplay-img\">\n//           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\n//         </div>\n//       </div>\n//       <div className=\"productdisplay-right\">\n//         <h1>{product.name}</h1>\n//         {/* Category-specific details */}\n//         {product.category === 'plants' && (\n//           <div className=\"productdisplay-right-plant-details\">\n//             <p>Watering Needs: {product.wateringNeeds}</p>\n//             <p>Sunlight: {product.sunlight}</p>\n//           </div>\n//         )}\n//         {/* ... (other category-specific details) ... */}\n//         <div className=\"productdisplay-right-stars\">\n//           {Array.from({ length: 5 }, (_, index) => (\n//             <span key={index} className={index < product.rating ? 'star filled' : 'star'}>★</span>\n//           ))}\n//         </div>\n//         <div className=\"productdisplay-right-prices\">\n//           <div className=\"productdisplay-right-price-old\">₹{product.old_price}</div>\n//           <div className=\"productdisplay-right-price-new\">₹{product.new_price}</div>\n//         </div>\n//         <div className=\"productdisplay-right-description\">\n//           <p>{product.description}</p>\n//         </div>\n//         {product.category !== 'tools' && (\n//           <div className=\"productdisplay-right-size\">\n//             <h1>Select Size</h1>\n//             <div className=\"productdisplay-right-sizes\">\n//               {/* Size selection options */}\n//             </div>\n//           </div>\n//         )}\n//         <button onClick={handleAddToCart}>Add to Cart</button>\n//         <p className='productdisplay-right-category'><span>Category :</span>{product.category}</p>\n//         <p className='productdisplay-right-tags'><span>Tags :</span>Lesswater, low light</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductDisplay;\n\n// import React from 'react';\n// import { useDispatch } from 'react-redux';\n// import { addToCart } from '../../redux/actions/cartActions'; \n// import './ProductDisplay.css';\n\n// const ProductDisplay = ({ product }) => {\n//   const dispatch = useDispatch();\n\n//   const handleAddToCart = () => {\n//     console.log('Product:', product); // Log the product for verification\n\n//     const itemId = product._id;\n//     console.log('Extracted itemId:', itemId);\n\n//     if (!itemId || typeof itemId !== 'string') {\n//       console.error('Invalid itemId:', itemId);\n//       return;\n//     }\n\n//     dispatch(addToCart(itemId)); // Assuming addToCart is an action creator\n//   };\n\n//   if (!product) {\n//     return <div>Product not found</div>;\n//   }\n\n//   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\n\n//   return (\n//     <div className='productdisplay'>\n//       <div className=\"productdisplay-left\">\n//         <div className=\"productdisplay-img-list\">\n//           {product.images && product.images.map((img, index) => (\n//             <img \n//               key={index} \n//               src={img.startsWith('/') ? `http://localhost:4000${img}` : img} \n//               alt={`Product ${index}`} \n//               className='productdisplay-thumbnail'\n//             />\n//           ))}\n//         </div>\n//         <div className=\"productdisplay-img\">\n//           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\n//         </div>\n//       </div>\n//       <div className=\"productdisplay-right\">\n//         <h1>{product.name}</h1>\n//         {/* Category-specific details */}\n//         {product.category === 'plants' && (\n//           <div className=\"productdisplay-right-plant-details\">\n//             <p>Watering Needs: {product.wateringNeeds || 'N/A'}</p>\n//             <p>Sunlight: {product.sunlight || 'N/A'}</p>\n//           </div>\n//         )}\n//         {/* ... (other category-specific details) ... */}\n//         <div className=\"productdisplay-right-stars\">\n//           {Array.from({ length: 5 }, (_, index) => (\n//             <span \n//               key={index} \n//               className={index < product.rating ? 'star filled' : 'star'}\n//               aria-label={`Star rating ${index + 1}`}\n//             >\n//               ★\n//             </span>\n//           ))}\n//         </div>\n//         <div className=\"productdisplay-right-prices\">\n//           <div className=\"productdisplay-right-price-old\">₹{product.old_price.toFixed(2)}</div>\n//           <div className=\"productdisplay-right-price-new\">₹{product.new_price.toFixed(2)}</div>\n//         </div>\n//         <div className=\"productdisplay-right-description\">\n//           <p>{product.description}</p>\n//         </div>\n//         {product.category !== 'tools' && (\n//           <div className=\"productdisplay-right-size\">\n//             <h1>Select Size</h1>\n//             <div className=\"productdisplay-right-sizes\">\n//               {/* Size selection options */}\n//             </div>\n//           </div>\n//         )}\n//         <button onClick={handleAddToCart}>Add to Cart</button>\n//         <p className='productdisplay-right-category'>\n//           <span>Category :</span> {product.category}\n//         </p>\n//         <p className='productdisplay-right-tags'>\n//           <span>Tags :</span> Lesswater, low light\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductDisplay;\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addToCart } from '../../redux/actions/cartActions';\nimport './ProductDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductDisplay = ({\n  product\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [isAdding, setIsAdding] = useState(false);\n  const cartItems = useSelector(state => state.cart.items);\n\n  // const handleAddToCart = async () => {\n  //   if (!product || !product._id) {\n  //     console.error('Invalid product:', product);\n  //     return;\n  //   }\n\n  //   setIsAdding(true);\n  //   try {\n  //     await dispatch(addToCart(product._id));\n  //     // Optionally, you can show a success message here\n  //   } catch (error) {\n  //     console.error('Error adding to cart:', error);\n  //     // Optionally, you can show an error message here\n  //   } finally {\n  //     setIsAdding(false);\n  //   }\n  // };\n\n  const handleAddToCart = async () => {\n    if (!product || !product._id) {\n      console.error('Invalid product:', product);\n      return;\n    }\n    setIsAdding(true);\n    try {\n      // Optimistically add or update the quantity in the cart\n      const item = cartItems.find(item => item._id === product._id);\n      if (item) {\n        // Item is already in the cart, increase the quantity\n        const newQuantity = item.quantity + 1;\n\n        // Optimistically update the quantity\n        dispatch({\n          type: 'OPTIMISTIC_UPDATE_QUANTITY',\n          payload: {\n            itemId: product._id,\n            quantity: newQuantity\n          }\n        });\n\n        // Update the quantity in the backend\n        await debouncedUpdateQuantity(product._id, newQuantity);\n      } else {\n        // Item is not in the cart, add it with a quantity of 1\n        const newCartItem = {\n          _id: product._id,\n          quantity: 1\n        };\n\n        // Optimistically add the new item to the cart\n        dispatch({\n          type: 'OPTIMISTIC_ADD_TO_CART',\n          payload: newCartItem\n        });\n\n        // Add the item to the cart in the backend\n        await addToCart(product._id);\n      }\n\n      // Optionally, you can show a success message here\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n\n      // Handle error by dispatching the error state\n      dispatch({\n        type: 'CART_ERROR',\n        payload: error.response ? error.response.data : error.message\n      });\n\n      // Optionally, show an error message here\n    } finally {\n      setIsAdding(false);\n    }\n  };\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 12\n    }, this);\n  }\n  const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productdisplay\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productdisplay-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productdisplay-img-list\",\n        children: product.images && product.images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img.startsWith('/') ? `http://localhost:4000${img}` : img,\n          alt: `Product ${index}`,\n          className: \"productdisplay-thumbnail\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productdisplay-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"productdisplay-main-img\",\n          src: imageUrl,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productdisplay-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), product.category === 'plants' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productdisplay-right-plant-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Watering Needs: \", product.wateringNeeds || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sunlight: \", product.sunlight || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productdisplay-right-stars\",\n        children: Array.from({\n          length: 5\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: index < product.rating ? 'star filled' : 'star',\n          \"aria-label\": `Star rating ${index + 1}`,\n          children: \"\\u2605\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productdisplay-right-prices\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productdisplay-right-price-old\",\n          children: [\"\\u20B9\", product.old_price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productdisplay-right-price-new\",\n          children: [\"\\u20B9\", product.new_price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productdisplay-right-description\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), product.category !== 'tools' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productdisplay-right-size\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productdisplay-right-sizes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddToCart,\n        disabled: isAdding,\n        children: isAdding ? 'Adding...' : 'Add to Cart'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"productdisplay-right-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Category :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), \" \", product.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"productdisplay-right-tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tags :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), \" Lesswater, low light\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductDisplay, \"jeTesu3flTsjYAbDQNGS0vOvo+M=\", true, function () {\n  return [useDispatch];\n});\n_c = ProductDisplay;\nexport default ProductDisplay;\nvar _c;\n$RefreshReg$(_c, \"ProductDisplay\");","map":{"version":3,"names":["React","useState","useDispatch","addToCart","jsxDEV","_jsxDEV","ProductDisplay","product","_s","dispatch","isAdding","setIsAdding","cartItems","useSelector","state","cart","items","handleAddToCart","_id","console","error","item","find","newQuantity","quantity","type","payload","itemId","debouncedUpdateQuantity","newCartItem","response","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","image","startsWith","className","images","map","img","index","src","alt","name","category","wateringNeeds","sunlight","Array","from","length","_","rating","old_price","toFixed","new_price","description","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/ProductDisplay/ProductDisplay.jsx"],"sourcesContent":["// // import React from 'react';\r\n// // import { useDispatch } from 'react-redux';\r\n// // import { addToCart } from '../../redux/actions/cartActions'; \r\n// // import './ProductDisplay.css';\r\n\r\n// // const ProductDisplay = ({ product }) => {\r\n// //   const dispatch = useDispatch();\r\n// //   console.log(product)\r\n\r\n// //   const handleAddToCart = () => {\r\n// //     dispatch(addToCart(product));\r\n// //   };\r\n\r\n// //   if (!product) {\r\n// //     return <div>Product not found</div>;\r\n// //   }\r\n\r\n// //   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\r\n\r\n// //   return (\r\n// //     <div className='productdisplay'>\r\n// //       <div className=\"productdisplay-left\">\r\n// //         <div className=\"productdisplay-img-list\">\r\n// //           {product.images && product.images.map((img, index) => (\r\n// //             <img key={index} src={img.startsWith('/') ? `http://localhost:4000${img}` : img} alt={`Product ${index}`} />\r\n// //           ))}\r\n// //         </div>\r\n// //         <div className=\"productdisplay-img\">\r\n// //           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\r\n// //         </div>\r\n// //       </div>\r\n// //       <div className=\"productdisplay-right\">\r\n// //         <h1>{product.name}</h1>\r\n// //         {product.category === 'plants' && (\r\n// //           <div className=\"productdisplay-right-plant-details\">\r\n// //             <p>Watering Needs: {product.wateringNeeds}</p>\r\n// //             <p>Sunlight: {product.sunlight}</p>\r\n// //           </div>\r\n// //         )}\r\n// //         {product.category === 'pots' && (\r\n// //           <div className=\"productdisplay-right-pot-details\">\r\n// //             <p>Material: {product.material}</p>\r\n// //             <p>Dimensions: {product.dimensions}</p>\r\n// //           </div>\r\n// //         )}\r\n// //         {product.category === 'planters' && (\r\n// //           <div className=\"productdisplay-right-planter-details\">\r\n// //             <p>Material: {product.material}</p>\r\n// //             <p>Size: {product.size}</p>\r\n// //           </div>\r\n// //         )}\r\n// //         {product.category === 'tools' && (\r\n// //           <div className=\"productdisplay-right-tool-details\">\r\n// //             <p>Type: {product.toolType}</p>\r\n// //             <p>Material: {product.material}</p>\r\n// //           </div>\r\n// //         )}\r\n// //         <div className=\"productdisplay-right-stars\">\r\n// //           {Array.from({ length: 5 }, (_, index) => (\r\n// //             <span key={index} className={index < product.rating ? 'star filled' : 'star'}>★</span>\r\n// //           ))}\r\n// //         </div>\r\n// //         <div className=\"productdisplay-right-prices\">\r\n// //           <div className=\"productdisplay-right-price-old\">${product.old_price}</div>\r\n// //           <div className=\"productdisplay-right-price-new\">${product.new_price}</div>\r\n// //         </div>\r\n// //         <div className=\"productdisplay-right-description\">\r\n// //           <p>{product.description}</p>\r\n// //         </div>\r\n// //         {product.category !== 'tools' && (\r\n// //           <div className=\"productdisplay-right-size\">\r\n// //             <h1>Select Size</h1>\r\n// //             <div className=\"productdisplay-right-sizes\">\r\n// //               {/* {['S', 'M', 'L', 'XL', 'XXL'].map(size => (\r\n// //                 <div key={size}>{size}</div>\r\n// //               ))} */}\r\n// //             </div>\r\n// //           </div>\r\n// //         )}\r\n// //         <button onClick={handleAddToCart}>Add to Cart</button>\r\n// //         <p className='productdisplay-right-category'><span>Category :</span>{product.category}</p>\r\n// //         <p className='productdisplay-right-tags'><span>Tags :</span>Lesswater, low light</p>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ProductDisplay;\r\n\r\n// // import React from 'react';\r\n// // import { useDispatch } from 'react-redux';\r\n// // import { addToCart } from '../../redux/actions/cartActions'; \r\n// // import './ProductDisplay.css';\r\n\r\n// // const ProductDisplay = ({ product, }) => {\r\n// //   const dispatch = useDispatch();\r\n\r\n// //   const handleAddToCart = () => {\r\n// //     if (product && product._id) {\r\n// //       dispatch(addToCart(product));  // Pass the product to the action\r\n// //     }\r\n// //   };\r\n\r\n// //   if (!product) {\r\n// //     return <div>Product not found</div>;\r\n// //   }\r\n\r\n// //   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\r\n\r\n\r\n\r\n// //   return (\r\n// //     <div className='productdisplay'>\r\n// //       <div className=\"productdisplay-left\">\r\n// //         <div className=\"productdisplay-img-list\">\r\n// //           {product.images && product.images.map((img, index) => (\r\n// //             <img key={index} src={img.startsWith('/') ? `http://localhost:4000${img}` : img} alt={`Product ${index}`} />\r\n// //           ))}\r\n// //         </div>\r\n// //         <div className=\"productdisplay-img\">\r\n// //           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\r\n// //         </div>\r\n// //       </div>\r\n// //       <div className=\"productdisplay-right\">\r\n// //         <h1>{product.name}</h1>\r\n// //         {/* Category-specific details */}\r\n// //         {product.category === 'plants' && (\r\n// //           <div className=\"productdisplay-right-plant-details\">\r\n// //             <p>Watering Needs: {product.wateringNeeds}</p>\r\n// //             <p>Sunlight: {product.sunlight}</p>\r\n// //           </div>\r\n// //         )}\r\n// //         {/* ... (other category-specific details) ... */}\r\n// //         <div className=\"productdisplay-right-stars\">\r\n// //           {Array.from({ length: 5 }, (_, index) => (\r\n// //             <span key={index} className={index < product.rating ? 'star filled' : 'star'}>★</span>\r\n// //           ))}\r\n// //         </div>\r\n// //         <div className=\"productdisplay-right-prices\">\r\n// //           <div className=\"productdisplay-right-price-old\">${product.old_price}</div>\r\n// //           <div className=\"productdisplay-right-price-new\">${product.new_price}</div>\r\n// //         </div>\r\n// //         <div className=\"productdisplay-right-description\">\r\n// //           <p>{product.description}</p>\r\n// //         </div>\r\n// //         {product.category !== 'tools' && (\r\n// //           <div className=\"productdisplay-right-size\">\r\n// //             <h1>Select Size</h1>\r\n// //             <div className=\"productdisplay-right-sizes\">\r\n// //               {/* Size selection options */}\r\n// //             </div>\r\n// //           </div>\r\n// //         )}\r\n// //         <button onClick={handleAddToCart}>Add to Cart</button>\r\n// //         <p className='productdisplay-right-category'><span>Category :</span>{product.category}</p>\r\n// //         <p className='productdisplay-right-tags'><span>Tags :</span>Lesswater, low light</p>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ProductDisplay;\r\n\r\n\r\n// import React from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { addToCart } from '../../redux/actions/cartActions'; \r\n// import './ProductDisplay.css';\r\n\r\n\r\n\r\n//   const ProductDisplay = ({ product }) => {\r\n//     const dispatch = useDispatch();\r\n  \r\n//     const handleAddToCart = () => {\r\n//       console.log('Product:', product); // Log the product for verification\r\n      \r\n//       const itemId = product._id;\r\n//       console.log('Extracted itemId:', itemId);\r\n  \r\n//       if (!itemId || typeof itemId !== 'string') {\r\n//         console.error('Invalid itemId:', itemId);\r\n//         return;\r\n//       }\r\n  \r\n//       dispatch(addToCart(itemId)); // Assuming addToCart is an action creator\r\n//     };\r\n\r\n//   if (!product) {\r\n//     return <div>Product not found</div>;\r\n//   }\r\n\r\n//   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\r\n\r\n//   return (\r\n//     <div className='productdisplay'>\r\n//       <div className=\"productdisplay-left\">\r\n//         <div className=\"productdisplay-img-list\">\r\n//           {product.images && product.images.map((img, index) => (\r\n//             <img key={index} src={img.startsWith('/') ? `http://localhost:4000${img}` : img} alt={`Product ${index}`} />\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"productdisplay-img\">\r\n//           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"productdisplay-right\">\r\n//         <h1>{product.name}</h1>\r\n//         {/* Category-specific details */}\r\n//         {product.category === 'plants' && (\r\n//           <div className=\"productdisplay-right-plant-details\">\r\n//             <p>Watering Needs: {product.wateringNeeds}</p>\r\n//             <p>Sunlight: {product.sunlight}</p>\r\n//           </div>\r\n//         )}\r\n//         {/* ... (other category-specific details) ... */}\r\n//         <div className=\"productdisplay-right-stars\">\r\n//           {Array.from({ length: 5 }, (_, index) => (\r\n//             <span key={index} className={index < product.rating ? 'star filled' : 'star'}>★</span>\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"productdisplay-right-prices\">\r\n//           <div className=\"productdisplay-right-price-old\">₹{product.old_price}</div>\r\n//           <div className=\"productdisplay-right-price-new\">₹{product.new_price}</div>\r\n//         </div>\r\n//         <div className=\"productdisplay-right-description\">\r\n//           <p>{product.description}</p>\r\n//         </div>\r\n//         {product.category !== 'tools' && (\r\n//           <div className=\"productdisplay-right-size\">\r\n//             <h1>Select Size</h1>\r\n//             <div className=\"productdisplay-right-sizes\">\r\n//               {/* Size selection options */}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//         <button onClick={handleAddToCart}>Add to Cart</button>\r\n//         <p className='productdisplay-right-category'><span>Category :</span>{product.category}</p>\r\n//         <p className='productdisplay-right-tags'><span>Tags :</span>Lesswater, low light</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductDisplay;\r\n\r\n\r\n// import React from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { addToCart } from '../../redux/actions/cartActions'; \r\n// import './ProductDisplay.css';\r\n\r\n// const ProductDisplay = ({ product }) => {\r\n//   const dispatch = useDispatch();\r\n\r\n//   const handleAddToCart = () => {\r\n//     console.log('Product:', product); // Log the product for verification\r\n\r\n//     const itemId = product._id;\r\n//     console.log('Extracted itemId:', itemId);\r\n\r\n//     if (!itemId || typeof itemId !== 'string') {\r\n//       console.error('Invalid itemId:', itemId);\r\n//       return;\r\n//     }\r\n\r\n//     dispatch(addToCart(itemId)); // Assuming addToCart is an action creator\r\n//   };\r\n\r\n//   if (!product) {\r\n//     return <div>Product not found</div>;\r\n//   }\r\n\r\n//   const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\r\n\r\n//   return (\r\n//     <div className='productdisplay'>\r\n//       <div className=\"productdisplay-left\">\r\n//         <div className=\"productdisplay-img-list\">\r\n//           {product.images && product.images.map((img, index) => (\r\n//             <img \r\n//               key={index} \r\n//               src={img.startsWith('/') ? `http://localhost:4000${img}` : img} \r\n//               alt={`Product ${index}`} \r\n//               className='productdisplay-thumbnail'\r\n//             />\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"productdisplay-img\">\r\n//           <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"productdisplay-right\">\r\n//         <h1>{product.name}</h1>\r\n//         {/* Category-specific details */}\r\n//         {product.category === 'plants' && (\r\n//           <div className=\"productdisplay-right-plant-details\">\r\n//             <p>Watering Needs: {product.wateringNeeds || 'N/A'}</p>\r\n//             <p>Sunlight: {product.sunlight || 'N/A'}</p>\r\n//           </div>\r\n//         )}\r\n//         {/* ... (other category-specific details) ... */}\r\n//         <div className=\"productdisplay-right-stars\">\r\n//           {Array.from({ length: 5 }, (_, index) => (\r\n//             <span \r\n//               key={index} \r\n//               className={index < product.rating ? 'star filled' : 'star'}\r\n//               aria-label={`Star rating ${index + 1}`}\r\n//             >\r\n//               ★\r\n//             </span>\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"productdisplay-right-prices\">\r\n//           <div className=\"productdisplay-right-price-old\">₹{product.old_price.toFixed(2)}</div>\r\n//           <div className=\"productdisplay-right-price-new\">₹{product.new_price.toFixed(2)}</div>\r\n//         </div>\r\n//         <div className=\"productdisplay-right-description\">\r\n//           <p>{product.description}</p>\r\n//         </div>\r\n//         {product.category !== 'tools' && (\r\n//           <div className=\"productdisplay-right-size\">\r\n//             <h1>Select Size</h1>\r\n//             <div className=\"productdisplay-right-sizes\">\r\n//               {/* Size selection options */}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//         <button onClick={handleAddToCart}>Add to Cart</button>\r\n//         <p className='productdisplay-right-category'>\r\n//           <span>Category :</span> {product.category}\r\n//         </p>\r\n//         <p className='productdisplay-right-tags'>\r\n//           <span>Tags :</span> Lesswater, low light\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductDisplay;\r\nimport React, { useState } from 'react';\r\nimport { useDispatch,  } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\nimport './ProductDisplay.css';\r\n\r\nconst ProductDisplay = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const cartItems = useSelector(state => state.cart.items);\r\n\r\n  // const handleAddToCart = async () => {\r\n  //   if (!product || !product._id) {\r\n  //     console.error('Invalid product:', product);\r\n  //     return;\r\n  //   }\r\n\r\n  //   setIsAdding(true);\r\n  //   try {\r\n  //     await dispatch(addToCart(product._id));\r\n  //     // Optionally, you can show a success message here\r\n  //   } catch (error) {\r\n  //     console.error('Error adding to cart:', error);\r\n  //     // Optionally, you can show an error message here\r\n  //   } finally {\r\n  //     setIsAdding(false);\r\n  //   }\r\n  // };\r\n\r\n  const handleAddToCart = async () => {\r\n    if (!product || !product._id) {\r\n      console.error('Invalid product:', product);\r\n      return;\r\n    }\r\n  \r\n    setIsAdding(true);\r\n    \r\n    try {\r\n      // Optimistically add or update the quantity in the cart\r\n      const item = cartItems.find(item => item._id === product._id);\r\n  \r\n      if (item) {\r\n        // Item is already in the cart, increase the quantity\r\n        const newQuantity = item.quantity + 1;\r\n  \r\n        // Optimistically update the quantity\r\n        dispatch({\r\n          type: 'OPTIMISTIC_UPDATE_QUANTITY',\r\n          payload: { itemId: product._id, quantity: newQuantity },\r\n        });\r\n  \r\n        // Update the quantity in the backend\r\n        await debouncedUpdateQuantity(product._id, newQuantity);\r\n  \r\n      } else {\r\n        // Item is not in the cart, add it with a quantity of 1\r\n        const newCartItem = { _id: product._id, quantity: 1 };\r\n  \r\n        // Optimistically add the new item to the cart\r\n        dispatch({\r\n          type: 'OPTIMISTIC_ADD_TO_CART',\r\n          payload: newCartItem,\r\n        });\r\n  \r\n        // Add the item to the cart in the backend\r\n        await addToCart(product._id);\r\n      }\r\n  \r\n      // Optionally, you can show a success message here\r\n  \r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n  \r\n      // Handle error by dispatching the error state\r\n      dispatch({\r\n        type: 'CART_ERROR',\r\n        payload: error.response ? error.response.data : error.message,\r\n      });\r\n  \r\n      // Optionally, show an error message here\r\n  \r\n    } finally {\r\n      setIsAdding(false);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  if (!product) {\r\n    return <div>Product not found</div>;\r\n  }\r\n\r\n  const imageUrl = product.image.startsWith('/') ? `http://localhost:4000${product.image}` : product.image;\r\n\r\n  return (\r\n    <div className='productdisplay'>\r\n      <div className=\"productdisplay-left\">\r\n        <div className=\"productdisplay-img-list\">\r\n          {product.images && product.images.map((img, index) => (\r\n            <img\r\n              key={index}\r\n              src={img.startsWith('/') ? `http://localhost:4000${img}` : img}\r\n              alt={`Product ${index}`}\r\n              className='productdisplay-thumbnail'\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"productdisplay-img\">\r\n          <img className='productdisplay-main-img' src={imageUrl} alt={product.name} />\r\n        </div>\r\n      </div>\r\n      <div className=\"productdisplay-right\">\r\n        <h1>{product.name}</h1>\r\n        {product.category === 'plants' && (\r\n          <div className=\"productdisplay-right-plant-details\">\r\n            <p>Watering Needs: {product.wateringNeeds || 'N/A'}</p>\r\n            <p>Sunlight: {product.sunlight || 'N/A'}</p>\r\n          </div>\r\n        )}\r\n        <div className=\"productdisplay-right-stars\">\r\n          {Array.from({ length: 5 }, (_, index) => (\r\n            <span\r\n              key={index}\r\n              className={index < product.rating ? 'star filled' : 'star'}\r\n              aria-label={`Star rating ${index + 1}`}\r\n            >\r\n              ★\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className=\"productdisplay-right-prices\">\r\n          <div className=\"productdisplay-right-price-old\">₹{product.old_price.toFixed(2)}</div>\r\n          <div className=\"productdisplay-right-price-new\">₹{product.new_price.toFixed(2)}</div>\r\n        </div>\r\n        <div className=\"productdisplay-right-description\">\r\n          <p>{product.description}</p>\r\n        </div>\r\n        {product.category !== 'tools' && (\r\n          <div className=\"productdisplay-right-size\">\r\n            <h1>Select Size</h1>\r\n            <div className=\"productdisplay-right-sizes\">\r\n              {/* Size selection options */}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <button onClick={handleAddToCart} disabled={isAdding}>\r\n          {isAdding ? 'Adding...' : 'Add to Cart'}\r\n        </button>\r\n        <p className='productdisplay-right-category'>\r\n          <span>Category :</span> {product.category}\r\n        </p>\r\n        <p className='productdisplay-right-tags'>\r\n          <span>Tags :</span> Lesswater, low light\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDisplay;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAE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"},"metadata":{},"sourceType":"module","externalDependencies":[]}