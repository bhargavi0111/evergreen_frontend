{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\CartItems\\\\CartItems.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import \"./CartItems.css\";\n// import cross_icon from \"../Assets/cart_cross_icon.png\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { fetchCartItems, removeFromCart, updateCartQuantity } from \"../../redux/actions/cartActions\";\n// import { backend_url, currency } from \"../../App\";\n\n// const CartItems = () => {\n//   const dispatch = useDispatch();\n//   const { cartItems } = useSelector(state => state.cart);\n//   const userId = \"exampleUserId\";  // Replace with actual user ID\n\n//   useEffect(() => {\n//     dispatch(fetchCartItems(userId));\n//   }, [dispatch, userId]);\n\n//   const getTotalCartAmount = () => {\n//     return cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0);\n//   };\n\n//   const handleRemove = (productId) => {\n//     dispatch(removeFromCart(userId, productId));\n//   };\n\n//   const handleQuantityChange = (productId, newQuantity) => {\n//     dispatch(updateCartQuantity(userId, productId, newQuantity));\n//   };\n\n//   return (\n//     <div className=\"cartitems\">\n//       <div className=\"cartitems-format-main\">\n//         <p>Products</p>\n//         <p>Title</p>\n//         <p>Price</p>\n//         <p>Quantity</p>\n//         <p>Total</p>\n//         <p>Remove</p>\n//       </div>\n//       <hr />\n//       {cartItems.map((e) => (\n//         <div key={e.productId}>\n//           <div className=\"cartitems-format-main cartitems-format\">\n//             <img className=\"cartitems-product-icon\" src={backend_url + e.image} alt={e.name} />\n//             <p className=\"cartitems-product-title\">{e.name}</p>\n//             <p>{currency}{e.new_price}</p>\n//             <input \n//               className=\"cartitems-quantity\" \n//               type=\"number\" \n//               value={e.quantity} \n//               onChange={(e) => handleQuantityChange(e.productId, Number(e.target.value))}\n//             />\n//             <p>{currency}{e.new_price * e.quantity}</p>\n//             <img \n//               onClick={() => handleRemove(e.productId)} \n//               className=\"cartitems-remove-icon\" \n//               src={cross_icon} \n//               alt=\"Remove\" \n//             />\n//           </div>\n//           <hr />\n//         </div>\n//       ))}\n\n//       <div className=\"cartitems-down\">\n//         <div className=\"cartitems-total\">\n//           <h1>Cart Totals</h1>\n//           <div>\n//             <div className=\"cartitems-total-item\">\n//               <p>Subtotal</p>\n//               <p>{currency}{getTotalCartAmount()}</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <p>Shipping Fee</p>\n//               <p>Free</p>\n//             </div>\n//             <hr />\n//             <div className=\"cartitems-total-item\">\n//               <h3>Total</h3>\n//               <h3>{currency}{getTotalCartAmount()}</h3>\n//             </div>\n//           </div>\n//           <button>PROCEED TO CHECKOUT</button>\n//         </div>\n//         <div className=\"cartitems-promocode\">\n//           <p>If you have a promo code, Enter it here</p>\n//           <div className=\"cartitems-promobox\">\n//             <input type=\"text\" placeholder=\"promo code\" />\n//             <button>Submit</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CartItems;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart, getCartData } from '../../redux/actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItems = () => {\n  _s();\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart.cartData);\n  useEffect(() => {\n    dispatch(getCartData());\n  }, [dispatch]);\n  const handleAdd = itemId => {\n    dispatch(addToCart(itemId));\n  };\n  const handleRemove = itemId => {\n    dispatch(removeFromCart(itemId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(cart).map(itemId => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Item ID: \", itemId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Quantity: \", cart[itemId]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAdd(itemId),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemove(itemId),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, itemId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(CartItems, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CartItems;\nexport default CartItems;\nvar _c;\n$RefreshReg$(_c, \"CartItems\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","addToCart","removeFromCart","getCartData","jsxDEV","_jsxDEV","CartItems","_s","dispatch","cart","state","cartData","handleAdd","itemId","handleRemove","children","Object","keys","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/CartItems/CartItems.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import \"./CartItems.css\";\r\n// import cross_icon from \"../Assets/cart_cross_icon.png\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { fetchCartItems, removeFromCart, updateCartQuantity } from \"../../redux/actions/cartActions\";\r\n// import { backend_url, currency } from \"../../App\";\r\n\r\n// const CartItems = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { cartItems } = useSelector(state => state.cart);\r\n//   const userId = \"exampleUserId\";  // Replace with actual user ID\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchCartItems(userId));\r\n//   }, [dispatch, userId]);\r\n\r\n//   const getTotalCartAmount = () => {\r\n//     return cartItems.reduce((total, item) => total + item.new_price * item.quantity, 0);\r\n//   };\r\n\r\n//   const handleRemove = (productId) => {\r\n//     dispatch(removeFromCart(userId, productId));\r\n//   };\r\n\r\n//   const handleQuantityChange = (productId, newQuantity) => {\r\n//     dispatch(updateCartQuantity(userId, productId, newQuantity));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"cartitems\">\r\n//       <div className=\"cartitems-format-main\">\r\n//         <p>Products</p>\r\n//         <p>Title</p>\r\n//         <p>Price</p>\r\n//         <p>Quantity</p>\r\n//         <p>Total</p>\r\n//         <p>Remove</p>\r\n//       </div>\r\n//       <hr />\r\n//       {cartItems.map((e) => (\r\n//         <div key={e.productId}>\r\n//           <div className=\"cartitems-format-main cartitems-format\">\r\n//             <img className=\"cartitems-product-icon\" src={backend_url + e.image} alt={e.name} />\r\n//             <p className=\"cartitems-product-title\">{e.name}</p>\r\n//             <p>{currency}{e.new_price}</p>\r\n//             <input \r\n//               className=\"cartitems-quantity\" \r\n//               type=\"number\" \r\n//               value={e.quantity} \r\n//               onChange={(e) => handleQuantityChange(e.productId, Number(e.target.value))}\r\n//             />\r\n//             <p>{currency}{e.new_price * e.quantity}</p>\r\n//             <img \r\n//               onClick={() => handleRemove(e.productId)} \r\n//               className=\"cartitems-remove-icon\" \r\n//               src={cross_icon} \r\n//               alt=\"Remove\" \r\n//             />\r\n//           </div>\r\n//           <hr />\r\n//         </div>\r\n//       ))}\r\n      \r\n//       <div className=\"cartitems-down\">\r\n//         <div className=\"cartitems-total\">\r\n//           <h1>Cart Totals</h1>\r\n//           <div>\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Subtotal</p>\r\n//               <p>{currency}{getTotalCartAmount()}</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <p>Shipping Fee</p>\r\n//               <p>Free</p>\r\n//             </div>\r\n//             <hr />\r\n//             <div className=\"cartitems-total-item\">\r\n//               <h3>Total</h3>\r\n//               <h3>{currency}{getTotalCartAmount()}</h3>\r\n//             </div>\r\n//           </div>\r\n//           <button>PROCEED TO CHECKOUT</button>\r\n//         </div>\r\n//         <div className=\"cartitems-promocode\">\r\n//           <p>If you have a promo code, Enter it here</p>\r\n//           <div className=\"cartitems-promobox\">\r\n//             <input type=\"text\" placeholder=\"promo code\" />\r\n//             <button>Submit</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CartItems;\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removeFromCart, getCartData } from '../../redux/actions/cartActions';\r\n\r\nconst CartItems = () => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector(state => state.cart.cartData);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCartData());\r\n  }, [dispatch]);\r\n\r\n  const handleAdd = (itemId) => {\r\n    dispatch(addToCart(itemId));\r\n  };\r\n\r\n  const handleRemove = (itemId) => {\r\n    dispatch(removeFromCart(itemId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(cart).map(itemId => (\r\n        <div key={itemId}>\r\n          <span>Item ID: {itemId}</span>\r\n          <span>Quantity: {cart[itemId]}</span>\r\n          <button onClick={() => handleAdd(itemId)}>Add</button>\r\n          <button onClick={() => handleRemove(itemId)}>Remove</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItems;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,cAAc,EAAEC,WAAW,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,IAAI,CAACE,QAAQ,CAAC;EAEtDb,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAEd,MAAMI,SAAS,GAAIC,MAAM,IAAK;IAC5BL,QAAQ,CAACP,SAAS,CAACY,MAAM,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAID,MAAM,IAAK;IAC/BL,QAAQ,CAACN,cAAc,CAACW,MAAM,CAAC,CAAC;EAClC,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,EACGC,MAAM,CAACC,IAAI,CAACR,IAAI,CAAC,CAACS,GAAG,CAACL,MAAM,iBAC3BR,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,GAAM,WAAS,EAACF,MAAM;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9BjB,OAAA;QAAAU,QAAA,GAAM,YAAU,EAACN,IAAI,CAACI,MAAM,CAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCjB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMX,SAAS,CAACC,MAAM,CAAE;QAAAE,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDjB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACD,MAAM,CAAE;QAAAE,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAJpDT,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,SAAS;EAAA,QACIP,WAAW,EACfC,WAAW;AAAA;AAAAwB,EAAA,GAFpBlB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}