{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargavi_g\\\\Documents\\\\Nursery_live\\\\frontend\\\\src\\\\Components\\\\PrivateRoute.jsx\";\n// import React, { useEffect } from 'react';\n// import { Navigate } from 'react-router-dom';\n\n// const PrivateRoute = ({ element }) => {\n//   const token = localStorage.getItem('token');\n\n//   // Clear the token when the component mounts\n//   useEffect(() => {\n//     localStorage.removeItem('token');\n//   }, []);\n\n//   // Redirect to login if there's no token\n//   return !token ? <Navigate to=\"/login\" /> : element;\n// };\n\n// export default PrivateRoute;\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element\n}) => {\n  const token = localStorage.getItem('token'); // Check for JWT token in localStorage\n\n  // Redirect to login if not authenticated\n  return token ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 28\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","PrivateRoute","element","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/PrivateRoute.jsx"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n// const PrivateRoute = ({ element }) => {\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   // Clear the token when the component mounts\r\n//   useEffect(() => {\r\n//     localStorage.removeItem('token');\r\n//   }, []);\r\n\r\n//   // Redirect to login if there's no token\r\n//   return !token ? <Navigate to=\"/login\" /> : element;\r\n// };\r\n\r\n// export default PrivateRoute;\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ element }) => {\r\n  const token = localStorage.getItem('token'); // Check for JWT token in localStorage\r\n\r\n  // Redirect to login if not authenticated\r\n  return token ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C;EACA,OAAOF,KAAK,GAAGD,OAAO,gBAAGF,OAAA,CAACF,QAAQ;IAACQ,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD,CAAC;AAACC,EAAA,GALIV,YAAY;AAOlB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}