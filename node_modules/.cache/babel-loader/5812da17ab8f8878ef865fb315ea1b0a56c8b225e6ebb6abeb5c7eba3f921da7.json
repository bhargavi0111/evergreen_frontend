{"ast":null,"code":"// src/actions/authActions.js\nimport axios from 'axios';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\nexport const FORGOT_PASSWORD_FAILURE = 'FORGOT_PASSWORD_FAILURE';\nexport const SET_ERROR = 'SET_ERROR';\nconst setError = error => ({\n  type: SET_ERROR,\n  payload: error\n});\nexport const login = (formData, captchaToken) => async dispatch => {\n  try {\n    const response = await axios.post('/auth/login', {\n      ...formData,\n      captchaToken\n    });\n    localStorage.setItem('token', response.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data.token\n    });\n  } catch (err) {\n    var _err$response, _err$response$data;\n    const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.errors) || 'Login failed';\n    dispatch(setError(errorMsg));\n  }\n};\nexport const signup = (formData, captchaToken) => async dispatch => {\n  try {\n    const response = await axios.post('/auth/signup', {\n      ...formData,\n      captchaToken\n    });\n    localStorage.setItem('token', response.data.token);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: response.data.token\n    });\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.errors) || 'Signup failed';\n    dispatch(setError(errorMsg));\n  }\n};\nexport const forgotPassword = (email, captchaToken) => async dispatch => {\n  try {\n    await axios.post('/auth/forgot-password', {\n      email,\n      captchaToken\n    });\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS\n    });\n  } catch (err) {\n    var _err$response3, _err$response3$data;\n    const errorMsg = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.errors) || 'Password reset failed';\n    dispatch(setError(errorMsg));\n  }\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_SUCCESS","SIGNUP_FAILURE","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","SET_ERROR","setError","error","type","payload","login","formData","captchaToken","dispatch","response","post","localStorage","setItem","data","token","err","_err$response","_err$response$data","errorMsg","errors","signup","_err$response2","_err$response2$data","forgotPassword","email","_err$response3","_err$response3$data"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.js"],"sourcesContent":["// src/actions/authActions.js\r\nimport axios from 'axios';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAILURE = 'FORGOT_PASSWORD_FAILURE';\r\nexport const SET_ERROR = 'SET_ERROR';\r\n\r\nconst setError = (error) => ({\r\n  type: SET_ERROR,\r\n  payload: error\r\n});\r\n\r\nexport const login = (formData, captchaToken) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/auth/login', { ...formData, captchaToken });\r\n    localStorage.setItem('token', response.data.token);\r\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data.token });\r\n  } catch (err) {\r\n    const errorMsg = err.response?.data?.errors || 'Login failed';\r\n    dispatch(setError(errorMsg));\r\n  }\r\n};\r\n\r\nexport const signup = (formData, captchaToken) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/auth/signup', { ...formData, captchaToken });\r\n    localStorage.setItem('token', response.data.token);\r\n    dispatch({ type: SIGNUP_SUCCESS, payload: response.data.token });\r\n  } catch (err) {\r\n    const errorMsg = err.response?.data?.errors || 'Signup failed';\r\n    dispatch(setError(errorMsg));\r\n  }\r\n};\r\n\r\nexport const forgotPassword = (email, captchaToken) => async (dispatch) => {\r\n  try {\r\n    await axios.post('/auth/forgot-password', { email, captchaToken });\r\n    dispatch({ type: FORGOT_PASSWORD_SUCCESS });\r\n  } catch (err) {\r\n    const errorMsg = err.response?.data?.errors || 'Password reset failed';\r\n    dispatch(setError(errorMsg));\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,MAAMC,QAAQ,GAAIC,KAAK,KAAM;EAC3BC,IAAI,EAAEH,SAAS;EACfI,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,KAAK,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK,MAAOC,QAAQ,IAAK;EACnE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,aAAa,EAAE;MAAE,GAAGJ,QAAQ;MAAEC;IAAa,CAAC,CAAC;IAC/EI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAClDN,QAAQ,CAAC;MAAEL,IAAI,EAAET,aAAa;MAAEU,OAAO,EAAEK,QAAQ,CAACI,IAAI,CAACC;IAAM,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACZ,MAAMC,QAAQ,GAAG,EAAAF,aAAA,GAAAD,GAAG,CAACN,QAAQ,cAAAO,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBE,MAAM,KAAI,cAAc;IAC7DX,QAAQ,CAACP,QAAQ,CAACiB,QAAQ,CAAC,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAME,MAAM,GAAGA,CAACd,QAAQ,EAAEC,YAAY,KAAK,MAAOC,QAAQ,IAAK;EACpE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,cAAc,EAAE;MAAE,GAAGJ,QAAQ;MAAEC;IAAa,CAAC,CAAC;IAChFI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAClDN,QAAQ,CAAC;MAAEL,IAAI,EAAEP,cAAc;MAAEQ,OAAO,EAAEK,QAAQ,CAACI,IAAI,CAACC;IAAM,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAM,cAAA,EAAAC,mBAAA;IACZ,MAAMJ,QAAQ,GAAG,EAAAG,cAAA,GAAAN,GAAG,CAACN,QAAQ,cAAAY,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcR,IAAI,cAAAS,mBAAA,uBAAlBA,mBAAA,CAAoBH,MAAM,KAAI,eAAe;IAC9DX,QAAQ,CAACP,QAAQ,CAACiB,QAAQ,CAAC,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMK,cAAc,GAAGA,CAACC,KAAK,EAAEjB,YAAY,KAAK,MAAOC,QAAQ,IAAK;EACzE,IAAI;IACF,MAAMf,KAAK,CAACiB,IAAI,CAAC,uBAAuB,EAAE;MAAEc,KAAK;MAAEjB;IAAa,CAAC,CAAC;IAClEC,QAAQ,CAAC;MAAEL,IAAI,EAAEL;IAAwB,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOiB,GAAG,EAAE;IAAA,IAAAU,cAAA,EAAAC,mBAAA;IACZ,MAAMR,QAAQ,GAAG,EAAAO,cAAA,GAAAV,GAAG,CAACN,QAAQ,cAAAgB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcZ,IAAI,cAAAa,mBAAA,uBAAlBA,mBAAA,CAAoBP,MAAM,KAAI,uBAAuB;IACtEX,QAAQ,CAACP,QAAQ,CAACiB,QAAQ,CAAC,CAAC;EAC9B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}