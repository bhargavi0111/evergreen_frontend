{"ast":null,"code":"// src/reducers/cartReducer.js\nconst initialState = {\n  cartItems: {} // Assuming cartItems is an object with product IDs as keys\n  // Add other cart-related states if needed\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      // Handle add to cart\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.payload.id]: action.payload.quantity\n        }\n      };\n    case 'REMOVE_FROM_CART':\n      // Handle remove from cart\n      const updatedCartItems = {\n        ...state.cartItems\n      };\n      delete updatedCartItems[action.payload.id];\n      return {\n        ...state,\n        cartItems: updatedCartItems\n      };\n    case 'UPDATE_CART_ITEM':\n      // Handle update cart item quantity\n      return {\n        ...state,\n        cartItems: {\n          ...state.cartItems,\n          [action.payload.id]: action.payload.quantity\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["initialState","cartItems","cartReducer","state","action","type","payload","id","quantity","updatedCartItems"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/reducers/cartReducer.js"],"sourcesContent":["// src/reducers/cartReducer.js\r\nconst initialState = {\r\n    cartItems: {}, // Assuming cartItems is an object with product IDs as keys\r\n    // Add other cart-related states if needed\r\n  };\r\n  \r\n  const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TO_CART':\r\n        // Handle add to cart\r\n        return { ...state, cartItems: { ...state.cartItems, [action.payload.id]: action.payload.quantity } };\r\n      case 'REMOVE_FROM_CART':\r\n        // Handle remove from cart\r\n        const updatedCartItems = { ...state.cartItems };\r\n        delete updatedCartItems[action.payload.id];\r\n        return { ...state, cartItems: updatedCartItems };\r\n      case 'UPDATE_CART_ITEM':\r\n        // Handle update cart item quantity\r\n        return {\r\n          ...state,\r\n          cartItems: { ...state.cartItems, [action.payload.id]: action.payload.quantity },\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default cartReducer;\r\n  "],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EACjBC,SAAS,EAAE,CAAC,CAAC,CAAE;EACf;AACF,CAAC;;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB;MACA,OAAO;QAAE,GAAGF,KAAK;QAAEF,SAAS,EAAE;UAAE,GAAGE,KAAK,CAACF,SAAS;UAAE,CAACG,MAAM,CAACE,OAAO,CAACC,EAAE,GAAGH,MAAM,CAACE,OAAO,CAACE;QAAS;MAAE,CAAC;IACtG,KAAK,kBAAkB;MACrB;MACA,MAAMC,gBAAgB,GAAG;QAAE,GAAGN,KAAK,CAACF;MAAU,CAAC;MAC/C,OAAOQ,gBAAgB,CAACL,MAAM,CAACE,OAAO,CAACC,EAAE,CAAC;MAC1C,OAAO;QAAE,GAAGJ,KAAK;QAAEF,SAAS,EAAEQ;MAAiB,CAAC;IAClD,KAAK,kBAAkB;MACrB;MACA,OAAO;QACL,GAAGN,KAAK;QACRF,SAAS,EAAE;UAAE,GAAGE,KAAK,CAACF,SAAS;UAAE,CAACG,MAAM,CAACE,OAAO,CAACC,EAAE,GAAGH,MAAM,CAACE,OAAO,CAACE;QAAS;MAChF,CAAC;IACH;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}