{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const LOAD_USER = 'LOAD_USER';\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\nexport const CLEAR_FORGOT_PASSWORD_MESSAGES = 'CLEAR_FORGOT_PASSWORD_MESSAGES';\nexport const CLEAR_RESET_PASSWORD_MESSAGES = 'CLEAR_RESET_PASSWORD_MESSAGES';\nconst API_URL = 'http://localhost:4000/auth';\nexport const login = userData => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, userData);\n    const {\n      token\n    } = response.data;\n    localStorage.setItem('token', token);\n    const decodedUser = jwtDecode(token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        token,\n        user: decodedUser\n      }\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errors) || 'Login failed'\n    });\n  }\n};\nexport const signup = userData => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL}/signup`, userData);\n    const {\n      token\n    } = response.data;\n    localStorage.setItem('token', token);\n    const decodedUser = jwtDecode(token);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: {\n        token,\n        user: decodedUser\n      }\n    });\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.errors) || 'Signup failed'\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('token');\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport const loadUser = () => dispatch => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    try {\n      const decodedUser = jwtDecode(token);\n      dispatch({\n        type: LOAD_USER,\n        payload: {\n          token,\n          user: decodedUser\n        }\n      });\n    } catch (error) {\n      dispatch(logout());\n    }\n  }\n};\nexport const forgotPassword = email => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL}/forgot-password`, {\n      email\n    });\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS,\n      payload: response.data.message\n    });\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.errors) || 'Password reset request failed'\n    });\n  }\n};\nexport const resetPassword = (token, newPassword) => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL}/reset-password`, {\n      token,\n      newPassword\n    });\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: response.data.message\n    });\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n      payload: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.errors) || 'Password reset failed'\n    });\n  }\n};\nexport const clearForgotPasswordMessages = () => ({\n  type: CLEAR_FORGOT_PASSWORD_MESSAGES\n});\nexport const clearResetPasswordMessages = () => ({\n  type: CLEAR_RESET_PASSWORD_MESSAGES\n});","map":{"version":3,"names":["axios","jwtDecode","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","LOAD_USER","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","CLEAR_FORGOT_PASSWORD_MESSAGES","CLEAR_RESET_PASSWORD_MESSAGES","API_URL","login","userData","dispatch","response","post","token","data","localStorage","setItem","decodedUser","type","payload","user","error","_error$response","_error$response$data","errors","signup","_error$response2","_error$response2$data","logout","removeItem","loadUser","getItem","forgotPassword","email","message","_error$response3","_error$response3$data","resetPassword","newPassword","_error$response4","_error$response4$data","clearForgotPasswordMessages","clearResetPasswordMessages"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.jsx"],"sourcesContent":["\r\n\r\n\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode'; \r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const LOAD_USER = 'LOAD_USER';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\n\r\nexport const CLEAR_FORGOT_PASSWORD_MESSAGES = 'CLEAR_FORGOT_PASSWORD_MESSAGES';\r\nexport const CLEAR_RESET_PASSWORD_MESSAGES = 'CLEAR_RESET_PASSWORD_MESSAGES';\r\n\r\nconst API_URL = 'http://localhost:4000/auth';\r\n\r\nexport const login = (userData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, userData);\r\n    const { token } = response.data;\r\n\r\n    localStorage.setItem('token', token);\r\n\r\n    const decodedUser = jwtDecode(token);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: { token, user: decodedUser },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response?.data?.errors || 'Login failed',\r\n    });\r\n  }\r\n};\r\n\r\nexport const signup = (userData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/signup`, userData);\r\n    const { token } = response.data;\r\n\r\n    localStorage.setItem('token', token);\r\n\r\n    const decodedUser = jwtDecode(token);\r\n\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: { token, user: decodedUser },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n      payload: error.response?.data?.errors || 'Signup failed',\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('token');\r\n  \r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\nexport const loadUser = () => (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if (token) {\r\n    try {\r\n      const decodedUser = jwtDecode(token);\r\n\r\n      dispatch({\r\n        type: LOAD_USER,\r\n        payload: { token, user: decodedUser },\r\n      });\r\n    } catch (error) {\r\n      dispatch(logout());\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/forgot-password`, { email });\r\n    \r\n    dispatch({\r\n      type: FORGOT_PASSWORD_SUCCESS,\r\n      payload: response.data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FORGOT_PASSWORD_FAIL,\r\n      payload: error.response?.data?.errors || 'Password reset request failed',\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (token, newPassword) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/reset-password`, { token, newPassword });\r\n    \r\n    dispatch({\r\n      type: RESET_PASSWORD_SUCCESS,\r\n      payload: response.data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RESET_PASSWORD_FAIL,\r\n      payload: error.response?.data?.errors || 'Password reset failed',\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const clearForgotPasswordMessages = () => ({\r\n  type: CLEAR_FORGOT_PASSWORD_MESSAGES,\r\n});\r\n\r\nexport const clearResetPasswordMessages = () => ({\r\n  type: CLEAR_RESET_PASSWORD_MESSAGES,\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}