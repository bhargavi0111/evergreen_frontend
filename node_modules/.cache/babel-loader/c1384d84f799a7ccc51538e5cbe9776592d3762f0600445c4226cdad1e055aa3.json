{"ast":null,"code":"// import axios from 'axios';\n\n// Action Types\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\n// API URL\nconst API_URL = 'http://localhost:4000/auth';\n\n// // Action Creators\n// export const login = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/login`, userData);\n//     const { token } = response.data;\n\n//     // Save token to localStorage or cookies as needed\n//     localStorage.setItem('token', token);\n\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: token,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: LOGIN_FAIL,\n//       payload: error.response.data.errors,\n//     });\n//   }\n// };\n\n// export const signup = (userData) => async (dispatch) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/signup`, userData);\n//     const { token } = response.data;\n\n//     // Save token to localStorage or cookies as needed\n//     localStorage.setItem('token', token);\n\n//     dispatch({\n//       type: SIGNUP_SUCCESS,\n//       payload: token,\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: SIGNUP_FAIL,\n//       payload: error.response.data.errors,\n//     });\n//   }\n// };\n\n// // Logout Action\n// export const logout = () => (dispatch) => {\n//   // Remove token from localStorage or cookies\n//   localStorage.removeItem('token');\n\n//   dispatch({\n//     type: LOGOUT,\n//   });\n// };\n\n// export const checkAuth = () => (dispatch) => {\n//     const token = localStorage.getItem('token');\n\n//     if (token) {\n//       dispatch({ \n//         type: 'USER_LOADED', \n//         payload: { token } \n//       });\n//     } else {\n//       dispatch({ type: 'AUTH_ERROR' });\n//     }\n//   };\n\n// authActions.js\nimport axios from 'axios';\nexport const signup = userData => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/auth/signup`, userData);\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('token', token);\n    dispatch({\n      type: 'SIGNUP_SUCCESS',\n      payload: token\n    });\n  } catch (err) {\n    dispatch({\n      type: 'SIGNUP_FAIL',\n      payload: err.response.data.errors\n    });\n  }\n};\nexport const login = userData => async dispatch => {\n  try {\n    const res = await axios.post(`${backend_ur}/auth/login`, userData);\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('token', token);\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: token\n    });\n  } catch (err) {\n    dispatch({\n      type: 'LOGIN_FAIL',\n      payload: err.response.data.errors\n    });\n  }\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","API_URL","axios","signup","userData","dispatch","res","post","token","data","localStorage","setItem","type","payload","err","response","errors","login","backend_ur"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/actions/authActions.jsx"],"sourcesContent":["\r\n// import axios from 'axios';\r\n\r\n// Action Types\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n// API URL\r\nconst API_URL = 'http://localhost:4000/auth';\r\n\r\n// // Action Creators\r\n// export const login = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/login`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Save token to localStorage or cookies as needed\r\n//     localStorage.setItem('token', token);\r\n\r\n//     dispatch({\r\n//       type: LOGIN_SUCCESS,\r\n//       payload: token,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: LOGIN_FAIL,\r\n//       payload: error.response.data.errors,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// export const signup = (userData) => async (dispatch) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/signup`, userData);\r\n//     const { token } = response.data;\r\n\r\n//     // Save token to localStorage or cookies as needed\r\n//     localStorage.setItem('token', token);\r\n\r\n//     dispatch({\r\n//       type: SIGNUP_SUCCESS,\r\n//       payload: token,\r\n//     });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: SIGNUP_FAIL,\r\n//       payload: error.response.data.errors,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Logout Action\r\n// export const logout = () => (dispatch) => {\r\n//   // Remove token from localStorage or cookies\r\n//   localStorage.removeItem('token');\r\n\r\n//   dispatch({\r\n//     type: LOGOUT,\r\n//   });\r\n// };\r\n\r\n// export const checkAuth = () => (dispatch) => {\r\n//     const token = localStorage.getItem('token');\r\n    \r\n//     if (token) {\r\n//       dispatch({ \r\n//         type: 'USER_LOADED', \r\n//         payload: { token } \r\n//       });\r\n//     } else {\r\n//       dispatch({ type: 'AUTH_ERROR' });\r\n//     }\r\n//   };\r\n  \r\n// authActions.js\r\nimport axios from 'axios';\r\n\r\nexport const signup = (userData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`${API_URL}/auth/signup`, userData);\r\n    const { token } = res.data;\r\n    localStorage.setItem('token', token);\r\n    dispatch({ type: 'SIGNUP_SUCCESS', payload: token });\r\n  } catch (err) {\r\n    dispatch({ type: 'SIGNUP_FAIL', payload: err.response.data.errors });\r\n  }\r\n};\r\n\r\nexport const login = (userData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`${backend_ur}/auth/login`, userData);\r\n    const { token } = res.data;\r\n    localStorage.setItem('token', token);\r\n    dispatch({ type: 'LOGIN_SUCCESS', payload: token });\r\n  } catch (err) {\r\n    dispatch({ type: 'LOGIN_FAIL', payload: err.response.data.errors });\r\n  }\r\n};\r\n"],"mappings":"AACA;;AAEA;AACA,OAAO,MAAMA,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,MAAMC,OAAO,GAAG,4BAA4B;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEN,OAAQ,cAAa,EAAEG,QAAQ,CAAC;IAChE,MAAM;MAAEI;IAAM,CAAC,GAAGF,GAAG,CAACG,IAAI;IAC1BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IACpCH,QAAQ,CAAC;MAAEO,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAEL;IAAM,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZT,QAAQ,CAAC;MAAEO,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEC,GAAG,CAACC,QAAQ,CAACN,IAAI,CAACO;IAAO,CAAC,CAAC;EACtE;AACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAIb,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEW,UAAW,aAAY,EAAEd,QAAQ,CAAC;IAClE,MAAM;MAAEI;IAAM,CAAC,GAAGF,GAAG,CAACG,IAAI;IAC1BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IACpCH,QAAQ,CAAC;MAAEO,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAEL;IAAM,CAAC,CAAC;EACrD,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZT,QAAQ,CAAC;MAAEO,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAEC,GAAG,CAACC,QAAQ,CAACN,IAAI,CAACO;IAAO,CAAC,CAAC;EACrE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}