{"ast":null,"code":"// import {\n//   ADD_TO_CART,\n//   REMOVE_FROM_CART_SUCCESS,\n//   UPDATE_QUANTITY_SUCCESS,\n//   GET_CART_REQUEST,\n//   GET_CART_SUCCESS,\n//   GET_CART_FAIL,\n//   CART_ERROR,\n// } from \"../actions/cartActions\";\n\n// const initialState = {\n//   items: [],\n//   error: null,\n// };\n\n// const cartReducer = (state = initialState, action) => {\n//   switch (action.type) {\n\n//     case GET_CART_REQUEST:\n//       return { ...state, loading: true };\n//     case GET_CART_SUCCESS:\n//       return { ...state, loading: false, items: action.payload };\n//     case GET_CART_FAIL:\n//       return { ...state, loading: false, error: action.payload };\n//     case ADD_TO_CART:\n//       return {\n//         ...state,\n//         items: action.payload,\n//         error: null,\n//       };\n//     case UPDATE_QUANTITY_SUCCESS:\n//       return { ...state, loading: false, items: action.payload };\n//     case REMOVE_FROM_CART_SUCCESS:\n//       return { ...state, loading: false, items: action.payload };\n\n//     case CART_ERROR:\n//       return {\n//         ...state,\n//         error: action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default cartReducer;\n\n// import {\n//   ADD_TO_CART_SUCCESS,\n//   ADD_TO_CART_FAIL,\n//   REMOVE_FROM_CART_SUCCESS,\n//   REMOVE_FROM_CART_FAIL,\n//   UPDATE_CART_SUCCESS,\n//   UPDATE_CART_FAIL,\n//   GET_CART_REQUEST,\n//   GET_CART_SUCCESS,\n//   GET_CART_FAIL,\n//   CART_ERROR,\n// } from \"../actions/cartActions\";\n\n// const initialState = {\n//   items: [],\n//   loading: false,\n//   error: null,\n// };\n\n// const cartReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case GET_CART_REQUEST:\n//       return { ...state, loading: true };\n\n//     case GET_CART_SUCCESS:\n//       return { ...state, loading: false, items: action.payload, error: null };\n\n//     case GET_CART_FAIL:\n//       return { ...state, loading: false, error: action.payload };\n\n//     case ADD_TO_CART_SUCCESS:\n//       return {\n//         ...state,\n//         items: [...state.items, action.payload], // Add new item to cart\n//         error: null,\n//       };\n\n//     case ADD_TO_CART_FAIL:\n//       return {\n//         ...state,\n//         error: action.payload,\n//       };\n\n//     case UPDATE_CART_SUCCESS:\n//       return {\n//         ...state,\n//         loading: false,\n//         items: state.items.map(item =>\n//           item._id === action.payload._id ? action.payload : item\n//         ),\n//         error: null,\n//       };\n\n//     case UPDATE_CART_FAIL:\n//       return {\n//         ...state,\n//         error: action.payload,\n//       };\n\n//     case REMOVE_FROM_CART_SUCCESS:\n//       return {\n//         ...state,\n//         loading: false,\n//         items: state.items.filter(item => item._id !== action.payload._id), // Remove item from cart\n//         error: null,\n//       };\n\n//     case REMOVE_FROM_CART_FAIL:\n//       return {\n//         ...state,\n//         error: action.payload,\n//       };\n\n//     case CART_ERROR:\n//       return {\n//         ...state,\n//         error: action.payload,\n//       };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default cartReducer;\n\nimport { ADD_TO_CART_SUCCESS, ADD_TO_CART_FAIL, REMOVE_FROM_CART_SUCCESS, UPDATE_CART_SUCCESS, GET_CART_REQUEST, GET_CART_SUCCESS, GET_CART_FAIL, CART_ERROR } from \"../actions/cartActions\";\nconst initialState = {\n  cartItems: [],\n  loading: false,\n  error: null\n};\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CART_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_CART_SUCCESS:\n    case ADD_TO_CART_SUCCESS:\n    case REMOVE_FROM_CART_SUCCESS:\n    case UPDATE_CART_SUCCESS:\n      return {\n        ...state,\n        cartItems: action.payload,\n        loading: false\n      };\n    case GET_CART_FAIL:\n    case ADD_TO_CART_FAIL:\n    case CART_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ADD_TO_CART_SUCCESS","ADD_TO_CART_FAIL","REMOVE_FROM_CART_SUCCESS","UPDATE_CART_SUCCESS","GET_CART_REQUEST","GET_CART_SUCCESS","GET_CART_FAIL","CART_ERROR","initialState","cartItems","loading","error","cartReducer","state","action","type","payload"],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/redux/reducers/cartReducer.jsx"],"sourcesContent":["\r\n// import {\r\n//   ADD_TO_CART,\r\n//   REMOVE_FROM_CART_SUCCESS,\r\n//   UPDATE_QUANTITY_SUCCESS,\r\n//   GET_CART_REQUEST,\r\n//   GET_CART_SUCCESS,\r\n//   GET_CART_FAIL,\r\n//   CART_ERROR,\r\n// } from \"../actions/cartActions\";\r\n\r\n// const initialState = {\r\n//   items: [],\r\n//   error: null,\r\n// };\r\n\r\n// const cartReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n  \r\n//     case GET_CART_REQUEST:\r\n//       return { ...state, loading: true };\r\n//     case GET_CART_SUCCESS:\r\n//       return { ...state, loading: false, items: action.payload };\r\n//     case GET_CART_FAIL:\r\n//       return { ...state, loading: false, error: action.payload };\r\n//     case ADD_TO_CART:\r\n//       return {\r\n//         ...state,\r\n//         items: action.payload,\r\n//         error: null,\r\n//       };\r\n//     case UPDATE_QUANTITY_SUCCESS:\r\n//       return { ...state, loading: false, items: action.payload };\r\n//     case REMOVE_FROM_CART_SUCCESS:\r\n//       return { ...state, loading: false, items: action.payload };\r\n\r\n//     case CART_ERROR:\r\n//       return {\r\n//         ...state,\r\n//         error: action.payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default cartReducer;\r\n\r\n// import {\r\n//   ADD_TO_CART_SUCCESS,\r\n//   ADD_TO_CART_FAIL,\r\n//   REMOVE_FROM_CART_SUCCESS,\r\n//   REMOVE_FROM_CART_FAIL,\r\n//   UPDATE_CART_SUCCESS,\r\n//   UPDATE_CART_FAIL,\r\n//   GET_CART_REQUEST,\r\n//   GET_CART_SUCCESS,\r\n//   GET_CART_FAIL,\r\n//   CART_ERROR,\r\n// } from \"../actions/cartActions\";\r\n\r\n// const initialState = {\r\n//   items: [],\r\n//   loading: false,\r\n//   error: null,\r\n// };\r\n\r\n// const cartReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case GET_CART_REQUEST:\r\n//       return { ...state, loading: true };\r\n\r\n//     case GET_CART_SUCCESS:\r\n//       return { ...state, loading: false, items: action.payload, error: null };\r\n\r\n//     case GET_CART_FAIL:\r\n//       return { ...state, loading: false, error: action.payload };\r\n\r\n//     case ADD_TO_CART_SUCCESS:\r\n//       return {\r\n//         ...state,\r\n//         items: [...state.items, action.payload], // Add new item to cart\r\n//         error: null,\r\n//       };\r\n\r\n//     case ADD_TO_CART_FAIL:\r\n//       return {\r\n//         ...state,\r\n//         error: action.payload,\r\n//       };\r\n\r\n//     case UPDATE_CART_SUCCESS:\r\n//       return {\r\n//         ...state,\r\n//         loading: false,\r\n//         items: state.items.map(item =>\r\n//           item._id === action.payload._id ? action.payload : item\r\n//         ),\r\n//         error: null,\r\n//       };\r\n\r\n//     case UPDATE_CART_FAIL:\r\n//       return {\r\n//         ...state,\r\n//         error: action.payload,\r\n//       };\r\n\r\n//     case REMOVE_FROM_CART_SUCCESS:\r\n//       return {\r\n//         ...state,\r\n//         loading: false,\r\n//         items: state.items.filter(item => item._id !== action.payload._id), // Remove item from cart\r\n//         error: null,\r\n//       };\r\n\r\n//     case REMOVE_FROM_CART_FAIL:\r\n//       return {\r\n//         ...state,\r\n//         error: action.payload,\r\n//       };\r\n\r\n//     case CART_ERROR:\r\n//       return {\r\n//         ...state,\r\n//         error: action.payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default cartReducer;\r\n\r\n\r\nimport {\r\n  ADD_TO_CART_SUCCESS,\r\n  ADD_TO_CART_FAIL,\r\n  REMOVE_FROM_CART_SUCCESS,\r\n  UPDATE_CART_SUCCESS,\r\n  GET_CART_REQUEST,\r\n  GET_CART_SUCCESS,\r\n  GET_CART_FAIL,\r\n  CART_ERROR,\r\n} from \"../actions/cartActions\";\r\nconst initialState = {\r\n  cartItems: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CART_REQUEST:\r\n      return { ...state, loading: true };\r\n    case GET_CART_SUCCESS:\r\n    case ADD_TO_CART_SUCCESS:\r\n    case REMOVE_FROM_CART_SUCCESS:\r\n    case UPDATE_CART_SUCCESS:\r\n      return { \r\n        ...state, \r\n        cartItems: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_CART_FAIL:\r\n    case ADD_TO_CART_FAIL:\r\n    case CART_ERROR:\r\n      return { \r\n        ...state, \r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappingsmBAAmB,EACnBC,gBAAgB,EAChBC,wBAAwB,EACxBC,mBAAmB,EACnBC,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAa,EACbC,UAAU,QACL,wBAAwB;AAC/B,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,gBAAgB;MACnB,OAAO;QAAE,GAAGS,KAAK;QAAEH,OAAO,EAAE;MAAK,CAAC;IACpC,KAAKL,gBAAgB;IACrB,KAAKL,mBAAmB;IACxB,KAAKE,wBAAwB;IAC7B,KAAKC,mBAAmB;MACtB,OAAO;QACL,GAAGU,KAAK;QACRJ,SAAS,EAAEK,MAAM,CAACE,OAAO;QACzBN,OAAO,EAAE;MACX,CAAC;IACH,KAAKJ,aAAa;IAClB,KAAKL,gBAAgB;IACrB,KAAKM,UAAU;MACb,OAAO;QACL,GAAGM,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACE,OAAO;QACrBN,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}