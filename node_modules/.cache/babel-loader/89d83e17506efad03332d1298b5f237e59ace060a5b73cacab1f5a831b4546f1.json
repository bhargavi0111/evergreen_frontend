{"ast":null,"code":"// // components/SettingsIcon.js\n// import React, { useState } from 'react';\n// import './SettingsPanel.css'; // Add your styles here\n// import { FaCog } from 'react-icons/fa'; // Using react-icons for settings icon\n\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\n//   const [showSettings, setShowSettings] = useState(false);\n\n//   const toggleSettingsPanel = () => {\n//     setShowSettings(!showSettings);\n//   };\n\n//   return (\n//     <div className=\"settings-container\">\n//       <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\n//         <FaCog />\n//       </div>\n//       {showSettings && (\n//         <div className=\"settings-panel\">\n//           <h3>Settings</h3>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               onChange={onToggleHeaderStyle}\n//             />\n//             Static Header\n//           </label>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SettingsPanel;\n\n// SettingsPanel.js\n// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import setTheme  from '../../redux/actions/themeActions';\n\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\n//   const dispatch = useDispatch();\n//   const currentTheme = useSelector((state) => state.theme.theme);\n\n//   const changeTheme = (newTheme) => {\n//     dispatch(setTheme(newTheme));\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\n//   };\n\n//   return (\n//     <div className=\"settings-panel\">\n//       <h3>Choose Theme</h3>\n//       <div className=\"theme-options\">\n//         <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\n//           Light\n//         </button>\n//         <button onClick={() => changeTheme('dark')} className={currentTheme === 'dark' ? 'active' : ''}>\n//           Dark\n//         </button>\n//         <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\n//           Nature\n//         </button>\n//       </div>\n//       <button onClick={onToggleHeaderStyle}>\n//         Toggle Sticky Header\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default SettingsPanel;\n\n// import React, { useState } from 'react';\n// import { FaCog } from 'react-icons/fa'; // FontAwesome cog icon\n// import { useDispatch, useSelector } from 'react-redux';\n// import setTheme from '../../redux/actions/themeActions';\n// import './SettingsPanel.css'; // Import the CSS styling\n\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\n//   const [showSettings, setShowSettings] = useState(false); // State to toggle panel visibility\n//   const dispatch = useDispatch();\n//   const currentTheme = useSelector((state) => state.theme.theme);\n\n//   const toggleSettingsPanel = () => {\n//     setShowSettings(!showSettings);\n//   };\n\n//   const changeTheme = (newTheme) => {\n//     dispatch(setTheme(newTheme));\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\n//   };\n\n//   return (\n//     <div className=\"settings-container\">\n//       {/* Settings Icon */}\n//       <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\n//         <FaCog />\n//       </div>\n\n//       {/* Conditionally Render Settings Panel */}\n//       {showSettings && (\n//         <div className=\"settings-panel\">\n//           <h3>Settings</h3>\n//           <div className=\"theme-options\">\n//             <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\n//               Light\n//             </button>\n//             <button onClick={() => changeTheme('dark')} className={currentTheme === 'dark' ? 'active' : ''}>\n//               Dark\n//             </button>\n//             <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\n//               Nature\n//             </button>\n//           </div>\n//           <label>\n//             <input type=\"checkbox\" onChange={onToggleHeaderStyle} />\n//             Static Header\n//           </label>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SettingsPanel;\n\n// import React, { useState } from 'react';\n// import { FaCog } from 'react-icons/fa';\n// import { useDispatch, useSelector } from 'react-redux';\n// import setTheme from '../../redux/actions/themeActions';\n// import './SettingsPanel.css'; // Ensure to link the updated CSS\n\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\n//   const [showSettings, setShowSettings] = useState(false); // State to toggle panel visibility\n//   const dispatch = useDispatch();\n//   const currentTheme = useSelector((state) => state.theme.theme);\n\n//   const toggleSettingsPanel = () => {\n//     setShowSettings(!showSettings);\n//   };\n\n//   const changeTheme = (newTheme) => {\n//     dispatch(setTheme(newTheme));\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\n//   };\n\n//   return (\n//     <>\n//       {/* Settings Icon */}\n//       <div className=\"settings-container\">\n//         <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\n//           <FaCog />\n//         </div>\n//       </div>\n\n//       {/* Overlay when settings panel is open */}\n//       {showSettings && <div className=\"settings-backdrop\" onClick={toggleSettingsPanel} />}\n\n//       {/* Settings Panel - Renders as a popup */}\n//       {showSettings && (\n//         <div className=\"settings-panel\">\n//           <h3>Settings</h3>\n//           <div className=\"theme-options\">\n//             <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\n//               Light\n//             </button>\n\n//             <button onClick={() => changeTheme('earthy')} className={currentTheme === 'earthy' ? 'active' : ''}>\n//               Earthy\n//             </button>\n//             <button onClick={() => changeTheme('pastel')} className={currentTheme === 'pastel' ? 'active' : ''}>\n//               Pastel\n//             </button>\n//             <button onClick={() => changeTheme('vintage')} className={currentTheme === 'vintage' ? 'active' : ''}>\n//               Vintage\n//             </button>\n//             <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\n//               Nature\n//             </button>\n//           </div>\n//           <label>\n//             <input type=\"checkbox\" onChange={onToggleHeaderStyle} />\n//             Static Header\n//           </label>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default SettingsPanel;","map":{"version":3,"names":[],"sources":["C:/Users/bhargavi_g/Documents/Nursery_live/frontend/src/Components/SettingsPanel/SettingsPanel.jsx"],"sourcesContent":["// // components/SettingsIcon.js\r\n// import React, { useState } from 'react';\r\n// import './SettingsPanel.css'; // Add your styles here\r\n// import { FaCog } from 'react-icons/fa'; // Using react-icons for settings icon\r\n\r\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\r\n//   const [showSettings, setShowSettings] = useState(false);\r\n\r\n//   const toggleSettingsPanel = () => {\r\n//     setShowSettings(!showSettings);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"settings-container\">\r\n//       <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\r\n//         <FaCog />\r\n//       </div>\r\n//       {showSettings && (\r\n//         <div className=\"settings-panel\">\r\n//           <h3>Settings</h3>\r\n//           <label>\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               onChange={onToggleHeaderStyle}\r\n//             />\r\n//             Static Header\r\n//           </label>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SettingsPanel;\r\n\r\n// SettingsPanel.js\r\n// import React from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import setTheme  from '../../redux/actions/themeActions';\r\n\r\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\r\n//   const dispatch = useDispatch();\r\n//   const currentTheme = useSelector((state) => state.theme.theme);\r\n\r\n//   const changeTheme = (newTheme) => {\r\n//     dispatch(setTheme(newTheme));\r\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"settings-panel\">\r\n//       <h3>Choose Theme</h3>\r\n//       <div className=\"theme-options\">\r\n//         <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\r\n//           Light\r\n//         </button>\r\n//         <button onClick={() => changeTheme('dark')} className={currentTheme === 'dark' ? 'active' : ''}>\r\n//           Dark\r\n//         </button>\r\n//         <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\r\n//           Nature\r\n//         </button>\r\n//       </div>\r\n//       <button onClick={onToggleHeaderStyle}>\r\n//         Toggle Sticky Header\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SettingsPanel;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { FaCog } from 'react-icons/fa'; // FontAwesome cog icon\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import setTheme from '../../redux/actions/themeActions';\r\n// import './SettingsPanel.css'; // Import the CSS styling\r\n\r\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\r\n//   const [showSettings, setShowSettings] = useState(false); // State to toggle panel visibility\r\n//   const dispatch = useDispatch();\r\n//   const currentTheme = useSelector((state) => state.theme.theme);\r\n\r\n//   const toggleSettingsPanel = () => {\r\n//     setShowSettings(!showSettings);\r\n//   };\r\n\r\n//   const changeTheme = (newTheme) => {\r\n//     dispatch(setTheme(newTheme));\r\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"settings-container\">\r\n//       {/* Settings Icon */}\r\n//       <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\r\n//         <FaCog />\r\n//       </div>\r\n\r\n//       {/* Conditionally Render Settings Panel */}\r\n//       {showSettings && (\r\n//         <div className=\"settings-panel\">\r\n//           <h3>Settings</h3>\r\n//           <div className=\"theme-options\">\r\n//             <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\r\n//               Light\r\n//             </button>\r\n//             <button onClick={() => changeTheme('dark')} className={currentTheme === 'dark' ? 'active' : ''}>\r\n//               Dark\r\n//             </button>\r\n//             <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\r\n//               Nature\r\n//             </button>\r\n//           </div>\r\n//           <label>\r\n//             <input type=\"checkbox\" onChange={onToggleHeaderStyle} />\r\n//             Static Header\r\n//           </label>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SettingsPanel;\r\n\r\n// import React, { useState } from 'react';\r\n// import { FaCog } from 'react-icons/fa';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import setTheme from '../../redux/actions/themeActions';\r\n// import './SettingsPanel.css'; // Ensure to link the updated CSS\r\n\r\n// const SettingsPanel = ({ onToggleHeaderStyle }) => {\r\n//   const [showSettings, setShowSettings] = useState(false); // State to toggle panel visibility\r\n//   const dispatch = useDispatch();\r\n//   const currentTheme = useSelector((state) => state.theme.theme);\r\n\r\n//   const toggleSettingsPanel = () => {\r\n//     setShowSettings(!showSettings);\r\n//   };\r\n\r\n//   const changeTheme = (newTheme) => {\r\n//     dispatch(setTheme(newTheme));\r\n//     document.documentElement.setAttribute('data-theme', newTheme); // Change CSS variables\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       {/* Settings Icon */}\r\n//       <div className=\"settings-container\">\r\n//         <div className=\"settings-icon\" onClick={toggleSettingsPanel}>\r\n//           <FaCog />\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Overlay when settings panel is open */}\r\n//       {showSettings && <div className=\"settings-backdrop\" onClick={toggleSettingsPanel} />}\r\n\r\n//       {/* Settings Panel - Renders as a popup */}\r\n//       {showSettings && (\r\n//         <div className=\"settings-panel\">\r\n//           <h3>Settings</h3>\r\n//           <div className=\"theme-options\">\r\n//             <button onClick={() => changeTheme('light')} className={currentTheme === 'light' ? 'active' : ''}>\r\n//               Light\r\n//             </button>\r\n       \r\n//             <button onClick={() => changeTheme('earthy')} className={currentTheme === 'earthy' ? 'active' : ''}>\r\n//               Earthy\r\n//             </button>\r\n//             <button onClick={() => changeTheme('pastel')} className={currentTheme === 'pastel' ? 'active' : ''}>\r\n//               Pastel\r\n//             </button>\r\n//             <button onClick={() => changeTheme('vintage')} className={currentTheme === 'vintage' ? 'active' : ''}>\r\n//               Vintage\r\n//             </button>\r\n//             <button onClick={() => changeTheme('nature')} className={currentTheme === 'nature' ? 'active' : ''}>\r\n//               Nature\r\n//             </button>\r\n//           </div>\r\n//           <label>\r\n//             <input type=\"checkbox\" onChange={onToggleHeaderStyle} />\r\n//             Static Header\r\n//           </label>\r\n//         </div>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SettingsPanel;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}